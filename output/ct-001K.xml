<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="default.xsl"?>
<fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="true"
numbered="true"
show-heading="true"
show-metadata="true"
expanded="true"
root="false"><fr:frontmatter><fr:anchor>639</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>ct-001K</fr:addr><fr:route>ct-001K.xml</fr:route><fr:title>Cartesian morphisms</fr:title><fr:date><fr:year>2024</fr:year><fr:month>6</fr:month><fr:day>25</fr:day></fr:date></fr:frontmatter><fr:mainmatter><fr:p>
  Let <fr:tex>F \colon \mathcal { C } \to \mathcal { D }</fr:tex> be a functor.
  A morphism <fr:tex>f \colon X \to Y</fr:tex> in the domain category <fr:tex>\mathcal { C }</fr:tex> is said to be <fr:em><fr:strong>cartesian</fr:strong></fr:em> over a morphism <fr:tex>u \colon I \to J</fr:tex> in the codomain category <fr:tex>\mathcal { D }</fr:tex> if the following conditions are satisfied.
</fr:p><fr:ul><fr:li><fr:tex>Ff = u</fr:tex>.
  </fr:li>
  <fr:li><fr:tex>f</fr:tex> is universal among morphisms <fr:tex>g \colon Z \to Y</fr:tex> in <fr:tex>\mathcal { C }</fr:tex> such that <fr:tex>Fg</fr:tex> factors through <fr:tex>u</fr:tex> via some morphism <fr:tex>w \colon FZ \to I</fr:tex>, i.e., for any such <fr:tex>g</fr:tex> there is a unique morphism <fr:tex>h \colon Z \to X</fr:tex> such that <fr:tex>fh = g</fr:tex>.
    
    
      
      <fr:embedded-tex
hash="a95df27f616202b458007ddb9aeba42e"><fr:embedded-tex-preamble>
         
   \RequirePackage {tikz}
   \RequirePackage {amsmath}
   \usetikzlibrary {backgrounds, intersections, calc, spath3, fit}

   \definecolor {catccolor}{RGB}{255,244,138}
   \tikzstyle {dot}=[circle, draw=black, fill=black, minimum size=1mm, inner sep=0mm]
   \tikzstyle {catc}=[catccolor!60]
   \tikzstyle {catd}=[orange!40]
   \tikzstyle {cate}=[red!40]
   \tikzstyle {catf}=[blue!10]
   \tikzstyle {catg}=[green!25]


   \tikzstyle {blue halo}=[fill=blue!10, opacity=0.7, rounded corners]
   \tikzstyle {white halo}=[fill=white, opacity=0.7, rounded corners]

   \NewDocumentCommand \CreateRect {D&lt;&gt;{} m m}{
     \path 
      coordinate (#1nw)
      ++(#2,-#3) coordinate (#1se)
      coordinate (#1sw) at (#1se -| #1nw)
      coordinate (#1ne) at (#1nw -| #1se)
    ;

     \path [spath/save = #1north] (#1nw) to (#1ne);
     \path [spath/save = #1west] (#1nw) to (#1sw);
     \path [spath/save = #1east] (#1ne) to (#1se);
     \path [spath/save = #1south] (#1sw) to (#1se);
  }
 
         
   % appears to be necessary
  \usepackage{tikz, tikz-cd, mathtools, amssymb, stmaryrd}
  \usetikzlibrary{matrix,arrows}
  \usetikzlibrary{backgrounds,fit,positioning,calc,shapes}
  \usetikzlibrary{decorations.pathreplacing}
  \usetikzlibrary{decorations.pathmorphing}
  \usetikzlibrary{decorations.markings}

  % basic settings
  \tikzset{
    diagram/.style = {
      on grid,
      node distance=2cm,
      commutative diagrams/every diagram,
      line width = .5pt,
      every node/.append style = {
        commutative diagrams/every cell,
      },
    },
    morphism/.style = {
      auto=left,
      node font=\scriptsize,
    },
    phantom/.style = {
      commutative diagrams/phantom,
      node font=\scriptsize,
      sloped,
    },
    between/.style args = {#1 and #2}{
      at = ($(#1)!0.5!(#2)$)
    },
    desc/.style = {anchor=center,fill=white,inner sep=3pt},
    offset/.style args = {#1} {commutative diagrams/shift right={#1}},
    cross over/.style = {
      commutative diagrams/crossing over
    },
    adjoint/.style = {
      phantom,
      every to/.append style = {
        edge node = {node [sloped,allow upside down,auto=false] {$\dashv$}}
      }
    },
  }

  % pullback and pushout
  \tikzset{
    pullback/.style = {
      append after command = {
        \pgfextra{
          \draw ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
        }
      }
    },
    pushout/.style = {
      append after command={
        \pgfextra{
          \draw ($(\tikzlastnode) + (-.2cm,.5cm)$) -- ++(-0.3cm,0) -- ++(0,-0.3cm);
        }
      }
    },
  }

  % arrow styles
  \tikzset{
    exists/.style = {
      densely dashed
    },
    embedding/.style = {
      {right hook}-&gt;
    },
    cover/.style = {
      -{Triangle[open]}
    },
  }

  \newlength{\dontworryaboutit} % no idea what it does

  \tikzset{
    inline diagram/.style = {
      commutative diagrams/every diagram,
      commutative diagrams/cramped,
      line width = .5pt,
      every node/.append style = {
        commutative diagrams/every cell,
        anchor = base,
        inner sep = 0pt
      },
      every path/.append style = {
        outer xsep = 2pt
      }
    }
  }
  
  % macros for drawing commutative squares
  % adapted from Jon Sterling's macros (https://git.sr.ht/~jonsterling/article-template/tree/main/item/local-tikz.sty)
  \tikzset{
    square/nw/.style = {},
    square/ne/.style = {},
    square/se/.style = {},
    square/sw/.style = {},
    square/north/.style = {-&gt;},
    square/south/.style = {-&gt;},
    square/west/.style = {-&gt;},
    square/east/.style = {-&gt;},
    square/north/node/.style = {above},
    square/south/node/.style = {below},
    square/west/node/.style = {left},
    square/east/node/.style = {right},
  }

  \ExplSyntaxOn
  \keys_define:nn { jon-tikz/diagram } {
    nw .tl_set:N = \l_jon_tikz_diagram_nw,
    sw .tl_set:N = \l_jon_tikz_diagram_sw,
    ne .tl_set:N = \l_jon_tikz_diagram_ne,
    se .tl_set:N = \l_jon_tikz_diagram_se,

    width .tl_set:N = \l_jon_tikz_diagram_width,
    height .tl_set:N = \l_jon_tikz_diagram_height,

    north .tl_set:N = \l_jon_tikz_diagram_north,
    south .tl_set:N = \l_jon_tikz_diagram_south,
    west .tl_set:N = \l_jon_tikz_diagram_west,
    east .tl_set:N = \l_jon_tikz_diagram_east,

    nw/style .code:n = {\tikzset{square/nw/.style = {#1}}},
    sw/style .code:n = {\tikzset{square/sw/.style = {#1}}},
    ne/style .code:n = {\tikzset{square/ne/.style = {#1}}},
    se/style .code:n = {\tikzset{square/se/.style = {#1}}},

    north/style .code:n = {\tikzset{square/north/.style = {#1}}},
    north/node/style .code:n = {\tikzset{square/north/node/.style = {#1}}},
    south/style .code:n = {\tikzset{square/south/.style = {#1}}},
    south/node/style .code:n = {\tikzset{square/south/node/.style = {#1}}},
    west/style .code:n = {\tikzset{square/west/.style = {#1}}},
    west/node/style .code:n = {\tikzset{square/west/node/.style = {#1}}},
    east/style .code:n = {\tikzset{square/east/.style = {#1}}},
    east/node/style .code:n = {\tikzset{square/east/node/.style = {#1}}},

    draft .meta:n = {
      nw = {nw},
      sw = {sw},
      se = {se},
      ne = {ne},
      north = {north},
      south = {south},
      west = {west},
      east = {east},
    }
  }

  \tl_set:Nn \l_jon_tikz_diagram_width { 2cm }
  \tl_set:Nn \l_jon_tikz_diagram_height { 2cm }


  \cs_new:Nn \__jon_tikz_render_square:nn {
    \group_begin:
    \keys_set:nn {jon-tikz/diagram} {#2} {
      \node (#1nw) [square/nw] {$\l_jon_tikz_diagram_nw$};
      \node (#1sw) [below = \l_jon_tikz_diagram_height~of~#1nw,square/sw] {$\l_jon_tikz_diagram_sw$};
      \draw[morphism,square/west] (#1nw) to node [square/west/node] {$\l_jon_tikz_diagram_west$} (#1sw);

      \node (#1ne) [right = \l_jon_tikz_diagram_width~of~#1nw,square/ne] {$\l_jon_tikz_diagram_ne$};
      \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
      \draw[morphism,square/north] (#1nw) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
      \draw[morphism,square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
      \draw[morphism,square/south] (#1sw) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
    }
    \group_end:
  }

  % the optional argument allows one to specify a prefix to positions
  \NewDocumentCommand\SpliceDiagramSquare{O{}m}{
    \__jon_tikz_render_square:nn {#1} {#2}
  }

  \NewDocumentCommand\DiagramSquare{O{}O{}m}{
    \begin{tikzpicture}[diagram,#2,baseline=(#1sw.base)]
      \__jon_tikz_render_square:nn {#1} {#3}
    \end{tikzpicture}
  }
  \ExplSyntaxOff
 
      </fr:embedded-tex-preamble><fr:embedded-tex-body>
       \begin {tikzpicture}[diagram]
         \node  (1) {$Z$};
         \node  [below = of 1] (2) {$X$};
         \node  [right = of 2] (3) {$Y$};
         \node  [between = 1 and 2] (ref1) {};
         \node  [below = of 2] (4) {$FZ$};
         \node  [below = of 4] (5) {$I$};
         \node  [between = 4 and 5] (ref2) {};
         \node  [right = of 5] (6) {$J$};
         \node  [left = of ref1] (7) {$ \mathcal { C } $};
         \node  [left = of ref2] (8) {$ \mathcal { D } $};
         \draw  [-&gt;,morphism,exists] (1) to node[swap] {$h$} (2);
         \draw  [-&gt;,morphism] (1) to node {$g$} (3);
         \draw  [-&gt;,morphism] (2) to node[swap] {$f$} (3);
         \draw  [-&gt;,morphism] (4) to node[swap] {$w$} (5);
         \draw  [-&gt;,morphism] (4) to node {$Fg$} (6);
         \draw  [-&gt;,morphism] (5) to node[swap] {$u$} (6);
         \draw  [-&gt;,morphism] (7) to node[swap] {$F$} (8);
       \end {tikzpicture}
    </fr:embedded-tex-body></fr:embedded-tex></fr:li></fr:ul></fr:mainmatter><fr:backmatter><fr:contributions></fr:contributions><fr:context></fr:context><fr:related></fr:related><fr:backlinks><fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="true"
root="false"><fr:frontmatter><fr:anchor>637</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>log-000M</fr:addr><fr:route>log-000M.xml</fr:route><fr:title>Comprehension category</fr:title><fr:date><fr:year>2024</fr:year><fr:month>6</fr:month><fr:day>25</fr:day></fr:date></fr:frontmatter><fr:mainmatter><fr:p>
  A <fr:em><fr:strong>comprehension category</fr:strong></fr:em> is a functor <fr:tex>P \colon \mathcal { E } \to { \mathcal { B } }^{ \to }</fr:tex> such that the following conditions are satisfied.
</fr:p><fr:ul><fr:li>
    The composite <fr:tex>\mathsf { cod }  P \colon \mathcal { E } \to \mathcal { B }</fr:tex> is a <fr:link
href="ct-001L.xml"
type="local"
addr="ct-001L">fibration</fr:link>.
  </fr:li>
  <fr:li><fr:tex>P</fr:tex> maps <fr:link
href="ct-001K.xml"
type="local"
addr="ct-001K">cartesian morphisms</fr:link> (w.r.t. <fr:tex>\mathsf { cod }  P</fr:tex>) in <fr:tex>\mathcal { E }</fr:tex> to cartesian morphisms (w.r.t. <fr:tex>\mathsf { cod }</fr:tex>) in <fr:tex>{ \mathcal { B } }^{ \to }</fr:tex>, i.e., to pullback squares in <fr:tex>\mathcal { B }</fr:tex>.
  </fr:li></fr:ul></fr:mainmatter></fr:tree><fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="true"
root="false"><fr:frontmatter><fr:anchor>638</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>ct-001L</fr:addr><fr:route>ct-001L.xml</fr:route><fr:title>Fibered category</fr:title><fr:date><fr:year>2024</fr:year><fr:month>6</fr:month><fr:day>25</fr:day></fr:date></fr:frontmatter><fr:mainmatter><fr:p>
  A functor <fr:tex>F \colon \mathcal { C } \to \mathcal { D }</fr:tex> is a <fr:em><fr:strong>fibration</fr:strong></fr:em> (or <fr:tex>F</fr:tex> is a <fr:em><fr:strong>fibered category over <fr:tex>\mathcal { D }</fr:tex></fr:strong></fr:em>) if for every object <fr:tex>Y  \in   \mathcal { C }</fr:tex> and morphism <fr:tex>u \colon I \to FY</fr:tex> in <fr:tex>\mathcal { D }</fr:tex>, there is a <fr:link
href="ct-001K.xml"
type="local"
addr="ct-001K">cartesian morphism</fr:link> <fr:tex>f</fr:tex> above <fr:tex>u</fr:tex>.
</fr:p></fr:mainmatter></fr:tree></fr:backlinks><fr:references></fr:references></fr:backmatter></fr:tree>