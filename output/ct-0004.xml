<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="default.xsl"?>
<fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="true"
numbered="true"
show-heading="true"
show-metadata="true"
expanded="true"
root="false"><fr:frontmatter><fr:anchor>443</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>ct-0004</fr:addr><fr:route>ct-0004.xml</fr:route><fr:title>Equivalence relation</fr:title><fr:date><fr:year>2024</fr:year><fr:month>5</fr:month><fr:day>28</fr:day></fr:date><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Let <fr:tex>(a,b) \colon  R  \rightarrowtail  A  \times  A</fr:tex> be a relation in a category with finite limits. <fr:tex>(a,b)</fr:tex> is said to be an <fr:em><fr:strong>equivalence relation</fr:strong></fr:em> if it is <fr:link
href="ct-0001.xml"
type="local"
addr="ct-0001">reflexive</fr:link>, <fr:link
href="ct-0002.xml"
type="local"
addr="ct-0002">symmetric</fr:link>, and <fr:link
href="ct-0003.xml"
type="local"
addr="ct-0003">transitive</fr:link>.</fr:p></fr:mainmatter><fr:backmatter><fr:contributions></fr:contributions><fr:context></fr:context><fr:related><fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="true"
root="false"><fr:frontmatter><fr:anchor>437</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>ct-0001</fr:addr><fr:route>ct-0001.xml</fr:route><fr:title>Reflexive relation</fr:title><fr:date><fr:year>2024</fr:year><fr:month>5</fr:month><fr:day>28</fr:day></fr:date><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Let <fr:tex>(a,b) \colon  R  \rightarrowtail  A  \times  A</fr:tex> be a relation in a category with finite limits. <fr:tex>(a,b)</fr:tex> is said to be <fr:em><fr:strong>reflexive</fr:strong></fr:em> if the diagonal relation <fr:tex>\Delta \colon  A  \rightarrowtail  A  \times  A</fr:tex> factors through <fr:tex>(a,b)</fr:tex>, i.e., there is a map <fr:tex>\rho \colon  A  \to  R</fr:tex> such that <fr:tex>a \rho  = b \rho  =  \mathsf {id}_{ A }</fr:tex>.</fr:p></fr:mainmatter></fr:tree><fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="true"
root="false"><fr:frontmatter><fr:anchor>439</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>ct-0002</fr:addr><fr:route>ct-0002.xml</fr:route><fr:title>Symmetric relation</fr:title><fr:date><fr:year>2024</fr:year><fr:month>5</fr:month><fr:day>28</fr:day></fr:date><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Let <fr:tex>(a,b) \colon  R  \rightarrowtail  A  \times  A</fr:tex> be a relation in a category with finite limits. <fr:tex>(a,b)</fr:tex> is said to be <fr:em><fr:strong>symmetric</fr:strong></fr:em> if the <fr:em>twisted</fr:em> relation <fr:tex>(b,a)</fr:tex> factors through <fr:tex>(a,b)</fr:tex>, i.e., there is a map <fr:tex>\sigma \colon  R  \to  R</fr:tex> such that <fr:tex>a \sigma  = b</fr:tex> and <fr:tex>b \sigma  = a</fr:tex>.</fr:p></fr:mainmatter></fr:tree><fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="true"
root="false"><fr:frontmatter><fr:anchor>441</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>ct-0003</fr:addr><fr:route>ct-0003.xml</fr:route><fr:title>Transitive relation</fr:title><fr:date><fr:year>2024</fr:year><fr:month>5</fr:month><fr:day>28</fr:day></fr:date><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Let <fr:tex>(a,b) \colon  R  \rightarrowtail  A  \times  A</fr:tex> be a relation in a category with finite limits. <fr:tex>(a,b)</fr:tex> is said to be <fr:em><fr:strong>transitive</fr:strong></fr:em> if the relation <fr:tex>(ap,bq) \colon  R  \times _{A} R  \rightarrowtail  A  \times  A</fr:tex> factors through <fr:tex>(a,b)</fr:tex>, i.e., there is a map <fr:tex>\tau \colon  R  \times _{A} R  \to  R</fr:tex> such that <fr:tex>a \tau  = ap</fr:tex> and <fr:tex>b \tau  = bq</fr:tex>, where <fr:tex>p</fr:tex> and <fr:tex>q</fr:tex> are the projection maps of the following pullback.</fr:p>
  
    
    <fr:embedded-tex
hash="1fd9a3b4ddb4ef10a565f418094f8f2c"><fr:embedded-tex-preamble>
       
   \RequirePackage {tikz}
   \RequirePackage {amsmath}
   \usetikzlibrary {backgrounds, intersections, calc, spath3, fit}

   \definecolor {catccolor}{RGB}{255,244,138}
   \tikzstyle {dot}=[circle, draw=black, fill=black, minimum size=1mm, inner sep=0mm]
   \tikzstyle {catc}=[catccolor!60]
   \tikzstyle {catd}=[orange!40]
   \tikzstyle {cate}=[red!40]
   \tikzstyle {catf}=[blue!10]
   \tikzstyle {catg}=[green!25]


   \tikzstyle {blue halo}=[fill=blue!10, opacity=0.7, rounded corners]
   \tikzstyle {white halo}=[fill=white, opacity=0.7, rounded corners]

   \NewDocumentCommand \CreateRect {D&lt;&gt;{} m m}{
     \path 
      coordinate (#1nw)
      ++(#2,-#3) coordinate (#1se)
      coordinate (#1sw) at (#1se -| #1nw)
      coordinate (#1ne) at (#1nw -| #1se)
    ;

     \path [spath/save = #1north] (#1nw) to (#1ne);
     \path [spath/save = #1west] (#1nw) to (#1sw);
     \path [spath/save = #1east] (#1ne) to (#1se);
     \path [spath/save = #1south] (#1sw) to (#1se);
  }
 
       
    \usepackage{tikz, tikz-cd, mathtools, amssymb, stmaryrd, quiver}
  \usetikzlibrary{matrix,arrows}
  \usetikzlibrary{backgrounds,fit,positioning,calc,shapes}
  \usetikzlibrary{decorations.pathreplacing}
  \usetikzlibrary{decorations.pathmorphing}
  \usetikzlibrary{decorations.markings}

  % basic settings
  \tikzset{
    diagram/.style = {
      on grid,
      node distance=2cm,
      commutative diagrams/every diagram,
      line width = .5pt,
      every node/.append style = {
        commutative diagrams/every cell,
      },
    },
    morphism/.style = {
      auto=left,
      font=\scriptsize,
    },
    desc/.style = {anchor=center,fill=white,inner sep=3pt},
    % /tikz/pos=&lt;fraction&gt; is a key already
    offset/.style args = {#1} {commutative diagrams/shift right={#1}},
  }

  % pullback and pushout
  \tikzset{
    pullback/.style = {
      append after command = {
        \pgfextra{
          \draw ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
        }
      }
    },
    pushout/.style = {
      append after command={
        \pgfextra{
          \draw ($(\tikzlastnode) + (-.2cm,.5cm)$) -- ++(-0.3cm,0) -- ++(0,-0.3cm);
        }
      }
    },
  }

  % arrow styles
  \tikzset{
    fibration/.style = {
      -{Triangle[open]}
    },
    etale/.style = {
      -{Triangle[open]}
    },
    etale cover/.style= {
      &gt;={Triangle[open]},-&gt;.&gt;
    },
    opfibration/.style = {
      -{Triangle}
    },
    lies over/.style = {
      |-{Triangle[open]}
    },
    op lies over/.style = {
      |-{Triangle}
    },
    embedding/.style = {
      {right hook}-&gt;
    },
    open immersion/.style = {
      {right hook}-{Triangle[open]}
    },
    closed immersion/.style = {
      {right hook}-{Triangle}
    },
    closed immersion*/.style = {
      {left hook}-{Triangle}
    },
    embedding*/.style = {
      {left hook}-&gt;
    },
    open immersion*/.style = {
      {left hook}-{Triangle[open]}
    },
    exists/.style = {
      densely dashed
    },
    equal/.style = {
      double
    },
  }

  \newlength{\dontworryaboutit}

  \tikzset{
    inline diagram/.style = {
      commutative diagrams/every diagram,
      commutative diagrams/cramped,
      line width = .5pt,
      every node/.append style = {
        commutative diagrams/every cell,
        anchor = base,
        inner sep = 0pt
      },
      every path/.append style = {
        outer xsep = 2pt
      }
    }
  }
  
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  % Primitives for drawing commutative squares
  \tikzset{
    square/nw/.style = {},
    square/ne/.style = {},
    square/se/.style = {},
    square/sw/.style = {},
    square/north/.style = {-&gt;},
    square/south/.style = {-&gt;},
    square/west/.style = {-&gt;},
    square/east/.style = {-&gt;},
    square/north/node/.style = {above},
    square/south/node/.style = {below},
    square/west/node/.style = {left},
    square/east/node/.style = {right},
  }

  \ExplSyntaxOn

  \bool_new:N \l_jon_glue_west

  \keys_define:nn { jon-tikz/diagram } {
    nw .tl_set:N = \l_jon_tikz_diagram_nw,
    sw .tl_set:N = \l_jon_tikz_diagram_sw,
    ne .tl_set:N = \l_jon_tikz_diagram_ne,
    se .tl_set:N = \l_jon_tikz_diagram_se,

    width .tl_set:N = \l_jon_tikz_diagram_width,
    height .tl_set:N = \l_jon_tikz_diagram_height,

    north .tl_set:N = \l_jon_tikz_diagram_north,
    south .tl_set:N = \l_jon_tikz_diagram_south,
    west .tl_set:N = \l_jon_tikz_diagram_west,
    east .tl_set:N = \l_jon_tikz_diagram_east,

    nw/style .code:n = {\tikzset{square/nw/.style = {#1}}},
    sw/style .code:n = {\tikzset{square/sw/.style = {#1}}},
    ne/style .code:n = {\tikzset{square/ne/.style = {#1}}},
    se/style .code:n = {\tikzset{square/se/.style = {#1}}},

    glue .choice:,
    glue / west .code:n = {\bool_set:Nn \l_jon_glue_west \c_true_bool},

    glue~target .tl_set:N = \l_jon_tikz_glue_target,

    north/style .code:n = {\tikzset{square/north/.style = {#1}}},
    north/node/style .code:n = {\tikzset{square/north/node/.style = {#1}}},
    south/style .code:n = {\tikzset{square/south/.style = {#1}}},
    south/node/style .code:n = {\tikzset{square/south/node/.style = {#1}}},
    west/style .code:n = {\tikzset{square/west/.style = {#1}}},
    west/node/style .code:n = {\tikzset{square/west/node/.style = {#1}}},
    east/style .code:n = {\tikzset{square/east/.style = {#1}}},
    east/node/style .code:n = {\tikzset{square/east/node/.style = {#1}}},

    draft .meta:n = {
      nw = {\__jon_tikz_diagram_fmt_placeholder:n {nw}},
      sw = {\__jon_tikz_diagram_fmt_placeholder:n {sw}},
      se = {\__jon_tikz_diagram_fmt_placeholder:n {se}},
      ne = {\__jon_tikz_diagram_fmt_placeholder:n {ne}},
      north = {\__jon_tikz_diagram_fmt_placeholder:n {north}},
      south = {\__jon_tikz_diagram_fmt_placeholder:n {south}},
      west = {\__jon_tikz_diagram_fmt_placeholder:n {west}},
      east = {\__jon_tikz_diagram_fmt_placeholder:n {east}},
    }
  }

  \tl_set:Nn \l_jon_tikz_diagram_width { 2cm }
  \tl_set:Nn \l_jon_tikz_diagram_height { 2cm }


  \cs_new:Npn \__jon_tikz_diagram_fmt_placeholder:n #1 {
    \texttt{\textcolor{red}{#1}}
  }

  \keys_set:nn { jon-tikz/diagram } {
    glue~target = {},
  }


  \cs_new:Nn \__jon_tikz_render_square:nn {
    \group_begin:
    \keys_set:nn {jon-tikz/diagram} {#2}
    \bool_if:nTF \l_jon_glue_west {
      \node (#1ne) [right = \l_jon_tikz_diagram_width~of~\l_jon_tikz_glue_target ne,square/ne] {$\l_jon_tikz_diagram_ne$};
      \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
      \draw[morphism,square/north] (\l_jon_tikz_glue_target ne) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
      \draw[morphism,square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
      \draw[morphism,square/south] (\l_jon_tikz_glue_target se) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
    } {
      \node (#1nw) [square/nw] {$\l_jon_tikz_diagram_nw$};
      \node (#1sw) [below = \l_jon_tikz_diagram_height~of~#1nw,square/sw] {$\l_jon_tikz_diagram_sw$};
      \draw[morphism,square/west] (#1nw) to node [square/west/node] {$\l_jon_tikz_diagram_west$} (#1sw);

      \node (#1ne) [right = \l_jon_tikz_diagram_width~of~#1nw,square/ne] {$\l_jon_tikz_diagram_ne$};
      \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
      \draw[morphism,square/north] (#1nw) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
      \draw[morphism,square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
      \draw[morphism,square/south] (#1sw) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
    }
    \group_end:
  }

  \NewDocumentCommand\SpliceDiagramSquare{D&lt;&gt;{}m}{
    \__jon_tikz_render_square:nn {#1} {#2}
  }


  \NewDocumentCommand\DiagramSquare{D&lt;&gt;{}O{}m}{
    \begin{tikzpicture}[diagram,#2,baseline=(#1sw.base)]
      \__jon_tikz_render_square:nn {#1} {#3}
    \end{tikzpicture}
  }

  \ExplSyntaxOff
  %
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  % Primitives for drawing adjunction diagrams
  \tikzset{
    adj/w/.style = {},
    adj/e/.style = {},
    adj/left/.style = {-&gt;},
    adj/right/.style = {-&gt;},
    adj/left/node/.style = {above},
    adj/right/node/.style = {below},
  }

  \ExplSyntaxOn

  \bool_new:N \l_fnd_glue_west

  \keys_define:nn { fnd-tikz/adj-diagram } {
    w .tl_set:N = \l_fnd_tikz_adj_diagram_w,
    e .tl_set:N = \l_fnd_tikz_adj_diagram_e,

    width .tl_set:N = \l_fnd_tikz_adj_diagram_width,

    left .tl_set:N = \l_fnd_tikz_adj_diagram_left,
    right .tl_set:N = \l_fnd_tikz_adj_diagram_right,

    glue .choice:,
    glue / west .code:n = {\bool_set:Nn \l_fnd_glue_west \c_true_bool},
    glue~target .tl_set:N = \l_fnd_tikz_glue_target,

    w/style .code:n = {\tikzset{adj/w/.style = {#1}}},
    e/style .code:n = {\tikzset{adj/e/.style = {#1}}},

    left/style .code:n = {\tikzset{adj/left/.style = {#1}}},
    left/node/style .code:n = {\tikzset{adj/left/node/.style = {#1}}},
    right/style .code:n = {\tikzset{adj/right/.style = {#1}}},
    right/node/style .code:n = {\tikzset{adj/right/node/.style = {#1}}},

    draft .meta:n = {
      e = {\__fnd_tikz_adj_diagram_fmt_placeholder:n {e}},
      w = {\__fnd_tikz_adj_diagram_fmt_placeholder:n {w}},
      left = {\__fnd_tikz_adj_diagram_fmt_placeholder:n {left}},
      right = {\__fnd_tikz_adj_diagram_fmt_placeholder:n {right}},
    }
  }

  \tl_set:Nn \l_fnd_tikz_adj_diagram_width { 2cm }

  \cs_new:Npn \__fnd_tikz_adj_diagram_fmt_placeholder:n #1 {
    \texttt{\textcolor{red}{#1}}
  }

  \keys_set:nn { fnd-tikz/adj-diagram } {
    glue~target = {},
  }

  \cs_new:Nn \__fnd_tikz_render_adj_diagram:n {
    \group_begin:
    \keys_set:nn {fnd-tikz/adj-diagram} {#1} {
      % gluing will be implemented when I need it
      \node (w) [adj/w] {$\l_fnd_tikz_adj_diagram_w$};
      \node (e) [right=\l_fnd_tikz_adj_diagram_width~of~w,adj/e] {$\l_fnd_tikz_adj_diagram_e$};
        \draw [morphism,adj/left,offset=.15cm] (e) to node[adj/left/node] (n) {$\l_fnd_tikz_adj_diagram_left$} (w);
        \draw [morphism,adj/right,offset=.15cm] (w) to node[adj/right/node] (s) {$\l_fnd_tikz_adj_diagram_right$} (e);
        \path [morphism] (s) to node[rotate=-90] {$\dashv$} (n);
    }
    \group_end:
  }

  \NewDocumentCommand\AdjDiagram{m}{
    \begin{tikzpicture}[diagram]
      \__fnd_tikz_render_adj_diagram:n {#1}
    \end{tikzpicture}
  }
  
  \ExplSyntaxOff
  %
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 
    </fr:embedded-tex-preamble><fr:embedded-tex-body>
   \DiagramSquare {
    nw = R  \times _{A} R,
    ne = R,
    sw = R,
    se = A,
    nw/style = pullback,
    north = q,
    west = p,
    south = b,
    east = a,
  }
</fr:embedded-tex-body></fr:embedded-tex>
  
</fr:mainmatter></fr:tree></fr:related><fr:backlinks><fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="true"
root="false"><fr:frontmatter><fr:anchor>433</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>ct-0005</fr:addr><fr:route>ct-0005.xml</fr:route><fr:title>Effective <fr:link
href="ct-0004.xml"
type="local"
addr="ct-0004">equivalence relation</fr:link></fr:title><fr:date><fr:year>2024</fr:year><fr:month>5</fr:month><fr:day>28</fr:day></fr:date><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>An <fr:link
href="ct-0004.xml"
type="local"
addr="ct-0004">equivalence relation</fr:link> is said to be <fr:em><fr:strong>effective</fr:strong></fr:em> if it is the kernel pair of some morphism.</fr:p></fr:mainmatter></fr:tree><fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="true"
root="false"><fr:frontmatter><fr:anchor>435</fr:anchor><fr:taxon>Lemma</fr:taxon><fr:addr>topo-0009</fr:addr><fr:route>topo-0009.xml</fr:route><fr:title>Every <fr:link
href="ct-0004.xml"
type="local"
addr="ct-0004">equivalence relation</fr:link> in a topos is <fr:link
href="ct-0005.xml"
type="local"
addr="ct-0005">effective</fr:link></fr:title><fr:date><fr:year>2024</fr:year><fr:month>5</fr:month><fr:day>28</fr:day></fr:date><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter>
  
    
    <fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="false"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"><fr:frontmatter><fr:anchor>313</fr:anchor><fr:taxon>Proof</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>5</fr:month><fr:day>28</fr:day></fr:date><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors><fr:parent>topo-0009</fr:parent></fr:frontmatter><fr:mainmatter>
  <fr:link
href="todo.xml"
type="local"
addr="todo">TODO</fr:link>
</fr:mainmatter></fr:tree>
  
</fr:mainmatter></fr:tree></fr:backlinks><fr:references></fr:references></fr:backmatter></fr:tree>