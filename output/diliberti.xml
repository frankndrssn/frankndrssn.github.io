<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="default.xsl"?>
<fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="true"
numbered="true"
show-heading="true"
show-metadata="true"
expanded="true"
root="false"><fr:frontmatter><fr:anchor>755</fr:anchor><fr:taxon>Person</fr:taxon><fr:addr>diliberti</fr:addr><fr:route>diliberti.xml</fr:route><fr:title>Ivan Di Liberti</fr:title><fr:meta
name="external">https://diliberti.github.io/</fr:meta><fr:meta
name="institution"><fr:link
href="gu.xml"
type="local"
addr="gu">GÃ¶teborgs universitet</fr:link></fr:meta><fr:meta
name="position">Postdoctoral Researcher</fr:meta></fr:frontmatter><fr:mainmatter><fr:p>Postdoctoral Researcher in the logic group at <fr:link
href="gu.xml"
type="local"
addr="gu">GÃ¶teborgs universitet</fr:link>.</fr:p></fr:mainmatter><fr:backmatter><fr:contributions></fr:contributions><fr:context></fr:context><fr:related><fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="true"
root="false"><fr:frontmatter><fr:anchor>754</fr:anchor><fr:taxon>Institution</fr:taxon><fr:addr>gu</fr:addr><fr:route>gu.xml</fr:route><fr:title>GÃ¶teborgs universitet</fr:title><fr:meta
name="external">https://www.gu.se/</fr:meta></fr:frontmatter><fr:mainmatter></fr:mainmatter></fr:tree></fr:related><fr:backlinks><fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="true"
root="true"><fr:frontmatter><fr:anchor>752</fr:anchor><fr:addr>fnd-0001</fr:addr><fr:route>index.xml</fr:route><fr:title>Frank Tsai</fr:title><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors><fr:meta
name="author">false</fr:meta></fr:frontmatter><fr:mainmatter><fr:p>I am joining <fr:link
href="gu.xml"
type="local"
addr="gu">GÃ¶teborgs universitet</fr:link> ðŸ‡¸ðŸ‡ª in the autumn of 2024. Before that, I was a student mentored by <fr:link
href="andrewhirsch.xml"
type="local"
addr="andrewhirsch">Andrew Hirsch</fr:link> at the <fr:link
href="ub.xml"
type="local"
addr="ub">University at Buffalo</fr:link> ðŸ‡ºðŸ‡¸, where I earned my Master's degree in computer science. I am mainly interested in category theory and topos theory and their application in logic. Currently, I am mentored by <fr:link
href="diliberti.xml"
type="local"
addr="diliberti">Ivan Di Liberti</fr:link>.</fr:p>
  
  
  <fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="false"
numbered="false"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"><fr:frontmatter><fr:anchor>456</fr:anchor><fr:addr>fnd-0002</fr:addr><fr:route>fnd-0002.xml</fr:route><fr:title>About this website</fr:title><fr:date><fr:year>2024</fr:year><fr:month>5</fr:month><fr:day>27</fr:day></fr:date><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>This website is created using <fr:link
href="jonsterling.xml"
type="local"
addr="jonsterling">Jon Sterling</fr:link>'s <fr:link
href="forester.xml"
type="local"
addr="forester">Forester</fr:link> tool. The purpose of this website is to maintain my personal notes.</fr:p><fr:p>I often find myself rewriting the same things across several notebooks because it is faster than finding and referencing the relevant notes. <fr:link
href="forester.xml"
type="local"
addr="forester">Forester</fr:link> seems to have the features I want, so I am giving this tool a try.</fr:p></fr:mainmatter></fr:tree>
<fr:p>To navigate this forest, press <fr:code>Ctrl + K</fr:code>.</fr:p><fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="true"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"><fr:frontmatter><fr:anchor>531</fr:anchor><fr:title>Math forest</fr:title><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors><fr:parent>fnd-0001</fr:parent></fr:frontmatter><fr:mainmatter><fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="false"
numbered="true"
show-heading="false"
show-metadata="false"
expanded="true"
root="false"><fr:frontmatter><fr:anchor>530</fr:anchor></fr:frontmatter><fr:mainmatter><fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="false"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"><fr:frontmatter><fr:anchor>458</fr:anchor><fr:taxon>Lemma</fr:taxon><fr:addr>ct-0007</fr:addr><fr:route>ct-0007.xml</fr:route><fr:title><fr:link
href="ct-0006.xml"
type="local"
addr="ct-0006">Subobject</fr:link> pseudofunctor</fr:title><fr:date><fr:year>2024</fr:year><fr:month>5</fr:month><fr:day>29</fr:day></fr:date><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>If <fr:tex>\mathcal { C }</fr:tex> has pullbacks then the assignment <fr:tex>A  \mapsto   \mathsf { Sub } (A)</fr:tex> can be extended to a pseudofunctor <fr:tex>\mathsf { Sub } \colon   \mathcal { C } ^ \mathrm {op}   \to   \mathsf { CAT }</fr:tex>.</fr:p>
    
      
      <fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="false"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"><fr:frontmatter><fr:anchor>244</fr:anchor><fr:taxon>Proof</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>5</fr:month><fr:day>29</fr:day></fr:date><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors><fr:parent>ct-0007</fr:parent></fr:frontmatter><fr:mainmatter>
  It suffices to specify an action on morphisms. Let <fr:tex>f \colon  A  \to  B</fr:tex> be an arbitrary morphism. Since monomorphisms are stable under pullback, the pullback functor <fr:tex>f ^{*} \colon   \mathcal { C } _{/ B }   \to   \mathcal { C } _{/ A }</fr:tex> restricts to a functor <fr:tex>f ^{*} \colon   \mathsf { Sub } (B)  \to   \mathsf { Sub } (A)</fr:tex>. Then pseudofunctoriality follows from the following facts:
  <fr:ul><fr:li>Let <fr:tex>f \colon  A  \to  B</fr:tex>, <fr:tex>g \colon  B  \to  C</fr:tex>, and <fr:tex>m \colon  C'  \rightarrowtail  C</fr:tex> be given. By the <fr:link
href="ct-0008.xml"
type="local"
addr="ct-0008">pasting lemma of pullbacks</fr:link>, the pullback <fr:tex>f ^{*} g ^{*} (m)</fr:tex> is also a pullback along <fr:tex>gf</fr:tex>. Thus, the universal property of pullbacks guarantees that <fr:tex>(gf) ^{*} (m)  \cong   f ^{*} g ^{*} (m)</fr:tex> in <fr:tex>\mathsf { Sub } (A)</fr:tex>.</fr:li>
    <fr:li>The pullback against the identity is always an isomorphism. Thus, for any <fr:tex>m \colon  A'  \rightarrowtail  A</fr:tex>, <fr:tex>\mathsf {id} _{ A } ^{*} (m)  \cong  m</fr:tex> in <fr:tex>\mathsf { Sub } (A)</fr:tex>.</fr:li></fr:ul>
</fr:mainmatter></fr:tree>
    
  </fr:mainmatter></fr:tree><fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="false"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"><fr:frontmatter><fr:anchor>460</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>ct-0009</fr:addr><fr:route>ct-0009.xml</fr:route><fr:title><fr:link
href="ct-0006.xml"
type="local"
addr="ct-0006">Subobject</fr:link> classifier</fr:title><fr:date><fr:year>2024</fr:year><fr:month>5</fr:month><fr:day>29</fr:day></fr:date><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Let <fr:tex>\mathcal { C }</fr:tex> be a cartesian category. The <fr:em><fr:strong>subobject classifier</fr:strong></fr:em> of <fr:tex>\mathcal { C }</fr:tex> is the terminal object (if it exists) of the category <fr:tex>\mathcal { S } _{ \mathcal { C } }</fr:tex> defined by the following data:</fr:p>
  <html:table
xmlns:html="http://www.w3.org/1999/xhtml">
  
  <html:tr>
    
  <html:th>Objects</html:th>

    
  <html:th>Morphisms</html:th>

  </html:tr>

  
  <html:tr>
    
  <html:td>An object of <fr:tex>\mathcal { S } _{ \mathcal { C } }</fr:tex> is a pair <fr:tex>(A, m)</fr:tex>, where <fr:tex>A</fr:tex> is an object in <fr:tex>\mathcal { C }</fr:tex> and <fr:tex>m \colon  A'  \rightarrowtail  A</fr:tex> is a subobject.</html:td>

    
  <html:td>A morphism <fr:tex>(A,m)  \to  (B,n)</fr:tex> is a morphism <fr:tex>f \colon  A  \to  B</fr:tex> in <fr:tex>\mathcal { C }</fr:tex> such that the following square is a pullback.
      
    
      
      <fr:embedded-tex
hash="8af428247e3f04c43427be58917e1473"><fr:embedded-tex-preamble>
         
   \RequirePackage {tikz}
   \RequirePackage {amsmath}
   \usetikzlibrary {backgrounds, intersections, calc, spath3, fit}

   \definecolor {catccolor}{RGB}{255,244,138}
   \tikzstyle {dot}=[circle, draw=black, fill=black, minimum size=1mm, inner sep=0mm]
   \tikzstyle {catc}=[catccolor!60]
   \tikzstyle {catd}=[orange!40]
   \tikzstyle {cate}=[red!40]
   \tikzstyle {catf}=[blue!10]
   \tikzstyle {catg}=[green!25]


   \tikzstyle {blue halo}=[fill=blue!10, opacity=0.7, rounded corners]
   \tikzstyle {white halo}=[fill=white, opacity=0.7, rounded corners]

   \NewDocumentCommand \CreateRect {D&lt;&gt;{} m m}{
     \path 
      coordinate (#1nw)
      ++(#2,-#3) coordinate (#1se)
      coordinate (#1sw) at (#1se -| #1nw)
      coordinate (#1ne) at (#1nw -| #1se)
    ;

     \path [spath/save = #1north] (#1nw) to (#1ne);
     \path [spath/save = #1west] (#1nw) to (#1sw);
     \path [spath/save = #1east] (#1ne) to (#1se);
     \path [spath/save = #1south] (#1sw) to (#1se);
  }
 
         
    \usepackage{tikz, tikz-cd, mathtools, amssymb, stmaryrd, quiver}
  \usetikzlibrary{matrix,arrows}
  \usetikzlibrary{backgrounds,fit,positioning,calc,shapes}
  \usetikzlibrary{decorations.pathreplacing}
  \usetikzlibrary{decorations.pathmorphing}
  \usetikzlibrary{decorations.markings}

  % basic settings
  \tikzset{
    diagram/.style = {
      on grid,
      node distance=2cm,
      commutative diagrams/every diagram,
      line width = .5pt,
      every node/.append style = {
        commutative diagrams/every cell,
      },
    },
    morphism/.style = {
      auto=left,
      font=\scriptsize,
    },
    desc/.style = {anchor=center,fill=white,inner sep=3pt},
    % /tikz/pos=&lt;fraction&gt; is a key already
    offset/.style args = {#1} {commutative diagrams/shift right={#1}},
  }

  % pullback and pushout
  \tikzset{
    pullback/.style = {
      append after command = {
        \pgfextra{
          \draw ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
        }
      }
    },
    pushout/.style = {
      append after command={
        \pgfextra{
          \draw ($(\tikzlastnode) + (-.2cm,.5cm)$) -- ++(-0.3cm,0) -- ++(0,-0.3cm);
        }
      }
    },
  }

  % arrow styles
  \tikzset{
    fibration/.style = {
      -{Triangle[open]}
    },
    etale/.style = {
      -{Triangle[open]}
    },
    etale cover/.style= {
      &gt;={Triangle[open]},-&gt;.&gt;
    },
    opfibration/.style = {
      -{Triangle}
    },
    lies over/.style = {
      |-{Triangle[open]}
    },
    op lies over/.style = {
      |-{Triangle}
    },
    embedding/.style = {
      {right hook}-&gt;
    },
    open immersion/.style = {
      {right hook}-{Triangle[open]}
    },
    closed immersion/.style = {
      {right hook}-{Triangle}
    },
    closed immersion*/.style = {
      {left hook}-{Triangle}
    },
    embedding*/.style = {
      {left hook}-&gt;
    },
    open immersion*/.style = {
      {left hook}-{Triangle[open]}
    },
    exists/.style = {
      densely dashed
    },
    equal/.style = {
      double
    },
  }

  \newlength{\dontworryaboutit}

  \tikzset{
    inline diagram/.style = {
      commutative diagrams/every diagram,
      commutative diagrams/cramped,
      line width = .5pt,
      every node/.append style = {
        commutative diagrams/every cell,
        anchor = base,
        inner sep = 0pt
      },
      every path/.append style = {
        outer xsep = 2pt
      }
    }
  }
  
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  % Primitives for drawing commutative squares
  \tikzset{
    square/nw/.style = {},
    square/ne/.style = {},
    square/se/.style = {},
    square/sw/.style = {},
    square/north/.style = {-&gt;},
    square/south/.style = {-&gt;},
    square/west/.style = {-&gt;},
    square/east/.style = {-&gt;},
    square/north/node/.style = {above},
    square/south/node/.style = {below},
    square/west/node/.style = {left},
    square/east/node/.style = {right},
  }

  \ExplSyntaxOn

  \bool_new:N \l_jon_glue_west

  \keys_define:nn { jon-tikz/diagram } {
    nw .tl_set:N = \l_jon_tikz_diagram_nw,
    sw .tl_set:N = \l_jon_tikz_diagram_sw,
    ne .tl_set:N = \l_jon_tikz_diagram_ne,
    se .tl_set:N = \l_jon_tikz_diagram_se,

    width .tl_set:N = \l_jon_tikz_diagram_width,
    height .tl_set:N = \l_jon_tikz_diagram_height,

    north .tl_set:N = \l_jon_tikz_diagram_north,
    south .tl_set:N = \l_jon_tikz_diagram_south,
    west .tl_set:N = \l_jon_tikz_diagram_west,
    east .tl_set:N = \l_jon_tikz_diagram_east,

    nw/style .code:n = {\tikzset{square/nw/.style = {#1}}},
    sw/style .code:n = {\tikzset{square/sw/.style = {#1}}},
    ne/style .code:n = {\tikzset{square/ne/.style = {#1}}},
    se/style .code:n = {\tikzset{square/se/.style = {#1}}},

    glue .choice:,
    glue / west .code:n = {\bool_set:Nn \l_jon_glue_west \c_true_bool},

    glue~target .tl_set:N = \l_jon_tikz_glue_target,

    north/style .code:n = {\tikzset{square/north/.style = {#1}}},
    north/node/style .code:n = {\tikzset{square/north/node/.style = {#1}}},
    south/style .code:n = {\tikzset{square/south/.style = {#1}}},
    south/node/style .code:n = {\tikzset{square/south/node/.style = {#1}}},
    west/style .code:n = {\tikzset{square/west/.style = {#1}}},
    west/node/style .code:n = {\tikzset{square/west/node/.style = {#1}}},
    east/style .code:n = {\tikzset{square/east/.style = {#1}}},
    east/node/style .code:n = {\tikzset{square/east/node/.style = {#1}}},

    draft .meta:n = {
      nw = {\__jon_tikz_diagram_fmt_placeholder:n {nw}},
      sw = {\__jon_tikz_diagram_fmt_placeholder:n {sw}},
      se = {\__jon_tikz_diagram_fmt_placeholder:n {se}},
      ne = {\__jon_tikz_diagram_fmt_placeholder:n {ne}},
      north = {\__jon_tikz_diagram_fmt_placeholder:n {north}},
      south = {\__jon_tikz_diagram_fmt_placeholder:n {south}},
      west = {\__jon_tikz_diagram_fmt_placeholder:n {west}},
      east = {\__jon_tikz_diagram_fmt_placeholder:n {east}},
    }
  }

  \tl_set:Nn \l_jon_tikz_diagram_width { 2cm }
  \tl_set:Nn \l_jon_tikz_diagram_height { 2cm }


  \cs_new:Npn \__jon_tikz_diagram_fmt_placeholder:n #1 {
    \texttt{\textcolor{red}{#1}}
  }

  \keys_set:nn { jon-tikz/diagram } {
    glue~target = {},
  }


  \cs_new:Nn \__jon_tikz_render_square:nn {
    \group_begin:
    \keys_set:nn {jon-tikz/diagram} {#2}
    \bool_if:nTF \l_jon_glue_west {
      \node (#1ne) [right = \l_jon_tikz_diagram_width~of~\l_jon_tikz_glue_target ne,square/ne] {$\l_jon_tikz_diagram_ne$};
      \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
      \draw[morphism,square/north] (\l_jon_tikz_glue_target ne) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
      \draw[morphism,square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
      \draw[morphism,square/south] (\l_jon_tikz_glue_target se) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
    } {
      \node (#1nw) [square/nw] {$\l_jon_tikz_diagram_nw$};
      \node (#1sw) [below = \l_jon_tikz_diagram_height~of~#1nw,square/sw] {$\l_jon_tikz_diagram_sw$};
      \draw[morphism,square/west] (#1nw) to node [square/west/node] {$\l_jon_tikz_diagram_west$} (#1sw);

      \node (#1ne) [right = \l_jon_tikz_diagram_width~of~#1nw,square/ne] {$\l_jon_tikz_diagram_ne$};
      \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
      \draw[morphism,square/north] (#1nw) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
      \draw[morphism,square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
      \draw[morphism,square/south] (#1sw) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
    }
    \group_end:
  }

  \NewDocumentCommand\SpliceDiagramSquare{D&lt;&gt;{}m}{
    \__jon_tikz_render_square:nn {#1} {#2}
  }


  \NewDocumentCommand\DiagramSquare{D&lt;&gt;{}O{}m}{
    \begin{tikzpicture}[diagram,#2,baseline=(#1sw.base)]
      \__jon_tikz_render_square:nn {#1} {#3}
    \end{tikzpicture}
  }

  \ExplSyntaxOff
  %
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  % Primitives for drawing adjunction diagrams
  \tikzset{
    adj/w/.style = {},
    adj/e/.style = {},
    adj/left/.style = {-&gt;},
    adj/right/.style = {-&gt;},
    adj/left/node/.style = {above},
    adj/right/node/.style = {below},
  }

  \ExplSyntaxOn

  \bool_new:N \l_fnd_glue_west

  \keys_define:nn { fnd-tikz/adj-diagram } {
    w .tl_set:N = \l_fnd_tikz_adj_diagram_w,
    e .tl_set:N = \l_fnd_tikz_adj_diagram_e,

    width .tl_set:N = \l_fnd_tikz_adj_diagram_width,

    left .tl_set:N = \l_fnd_tikz_adj_diagram_left,
    right .tl_set:N = \l_fnd_tikz_adj_diagram_right,

    glue .choice:,
    glue / west .code:n = {\bool_set:Nn \l_fnd_glue_west \c_true_bool},
    glue~target .tl_set:N = \l_fnd_tikz_glue_target,

    w/style .code:n = {\tikzset{adj/w/.style = {#1}}},
    e/style .code:n = {\tikzset{adj/e/.style = {#1}}},

    left/style .code:n = {\tikzset{adj/left/.style = {#1}}},
    left/node/style .code:n = {\tikzset{adj/left/node/.style = {#1}}},
    right/style .code:n = {\tikzset{adj/right/.style = {#1}}},
    right/node/style .code:n = {\tikzset{adj/right/node/.style = {#1}}},

    draft .meta:n = {
      e = {\__fnd_tikz_adj_diagram_fmt_placeholder:n {e}},
      w = {\__fnd_tikz_adj_diagram_fmt_placeholder:n {w}},
      left = {\__fnd_tikz_adj_diagram_fmt_placeholder:n {left}},
      right = {\__fnd_tikz_adj_diagram_fmt_placeholder:n {right}},
    }
  }

  \tl_set:Nn \l_fnd_tikz_adj_diagram_width { 2cm }

  \cs_new:Npn \__fnd_tikz_adj_diagram_fmt_placeholder:n #1 {
    \texttt{\textcolor{red}{#1}}
  }

  \keys_set:nn { fnd-tikz/adj-diagram } {
    glue~target = {},
  }

  \cs_new:Nn \__fnd_tikz_render_adj_diagram:n {
    \group_begin:
    \keys_set:nn {fnd-tikz/adj-diagram} {#1} {
      % gluing will be implemented when I need it
      \node (w) [adj/w] {$\l_fnd_tikz_adj_diagram_w$};
      \node (e) [right=\l_fnd_tikz_adj_diagram_width~of~w,adj/e] {$\l_fnd_tikz_adj_diagram_e$};
        \draw [morphism,adj/left,offset=.15cm] (e) to node[adj/left/node] (n) {$\l_fnd_tikz_adj_diagram_left$} (w);
        \draw [morphism,adj/right,offset=.15cm] (w) to node[adj/right/node] (s) {$\l_fnd_tikz_adj_diagram_right$} (e);
        \path [morphism] (s) to node[rotate=-90] {$\dashv$} (n);
    }
    \group_end:
  }

  \NewDocumentCommand\AdjDiagram{m}{
    \begin{tikzpicture}[diagram]
      \__fnd_tikz_render_adj_diagram:n {#1}
    \end{tikzpicture}
  }
  
  \ExplSyntaxOff
  %
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 
      </fr:embedded-tex-preamble><fr:embedded-tex-body>
         \DiagramSquare {
          nw = A',
          nw/style = pullback,
          ne = B',
          sw = A,
          se = B,
          south = f,
          west = m,
          west/style = {&gt;-&gt;},
          east = n,
          east/style = {&gt;-&gt;},
        }
      </fr:embedded-tex-body></fr:embedded-tex>
    
  
    </html:td>
 
  </html:tr>

</html:table>
<fr:p>Identities and compositions of <fr:tex>\mathcal { S } _{ \mathcal { C } }</fr:tex> are inherited from <fr:tex>\mathcal { C }</fr:tex>.</fr:p>
    
      
      <fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="false"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"><fr:frontmatter><fr:anchor>267</fr:anchor><fr:taxon>Proof</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>5</fr:month><fr:day>29</fr:day></fr:date><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors><fr:parent>ct-0009</fr:parent></fr:frontmatter><fr:mainmatter>
  For the definition to make sense, we need to show that <fr:tex>\mathcal { S } _{ \mathcal { C } }</fr:tex> is a category.
  Since identities and compositions are inherited from <fr:tex>\mathcal { C }</fr:tex>, it suffices to show the followings:
  <fr:ol><fr:li>
      For any object <fr:tex>A  \in   \mathcal { C }</fr:tex> and any subobject <fr:tex>m \colon  A'  \rightarrowtail  A</fr:tex>, the identity morphism <fr:tex>\mathsf {id} _{ A }</fr:tex> gives the required pullback.
      
    
      
      <fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="false"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"><fr:frontmatter><fr:anchor>263</fr:anchor><fr:taxon>Proof</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>5</fr:month><fr:day>29</fr:day></fr:date><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors><fr:parent>ct-0009</fr:parent></fr:frontmatter><fr:mainmatter>
        The following diagram is a pullback.
        
    
      
      <fr:embedded-tex
hash="7f6b7727a0db5e0bfeb72c800a1c7dbe"><fr:embedded-tex-preamble>
         
   \RequirePackage {tikz}
   \RequirePackage {amsmath}
   \usetikzlibrary {backgrounds, intersections, calc, spath3, fit}

   \definecolor {catccolor}{RGB}{255,244,138}
   \tikzstyle {dot}=[circle, draw=black, fill=black, minimum size=1mm, inner sep=0mm]
   \tikzstyle {catc}=[catccolor!60]
   \tikzstyle {catd}=[orange!40]
   \tikzstyle {cate}=[red!40]
   \tikzstyle {catf}=[blue!10]
   \tikzstyle {catg}=[green!25]


   \tikzstyle {blue halo}=[fill=blue!10, opacity=0.7, rounded corners]
   \tikzstyle {white halo}=[fill=white, opacity=0.7, rounded corners]

   \NewDocumentCommand \CreateRect {D&lt;&gt;{} m m}{
     \path 
      coordinate (#1nw)
      ++(#2,-#3) coordinate (#1se)
      coordinate (#1sw) at (#1se -| #1nw)
      coordinate (#1ne) at (#1nw -| #1se)
    ;

     \path [spath/save = #1north] (#1nw) to (#1ne);
     \path [spath/save = #1west] (#1nw) to (#1sw);
     \path [spath/save = #1east] (#1ne) to (#1se);
     \path [spath/save = #1south] (#1sw) to (#1se);
  }
 
         
    \usepackage{tikz, tikz-cd, mathtools, amssymb, stmaryrd, quiver}
  \usetikzlibrary{matrix,arrows}
  \usetikzlibrary{backgrounds,fit,positioning,calc,shapes}
  \usetikzlibrary{decorations.pathreplacing}
  \usetikzlibrary{decorations.pathmorphing}
  \usetikzlibrary{decorations.markings}

  % basic settings
  \tikzset{
    diagram/.style = {
      on grid,
      node distance=2cm,
      commutative diagrams/every diagram,
      line width = .5pt,
      every node/.append style = {
        commutative diagrams/every cell,
      },
    },
    morphism/.style = {
      auto=left,
      font=\scriptsize,
    },
    desc/.style = {anchor=center,fill=white,inner sep=3pt},
    % /tikz/pos=&lt;fraction&gt; is a key already
    offset/.style args = {#1} {commutative diagrams/shift right={#1}},
  }

  % pullback and pushout
  \tikzset{
    pullback/.style = {
      append after command = {
        \pgfextra{
          \draw ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
        }
      }
    },
    pushout/.style = {
      append after command={
        \pgfextra{
          \draw ($(\tikzlastnode) + (-.2cm,.5cm)$) -- ++(-0.3cm,0) -- ++(0,-0.3cm);
        }
      }
    },
  }

  % arrow styles
  \tikzset{
    fibration/.style = {
      -{Triangle[open]}
    },
    etale/.style = {
      -{Triangle[open]}
    },
    etale cover/.style= {
      &gt;={Triangle[open]},-&gt;.&gt;
    },
    opfibration/.style = {
      -{Triangle}
    },
    lies over/.style = {
      |-{Triangle[open]}
    },
    op lies over/.style = {
      |-{Triangle}
    },
    embedding/.style = {
      {right hook}-&gt;
    },
    open immersion/.style = {
      {right hook}-{Triangle[open]}
    },
    closed immersion/.style = {
      {right hook}-{Triangle}
    },
    closed immersion*/.style = {
      {left hook}-{Triangle}
    },
    embedding*/.style = {
      {left hook}-&gt;
    },
    open immersion*/.style = {
      {left hook}-{Triangle[open]}
    },
    exists/.style = {
      densely dashed
    },
    equal/.style = {
      double
    },
  }

  \newlength{\dontworryaboutit}

  \tikzset{
    inline diagram/.style = {
      commutative diagrams/every diagram,
      commutative diagrams/cramped,
      line width = .5pt,
      every node/.append style = {
        commutative diagrams/every cell,
        anchor = base,
        inner sep = 0pt
      },
      every path/.append style = {
        outer xsep = 2pt
      }
    }
  }
  
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  % Primitives for drawing commutative squares
  \tikzset{
    square/nw/.style = {},
    square/ne/.style = {},
    square/se/.style = {},
    square/sw/.style = {},
    square/north/.style = {-&gt;},
    square/south/.style = {-&gt;},
    square/west/.style = {-&gt;},
    square/east/.style = {-&gt;},
    square/north/node/.style = {above},
    square/south/node/.style = {below},
    square/west/node/.style = {left},
    square/east/node/.style = {right},
  }

  \ExplSyntaxOn

  \bool_new:N \l_jon_glue_west

  \keys_define:nn { jon-tikz/diagram } {
    nw .tl_set:N = \l_jon_tikz_diagram_nw,
    sw .tl_set:N = \l_jon_tikz_diagram_sw,
    ne .tl_set:N = \l_jon_tikz_diagram_ne,
    se .tl_set:N = \l_jon_tikz_diagram_se,

    width .tl_set:N = \l_jon_tikz_diagram_width,
    height .tl_set:N = \l_jon_tikz_diagram_height,

    north .tl_set:N = \l_jon_tikz_diagram_north,
    south .tl_set:N = \l_jon_tikz_diagram_south,
    west .tl_set:N = \l_jon_tikz_diagram_west,
    east .tl_set:N = \l_jon_tikz_diagram_east,

    nw/style .code:n = {\tikzset{square/nw/.style = {#1}}},
    sw/style .code:n = {\tikzset{square/sw/.style = {#1}}},
    ne/style .code:n = {\tikzset{square/ne/.style = {#1}}},
    se/style .code:n = {\tikzset{square/se/.style = {#1}}},

    glue .choice:,
    glue / west .code:n = {\bool_set:Nn \l_jon_glue_west \c_true_bool},

    glue~target .tl_set:N = \l_jon_tikz_glue_target,

    north/style .code:n = {\tikzset{square/north/.style = {#1}}},
    north/node/style .code:n = {\tikzset{square/north/node/.style = {#1}}},
    south/style .code:n = {\tikzset{square/south/.style = {#1}}},
    south/node/style .code:n = {\tikzset{square/south/node/.style = {#1}}},
    west/style .code:n = {\tikzset{square/west/.style = {#1}}},
    west/node/style .code:n = {\tikzset{square/west/node/.style = {#1}}},
    east/style .code:n = {\tikzset{square/east/.style = {#1}}},
    east/node/style .code:n = {\tikzset{square/east/node/.style = {#1}}},

    draft .meta:n = {
      nw = {\__jon_tikz_diagram_fmt_placeholder:n {nw}},
      sw = {\__jon_tikz_diagram_fmt_placeholder:n {sw}},
      se = {\__jon_tikz_diagram_fmt_placeholder:n {se}},
      ne = {\__jon_tikz_diagram_fmt_placeholder:n {ne}},
      north = {\__jon_tikz_diagram_fmt_placeholder:n {north}},
      south = {\__jon_tikz_diagram_fmt_placeholder:n {south}},
      west = {\__jon_tikz_diagram_fmt_placeholder:n {west}},
      east = {\__jon_tikz_diagram_fmt_placeholder:n {east}},
    }
  }

  \tl_set:Nn \l_jon_tikz_diagram_width { 2cm }
  \tl_set:Nn \l_jon_tikz_diagram_height { 2cm }


  \cs_new:Npn \__jon_tikz_diagram_fmt_placeholder:n #1 {
    \texttt{\textcolor{red}{#1}}
  }

  \keys_set:nn { jon-tikz/diagram } {
    glue~target = {},
  }


  \cs_new:Nn \__jon_tikz_render_square:nn {
    \group_begin:
    \keys_set:nn {jon-tikz/diagram} {#2}
    \bool_if:nTF \l_jon_glue_west {
      \node (#1ne) [right = \l_jon_tikz_diagram_width~of~\l_jon_tikz_glue_target ne,square/ne] {$\l_jon_tikz_diagram_ne$};
      \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
      \draw[morphism,square/north] (\l_jon_tikz_glue_target ne) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
      \draw[morphism,square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
      \draw[morphism,square/south] (\l_jon_tikz_glue_target se) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
    } {
      \node (#1nw) [square/nw] {$\l_jon_tikz_diagram_nw$};
      \node (#1sw) [below = \l_jon_tikz_diagram_height~of~#1nw,square/sw] {$\l_jon_tikz_diagram_sw$};
      \draw[morphism,square/west] (#1nw) to node [square/west/node] {$\l_jon_tikz_diagram_west$} (#1sw);

      \node (#1ne) [right = \l_jon_tikz_diagram_width~of~#1nw,square/ne] {$\l_jon_tikz_diagram_ne$};
      \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
      \draw[morphism,square/north] (#1nw) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
      \draw[morphism,square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
      \draw[morphism,square/south] (#1sw) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
    }
    \group_end:
  }

  \NewDocumentCommand\SpliceDiagramSquare{D&lt;&gt;{}m}{
    \__jon_tikz_render_square:nn {#1} {#2}
  }


  \NewDocumentCommand\DiagramSquare{D&lt;&gt;{}O{}m}{
    \begin{tikzpicture}[diagram,#2,baseline=(#1sw.base)]
      \__jon_tikz_render_square:nn {#1} {#3}
    \end{tikzpicture}
  }

  \ExplSyntaxOff
  %
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  % Primitives for drawing adjunction diagrams
  \tikzset{
    adj/w/.style = {},
    adj/e/.style = {},
    adj/left/.style = {-&gt;},
    adj/right/.style = {-&gt;},
    adj/left/node/.style = {above},
    adj/right/node/.style = {below},
  }

  \ExplSyntaxOn

  \bool_new:N \l_fnd_glue_west

  \keys_define:nn { fnd-tikz/adj-diagram } {
    w .tl_set:N = \l_fnd_tikz_adj_diagram_w,
    e .tl_set:N = \l_fnd_tikz_adj_diagram_e,

    width .tl_set:N = \l_fnd_tikz_adj_diagram_width,

    left .tl_set:N = \l_fnd_tikz_adj_diagram_left,
    right .tl_set:N = \l_fnd_tikz_adj_diagram_right,

    glue .choice:,
    glue / west .code:n = {\bool_set:Nn \l_fnd_glue_west \c_true_bool},
    glue~target .tl_set:N = \l_fnd_tikz_glue_target,

    w/style .code:n = {\tikzset{adj/w/.style = {#1}}},
    e/style .code:n = {\tikzset{adj/e/.style = {#1}}},

    left/style .code:n = {\tikzset{adj/left/.style = {#1}}},
    left/node/style .code:n = {\tikzset{adj/left/node/.style = {#1}}},
    right/style .code:n = {\tikzset{adj/right/.style = {#1}}},
    right/node/style .code:n = {\tikzset{adj/right/node/.style = {#1}}},

    draft .meta:n = {
      e = {\__fnd_tikz_adj_diagram_fmt_placeholder:n {e}},
      w = {\__fnd_tikz_adj_diagram_fmt_placeholder:n {w}},
      left = {\__fnd_tikz_adj_diagram_fmt_placeholder:n {left}},
      right = {\__fnd_tikz_adj_diagram_fmt_placeholder:n {right}},
    }
  }

  \tl_set:Nn \l_fnd_tikz_adj_diagram_width { 2cm }

  \cs_new:Npn \__fnd_tikz_adj_diagram_fmt_placeholder:n #1 {
    \texttt{\textcolor{red}{#1}}
  }

  \keys_set:nn { fnd-tikz/adj-diagram } {
    glue~target = {},
  }

  \cs_new:Nn \__fnd_tikz_render_adj_diagram:n {
    \group_begin:
    \keys_set:nn {fnd-tikz/adj-diagram} {#1} {
      % gluing will be implemented when I need it
      \node (w) [adj/w] {$\l_fnd_tikz_adj_diagram_w$};
      \node (e) [right=\l_fnd_tikz_adj_diagram_width~of~w,adj/e] {$\l_fnd_tikz_adj_diagram_e$};
        \draw [morphism,adj/left,offset=.15cm] (e) to node[adj/left/node] (n) {$\l_fnd_tikz_adj_diagram_left$} (w);
        \draw [morphism,adj/right,offset=.15cm] (w) to node[adj/right/node] (s) {$\l_fnd_tikz_adj_diagram_right$} (e);
        \path [morphism] (s) to node[rotate=-90] {$\dashv$} (n);
    }
    \group_end:
  }

  \NewDocumentCommand\AdjDiagram{m}{
    \begin{tikzpicture}[diagram]
      \__fnd_tikz_render_adj_diagram:n {#1}
    \end{tikzpicture}
  }
  
  \ExplSyntaxOff
  %
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 
      </fr:embedded-tex-preamble><fr:embedded-tex-body>
           \DiagramSquare {
            nw = A',
            nw/style = pullback,
            ne = A',
            sw = A,
            se = A,
            north/style = {double},
            south/style = {double},
            east = m,
            west = m,
            east/style = {&gt;-&gt;},
            west/style = {&gt;-&gt;},
          }
        </fr:embedded-tex-body></fr:embedded-tex>
    
  
      </fr:mainmatter></fr:tree></fr:li>
    <fr:li>
      For any <fr:tex>f \colon  (A,m)  \to  (B,n)</fr:tex> and any <fr:tex>g \colon  (B,n)  \to  (C,o)</fr:tex>, the composite <fr:tex>gf</fr:tex> gives the required pullback.
      
    
      
      <fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="false"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"><fr:frontmatter><fr:anchor>265</fr:anchor><fr:taxon>Proof</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>5</fr:month><fr:day>29</fr:day></fr:date><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors><fr:parent>ct-0009</fr:parent></fr:frontmatter><fr:mainmatter>
        By definition, the two inner squares of the following diagram are pullbacks.
        
    
      
      <fr:embedded-tex
hash="6b8fe8ed19ec3c6a88a386506285bc90"><fr:embedded-tex-preamble>
         
   \RequirePackage {tikz}
   \RequirePackage {amsmath}
   \usetikzlibrary {backgrounds, intersections, calc, spath3, fit}

   \definecolor {catccolor}{RGB}{255,244,138}
   \tikzstyle {dot}=[circle, draw=black, fill=black, minimum size=1mm, inner sep=0mm]
   \tikzstyle {catc}=[catccolor!60]
   \tikzstyle {catd}=[orange!40]
   \tikzstyle {cate}=[red!40]
   \tikzstyle {catf}=[blue!10]
   \tikzstyle {catg}=[green!25]


   \tikzstyle {blue halo}=[fill=blue!10, opacity=0.7, rounded corners]
   \tikzstyle {white halo}=[fill=white, opacity=0.7, rounded corners]

   \NewDocumentCommand \CreateRect {D&lt;&gt;{} m m}{
     \path 
      coordinate (#1nw)
      ++(#2,-#3) coordinate (#1se)
      coordinate (#1sw) at (#1se -| #1nw)
      coordinate (#1ne) at (#1nw -| #1se)
    ;

     \path [spath/save = #1north] (#1nw) to (#1ne);
     \path [spath/save = #1west] (#1nw) to (#1sw);
     \path [spath/save = #1east] (#1ne) to (#1se);
     \path [spath/save = #1south] (#1sw) to (#1se);
  }
 
         
    \usepackage{tikz, tikz-cd, mathtools, amssymb, stmaryrd, quiver}
  \usetikzlibrary{matrix,arrows}
  \usetikzlibrary{backgrounds,fit,positioning,calc,shapes}
  \usetikzlibrary{decorations.pathreplacing}
  \usetikzlibrary{decorations.pathmorphing}
  \usetikzlibrary{decorations.markings}

  % basic settings
  \tikzset{
    diagram/.style = {
      on grid,
      node distance=2cm,
      commutative diagrams/every diagram,
      line width = .5pt,
      every node/.append style = {
        commutative diagrams/every cell,
      },
    },
    morphism/.style = {
      auto=left,
      font=\scriptsize,
    },
    desc/.style = {anchor=center,fill=white,inner sep=3pt},
    % /tikz/pos=&lt;fraction&gt; is a key already
    offset/.style args = {#1} {commutative diagrams/shift right={#1}},
  }

  % pullback and pushout
  \tikzset{
    pullback/.style = {
      append after command = {
        \pgfextra{
          \draw ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
        }
      }
    },
    pushout/.style = {
      append after command={
        \pgfextra{
          \draw ($(\tikzlastnode) + (-.2cm,.5cm)$) -- ++(-0.3cm,0) -- ++(0,-0.3cm);
        }
      }
    },
  }

  % arrow styles
  \tikzset{
    fibration/.style = {
      -{Triangle[open]}
    },
    etale/.style = {
      -{Triangle[open]}
    },
    etale cover/.style= {
      &gt;={Triangle[open]},-&gt;.&gt;
    },
    opfibration/.style = {
      -{Triangle}
    },
    lies over/.style = {
      |-{Triangle[open]}
    },
    op lies over/.style = {
      |-{Triangle}
    },
    embedding/.style = {
      {right hook}-&gt;
    },
    open immersion/.style = {
      {right hook}-{Triangle[open]}
    },
    closed immersion/.style = {
      {right hook}-{Triangle}
    },
    closed immersion*/.style = {
      {left hook}-{Triangle}
    },
    embedding*/.style = {
      {left hook}-&gt;
    },
    open immersion*/.style = {
      {left hook}-{Triangle[open]}
    },
    exists/.style = {
      densely dashed
    },
    equal/.style = {
      double
    },
  }

  \newlength{\dontworryaboutit}

  \tikzset{
    inline diagram/.style = {
      commutative diagrams/every diagram,
      commutative diagrams/cramped,
      line width = .5pt,
      every node/.append style = {
        commutative diagrams/every cell,
        anchor = base,
        inner sep = 0pt
      },
      every path/.append style = {
        outer xsep = 2pt
      }
    }
  }
  
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  % Primitives for drawing commutative squares
  \tikzset{
    square/nw/.style = {},
    square/ne/.style = {},
    square/se/.style = {},
    square/sw/.style = {},
    square/north/.style = {-&gt;},
    square/south/.style = {-&gt;},
    square/west/.style = {-&gt;},
    square/east/.style = {-&gt;},
    square/north/node/.style = {above},
    square/south/node/.style = {below},
    square/west/node/.style = {left},
    square/east/node/.style = {right},
  }

  \ExplSyntaxOn

  \bool_new:N \l_jon_glue_west

  \keys_define:nn { jon-tikz/diagram } {
    nw .tl_set:N = \l_jon_tikz_diagram_nw,
    sw .tl_set:N = \l_jon_tikz_diagram_sw,
    ne .tl_set:N = \l_jon_tikz_diagram_ne,
    se .tl_set:N = \l_jon_tikz_diagram_se,

    width .tl_set:N = \l_jon_tikz_diagram_width,
    height .tl_set:N = \l_jon_tikz_diagram_height,

    north .tl_set:N = \l_jon_tikz_diagram_north,
    south .tl_set:N = \l_jon_tikz_diagram_south,
    west .tl_set:N = \l_jon_tikz_diagram_west,
    east .tl_set:N = \l_jon_tikz_diagram_east,

    nw/style .code:n = {\tikzset{square/nw/.style = {#1}}},
    sw/style .code:n = {\tikzset{square/sw/.style = {#1}}},
    ne/style .code:n = {\tikzset{square/ne/.style = {#1}}},
    se/style .code:n = {\tikzset{square/se/.style = {#1}}},

    glue .choice:,
    glue / west .code:n = {\bool_set:Nn \l_jon_glue_west \c_true_bool},

    glue~target .tl_set:N = \l_jon_tikz_glue_target,

    north/style .code:n = {\tikzset{square/north/.style = {#1}}},
    north/node/style .code:n = {\tikzset{square/north/node/.style = {#1}}},
    south/style .code:n = {\tikzset{square/south/.style = {#1}}},
    south/node/style .code:n = {\tikzset{square/south/node/.style = {#1}}},
    west/style .code:n = {\tikzset{square/west/.style = {#1}}},
    west/node/style .code:n = {\tikzset{square/west/node/.style = {#1}}},
    east/style .code:n = {\tikzset{square/east/.style = {#1}}},
    east/node/style .code:n = {\tikzset{square/east/node/.style = {#1}}},

    draft .meta:n = {
      nw = {\__jon_tikz_diagram_fmt_placeholder:n {nw}},
      sw = {\__jon_tikz_diagram_fmt_placeholder:n {sw}},
      se = {\__jon_tikz_diagram_fmt_placeholder:n {se}},
      ne = {\__jon_tikz_diagram_fmt_placeholder:n {ne}},
      north = {\__jon_tikz_diagram_fmt_placeholder:n {north}},
      south = {\__jon_tikz_diagram_fmt_placeholder:n {south}},
      west = {\__jon_tikz_diagram_fmt_placeholder:n {west}},
      east = {\__jon_tikz_diagram_fmt_placeholder:n {east}},
    }
  }

  \tl_set:Nn \l_jon_tikz_diagram_width { 2cm }
  \tl_set:Nn \l_jon_tikz_diagram_height { 2cm }


  \cs_new:Npn \__jon_tikz_diagram_fmt_placeholder:n #1 {
    \texttt{\textcolor{red}{#1}}
  }

  \keys_set:nn { jon-tikz/diagram } {
    glue~target = {},
  }


  \cs_new:Nn \__jon_tikz_render_square:nn {
    \group_begin:
    \keys_set:nn {jon-tikz/diagram} {#2}
    \bool_if:nTF \l_jon_glue_west {
      \node (#1ne) [right = \l_jon_tikz_diagram_width~of~\l_jon_tikz_glue_target ne,square/ne] {$\l_jon_tikz_diagram_ne$};
      \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
      \draw[morphism,square/north] (\l_jon_tikz_glue_target ne) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
      \draw[morphism,square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
      \draw[morphism,square/south] (\l_jon_tikz_glue_target se) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
    } {
      \node (#1nw) [square/nw] {$\l_jon_tikz_diagram_nw$};
      \node (#1sw) [below = \l_jon_tikz_diagram_height~of~#1nw,square/sw] {$\l_jon_tikz_diagram_sw$};
      \draw[morphism,square/west] (#1nw) to node [square/west/node] {$\l_jon_tikz_diagram_west$} (#1sw);

      \node (#1ne) [right = \l_jon_tikz_diagram_width~of~#1nw,square/ne] {$\l_jon_tikz_diagram_ne$};
      \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
      \draw[morphism,square/north] (#1nw) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
      \draw[morphism,square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
      \draw[morphism,square/south] (#1sw) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
    }
    \group_end:
  }

  \NewDocumentCommand\SpliceDiagramSquare{D&lt;&gt;{}m}{
    \__jon_tikz_render_square:nn {#1} {#2}
  }


  \NewDocumentCommand\DiagramSquare{D&lt;&gt;{}O{}m}{
    \begin{tikzpicture}[diagram,#2,baseline=(#1sw.base)]
      \__jon_tikz_render_square:nn {#1} {#3}
    \end{tikzpicture}
  }

  \ExplSyntaxOff
  %
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  % Primitives for drawing adjunction diagrams
  \tikzset{
    adj/w/.style = {},
    adj/e/.style = {},
    adj/left/.style = {-&gt;},
    adj/right/.style = {-&gt;},
    adj/left/node/.style = {above},
    adj/right/node/.style = {below},
  }

  \ExplSyntaxOn

  \bool_new:N \l_fnd_glue_west

  \keys_define:nn { fnd-tikz/adj-diagram } {
    w .tl_set:N = \l_fnd_tikz_adj_diagram_w,
    e .tl_set:N = \l_fnd_tikz_adj_diagram_e,

    width .tl_set:N = \l_fnd_tikz_adj_diagram_width,

    left .tl_set:N = \l_fnd_tikz_adj_diagram_left,
    right .tl_set:N = \l_fnd_tikz_adj_diagram_right,

    glue .choice:,
    glue / west .code:n = {\bool_set:Nn \l_fnd_glue_west \c_true_bool},
    glue~target .tl_set:N = \l_fnd_tikz_glue_target,

    w/style .code:n = {\tikzset{adj/w/.style = {#1}}},
    e/style .code:n = {\tikzset{adj/e/.style = {#1}}},

    left/style .code:n = {\tikzset{adj/left/.style = {#1}}},
    left/node/style .code:n = {\tikzset{adj/left/node/.style = {#1}}},
    right/style .code:n = {\tikzset{adj/right/.style = {#1}}},
    right/node/style .code:n = {\tikzset{adj/right/node/.style = {#1}}},

    draft .meta:n = {
      e = {\__fnd_tikz_adj_diagram_fmt_placeholder:n {e}},
      w = {\__fnd_tikz_adj_diagram_fmt_placeholder:n {w}},
      left = {\__fnd_tikz_adj_diagram_fmt_placeholder:n {left}},
      right = {\__fnd_tikz_adj_diagram_fmt_placeholder:n {right}},
    }
  }

  \tl_set:Nn \l_fnd_tikz_adj_diagram_width { 2cm }

  \cs_new:Npn \__fnd_tikz_adj_diagram_fmt_placeholder:n #1 {
    \texttt{\textcolor{red}{#1}}
  }

  \keys_set:nn { fnd-tikz/adj-diagram } {
    glue~target = {},
  }

  \cs_new:Nn \__fnd_tikz_render_adj_diagram:n {
    \group_begin:
    \keys_set:nn {fnd-tikz/adj-diagram} {#1} {
      % gluing will be implemented when I need it
      \node (w) [adj/w] {$\l_fnd_tikz_adj_diagram_w$};
      \node (e) [right=\l_fnd_tikz_adj_diagram_width~of~w,adj/e] {$\l_fnd_tikz_adj_diagram_e$};
        \draw [morphism,adj/left,offset=.15cm] (e) to node[adj/left/node] (n) {$\l_fnd_tikz_adj_diagram_left$} (w);
        \draw [morphism,adj/right,offset=.15cm] (w) to node[adj/right/node] (s) {$\l_fnd_tikz_adj_diagram_right$} (e);
        \path [morphism] (s) to node[rotate=-90] {$\dashv$} (n);
    }
    \group_end:
  }

  \NewDocumentCommand\AdjDiagram{m}{
    \begin{tikzpicture}[diagram]
      \__fnd_tikz_render_adj_diagram:n {#1}
    \end{tikzpicture}
  }
  
  \ExplSyntaxOff
  %
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 
      </fr:embedded-tex-preamble><fr:embedded-tex-body>
           \begin {tikzpicture}[diagram]
             \SpliceDiagramSquare {
              nw = B',
              nw/style = pullback,
              ne = C',
              sw = B,
              se = C,
              south = g,
              west = n,
              west/style = {&gt;-&gt;},
              west/node/style = {desc},
              east = o,
              east/style = {&gt;-&gt;},
            }
             \node  [left = of nw, pullback] (A') {$A'$};
             \node  [left = of sw] (A) {$A$};
             \draw  [-&gt;,morphism] (A') to (nw);
             \draw  [&gt;-&gt;,morphism] (A') to node[swap] {$m$} (A);
             \draw  [-&gt;,morphism] (A) to node[swap] {$f$} (sw);
           \end {tikzpicture}
          
        </fr:embedded-tex-body></fr:embedded-tex>
    
  
        Then by the <fr:link
href="ct-0008.xml"
type="local"
addr="ct-0008">pasting lemma of pullbacks</fr:link>, the outer rectangle is also a pullback.
      </fr:mainmatter></fr:tree></fr:li></fr:ol>
</fr:mainmatter></fr:tree>
    
  </fr:mainmatter></fr:tree><fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="false"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"><fr:frontmatter><fr:anchor>462</fr:anchor><fr:taxon>Corollary</fr:taxon><fr:addr>topo-000I</fr:addr><fr:route>topo-000I.xml</fr:route><fr:title>Singleton maps are monomorphisms</fr:title><fr:date><fr:year>2024</fr:year><fr:month>5</fr:month><fr:day>29</fr:day></fr:date><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Let <fr:tex>A</fr:tex> be any object in a <fr:link
href="topo-0001.xml"
type="local"
addr="topo-0001">topos</fr:link> and let <fr:tex>\{ \} \colon  A  \to   \Omega ^{A}</fr:tex> be the <fr:link
href="topo-000J.xml"
type="local"
addr="topo-000J">name</fr:link> of the diagonal relation <fr:tex>\Delta \colon  A  \rightarrowtail  A  \times  A</fr:tex>. <fr:tex>\{ \}</fr:tex> is a monomorphism.</fr:p>
  
    
    <fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="false"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"><fr:frontmatter><fr:anchor>279</fr:anchor><fr:taxon>Proof</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>5</fr:month><fr:day>29</fr:day></fr:date><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors><fr:parent>topo-000I</fr:parent></fr:frontmatter><fr:mainmatter>
  By <fr:ref
addr="topo-0009"
href="topo-0009.xml"
taxon="Lemma"></fr:ref>, the following square is a pullback.
  
  
    
    <fr:embedded-tex
hash="3b3c98023d2d819172c62233053c5670"><fr:embedded-tex-preamble>
       
   \RequirePackage {tikz}
   \RequirePackage {amsmath}
   \usetikzlibrary {backgrounds, intersections, calc, spath3, fit}

   \definecolor {catccolor}{RGB}{255,244,138}
   \tikzstyle {dot}=[circle, draw=black, fill=black, minimum size=1mm, inner sep=0mm]
   \tikzstyle {catc}=[catccolor!60]
   \tikzstyle {catd}=[orange!40]
   \tikzstyle {cate}=[red!40]
   \tikzstyle {catf}=[blue!10]
   \tikzstyle {catg}=[green!25]


   \tikzstyle {blue halo}=[fill=blue!10, opacity=0.7, rounded corners]
   \tikzstyle {white halo}=[fill=white, opacity=0.7, rounded corners]

   \NewDocumentCommand \CreateRect {D&lt;&gt;{} m m}{
     \path 
      coordinate (#1nw)
      ++(#2,-#3) coordinate (#1se)
      coordinate (#1sw) at (#1se -| #1nw)
      coordinate (#1ne) at (#1nw -| #1se)
    ;

     \path [spath/save = #1north] (#1nw) to (#1ne);
     \path [spath/save = #1west] (#1nw) to (#1sw);
     \path [spath/save = #1east] (#1ne) to (#1se);
     \path [spath/save = #1south] (#1sw) to (#1se);
  }
 
       
    \usepackage{tikz, tikz-cd, mathtools, amssymb, stmaryrd, quiver}
  \usetikzlibrary{matrix,arrows}
  \usetikzlibrary{backgrounds,fit,positioning,calc,shapes}
  \usetikzlibrary{decorations.pathreplacing}
  \usetikzlibrary{decorations.pathmorphing}
  \usetikzlibrary{decorations.markings}

  % basic settings
  \tikzset{
    diagram/.style = {
      on grid,
      node distance=2cm,
      commutative diagrams/every diagram,
      line width = .5pt,
      every node/.append style = {
        commutative diagrams/every cell,
      },
    },
    morphism/.style = {
      auto=left,
      font=\scriptsize,
    },
    desc/.style = {anchor=center,fill=white,inner sep=3pt},
    % /tikz/pos=&lt;fraction&gt; is a key already
    offset/.style args = {#1} {commutative diagrams/shift right={#1}},
  }

  % pullback and pushout
  \tikzset{
    pullback/.style = {
      append after command = {
        \pgfextra{
          \draw ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
        }
      }
    },
    pushout/.style = {
      append after command={
        \pgfextra{
          \draw ($(\tikzlastnode) + (-.2cm,.5cm)$) -- ++(-0.3cm,0) -- ++(0,-0.3cm);
        }
      }
    },
  }

  % arrow styles
  \tikzset{
    fibration/.style = {
      -{Triangle[open]}
    },
    etale/.style = {
      -{Triangle[open]}
    },
    etale cover/.style= {
      &gt;={Triangle[open]},-&gt;.&gt;
    },
    opfibration/.style = {
      -{Triangle}
    },
    lies over/.style = {
      |-{Triangle[open]}
    },
    op lies over/.style = {
      |-{Triangle}
    },
    embedding/.style = {
      {right hook}-&gt;
    },
    open immersion/.style = {
      {right hook}-{Triangle[open]}
    },
    closed immersion/.style = {
      {right hook}-{Triangle}
    },
    closed immersion*/.style = {
      {left hook}-{Triangle}
    },
    embedding*/.style = {
      {left hook}-&gt;
    },
    open immersion*/.style = {
      {left hook}-{Triangle[open]}
    },
    exists/.style = {
      densely dashed
    },
    equal/.style = {
      double
    },
  }

  \newlength{\dontworryaboutit}

  \tikzset{
    inline diagram/.style = {
      commutative diagrams/every diagram,
      commutative diagrams/cramped,
      line width = .5pt,
      every node/.append style = {
        commutative diagrams/every cell,
        anchor = base,
        inner sep = 0pt
      },
      every path/.append style = {
        outer xsep = 2pt
      }
    }
  }
  
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  % Primitives for drawing commutative squares
  \tikzset{
    square/nw/.style = {},
    square/ne/.style = {},
    square/se/.style = {},
    square/sw/.style = {},
    square/north/.style = {-&gt;},
    square/south/.style = {-&gt;},
    square/west/.style = {-&gt;},
    square/east/.style = {-&gt;},
    square/north/node/.style = {above},
    square/south/node/.style = {below},
    square/west/node/.style = {left},
    square/east/node/.style = {right},
  }

  \ExplSyntaxOn

  \bool_new:N \l_jon_glue_west

  \keys_define:nn { jon-tikz/diagram } {
    nw .tl_set:N = \l_jon_tikz_diagram_nw,
    sw .tl_set:N = \l_jon_tikz_diagram_sw,
    ne .tl_set:N = \l_jon_tikz_diagram_ne,
    se .tl_set:N = \l_jon_tikz_diagram_se,

    width .tl_set:N = \l_jon_tikz_diagram_width,
    height .tl_set:N = \l_jon_tikz_diagram_height,

    north .tl_set:N = \l_jon_tikz_diagram_north,
    south .tl_set:N = \l_jon_tikz_diagram_south,
    west .tl_set:N = \l_jon_tikz_diagram_west,
    east .tl_set:N = \l_jon_tikz_diagram_east,

    nw/style .code:n = {\tikzset{square/nw/.style = {#1}}},
    sw/style .code:n = {\tikzset{square/sw/.style = {#1}}},
    ne/style .code:n = {\tikzset{square/ne/.style = {#1}}},
    se/style .code:n = {\tikzset{square/se/.style = {#1}}},

    glue .choice:,
    glue / west .code:n = {\bool_set:Nn \l_jon_glue_west \c_true_bool},

    glue~target .tl_set:N = \l_jon_tikz_glue_target,

    north/style .code:n = {\tikzset{square/north/.style = {#1}}},
    north/node/style .code:n = {\tikzset{square/north/node/.style = {#1}}},
    south/style .code:n = {\tikzset{square/south/.style = {#1}}},
    south/node/style .code:n = {\tikzset{square/south/node/.style = {#1}}},
    west/style .code:n = {\tikzset{square/west/.style = {#1}}},
    west/node/style .code:n = {\tikzset{square/west/node/.style = {#1}}},
    east/style .code:n = {\tikzset{square/east/.style = {#1}}},
    east/node/style .code:n = {\tikzset{square/east/node/.style = {#1}}},

    draft .meta:n = {
      nw = {\__jon_tikz_diagram_fmt_placeholder:n {nw}},
      sw = {\__jon_tikz_diagram_fmt_placeholder:n {sw}},
      se = {\__jon_tikz_diagram_fmt_placeholder:n {se}},
      ne = {\__jon_tikz_diagram_fmt_placeholder:n {ne}},
      north = {\__jon_tikz_diagram_fmt_placeholder:n {north}},
      south = {\__jon_tikz_diagram_fmt_placeholder:n {south}},
      west = {\__jon_tikz_diagram_fmt_placeholder:n {west}},
      east = {\__jon_tikz_diagram_fmt_placeholder:n {east}},
    }
  }

  \tl_set:Nn \l_jon_tikz_diagram_width { 2cm }
  \tl_set:Nn \l_jon_tikz_diagram_height { 2cm }


  \cs_new:Npn \__jon_tikz_diagram_fmt_placeholder:n #1 {
    \texttt{\textcolor{red}{#1}}
  }

  \keys_set:nn { jon-tikz/diagram } {
    glue~target = {},
  }


  \cs_new:Nn \__jon_tikz_render_square:nn {
    \group_begin:
    \keys_set:nn {jon-tikz/diagram} {#2}
    \bool_if:nTF \l_jon_glue_west {
      \node (#1ne) [right = \l_jon_tikz_diagram_width~of~\l_jon_tikz_glue_target ne,square/ne] {$\l_jon_tikz_diagram_ne$};
      \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
      \draw[morphism,square/north] (\l_jon_tikz_glue_target ne) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
      \draw[morphism,square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
      \draw[morphism,square/south] (\l_jon_tikz_glue_target se) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
    } {
      \node (#1nw) [square/nw] {$\l_jon_tikz_diagram_nw$};
      \node (#1sw) [below = \l_jon_tikz_diagram_height~of~#1nw,square/sw] {$\l_jon_tikz_diagram_sw$};
      \draw[morphism,square/west] (#1nw) to node [square/west/node] {$\l_jon_tikz_diagram_west$} (#1sw);

      \node (#1ne) [right = \l_jon_tikz_diagram_width~of~#1nw,square/ne] {$\l_jon_tikz_diagram_ne$};
      \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
      \draw[morphism,square/north] (#1nw) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
      \draw[morphism,square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
      \draw[morphism,square/south] (#1sw) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
    }
    \group_end:
  }

  \NewDocumentCommand\SpliceDiagramSquare{D&lt;&gt;{}m}{
    \__jon_tikz_render_square:nn {#1} {#2}
  }


  \NewDocumentCommand\DiagramSquare{D&lt;&gt;{}O{}m}{
    \begin{tikzpicture}[diagram,#2,baseline=(#1sw.base)]
      \__jon_tikz_render_square:nn {#1} {#3}
    \end{tikzpicture}
  }

  \ExplSyntaxOff
  %
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  % Primitives for drawing adjunction diagrams
  \tikzset{
    adj/w/.style = {},
    adj/e/.style = {},
    adj/left/.style = {-&gt;},
    adj/right/.style = {-&gt;},
    adj/left/node/.style = {above},
    adj/right/node/.style = {below},
  }

  \ExplSyntaxOn

  \bool_new:N \l_fnd_glue_west

  \keys_define:nn { fnd-tikz/adj-diagram } {
    w .tl_set:N = \l_fnd_tikz_adj_diagram_w,
    e .tl_set:N = \l_fnd_tikz_adj_diagram_e,

    width .tl_set:N = \l_fnd_tikz_adj_diagram_width,

    left .tl_set:N = \l_fnd_tikz_adj_diagram_left,
    right .tl_set:N = \l_fnd_tikz_adj_diagram_right,

    glue .choice:,
    glue / west .code:n = {\bool_set:Nn \l_fnd_glue_west \c_true_bool},
    glue~target .tl_set:N = \l_fnd_tikz_glue_target,

    w/style .code:n = {\tikzset{adj/w/.style = {#1}}},
    e/style .code:n = {\tikzset{adj/e/.style = {#1}}},

    left/style .code:n = {\tikzset{adj/left/.style = {#1}}},
    left/node/style .code:n = {\tikzset{adj/left/node/.style = {#1}}},
    right/style .code:n = {\tikzset{adj/right/.style = {#1}}},
    right/node/style .code:n = {\tikzset{adj/right/node/.style = {#1}}},

    draft .meta:n = {
      e = {\__fnd_tikz_adj_diagram_fmt_placeholder:n {e}},
      w = {\__fnd_tikz_adj_diagram_fmt_placeholder:n {w}},
      left = {\__fnd_tikz_adj_diagram_fmt_placeholder:n {left}},
      right = {\__fnd_tikz_adj_diagram_fmt_placeholder:n {right}},
    }
  }

  \tl_set:Nn \l_fnd_tikz_adj_diagram_width { 2cm }

  \cs_new:Npn \__fnd_tikz_adj_diagram_fmt_placeholder:n #1 {
    \texttt{\textcolor{red}{#1}}
  }

  \keys_set:nn { fnd-tikz/adj-diagram } {
    glue~target = {},
  }

  \cs_new:Nn \__fnd_tikz_render_adj_diagram:n {
    \group_begin:
    \keys_set:nn {fnd-tikz/adj-diagram} {#1} {
      % gluing will be implemented when I need it
      \node (w) [adj/w] {$\l_fnd_tikz_adj_diagram_w$};
      \node (e) [right=\l_fnd_tikz_adj_diagram_width~of~w,adj/e] {$\l_fnd_tikz_adj_diagram_e$};
        \draw [morphism,adj/left,offset=.15cm] (e) to node[adj/left/node] (n) {$\l_fnd_tikz_adj_diagram_left$} (w);
        \draw [morphism,adj/right,offset=.15cm] (w) to node[adj/right/node] (s) {$\l_fnd_tikz_adj_diagram_right$} (e);
        \path [morphism] (s) to node[rotate=-90] {$\dashv$} (n);
    }
    \group_end:
  }

  \NewDocumentCommand\AdjDiagram{m}{
    \begin{tikzpicture}[diagram]
      \__fnd_tikz_render_adj_diagram:n {#1}
    \end{tikzpicture}
  }
  
  \ExplSyntaxOff
  %
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 
    </fr:embedded-tex-preamble><fr:embedded-tex-body>
     \DiagramSquare {
      nw = A,
      ne = A,
      sw = A,
      se =  \Omega ^{A},
      nw/style = pullback,
      west/style = {double},
      north/style = {double},
      east =  \{ \} ,
      south =  \{ \} ,
    }
  </fr:embedded-tex-body></fr:embedded-tex>
  

  Thus, <fr:tex>\{ \}</fr:tex> is a monomorphism.
</fr:mainmatter></fr:tree>
  
</fr:mainmatter></fr:tree><fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="false"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"><fr:frontmatter><fr:anchor>464</fr:anchor><fr:taxon>Lemma</fr:taxon><fr:addr>ct-0008</fr:addr><fr:route>ct-0008.xml</fr:route><fr:title>Pasting lemma of pullbacks</fr:title><fr:date><fr:year>2024</fr:year><fr:month>5</fr:month><fr:day>29</fr:day></fr:date><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter>
  
    
    <fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="false"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"><fr:frontmatter><fr:anchor>238</fr:anchor><fr:taxon>Proof</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>5</fr:month><fr:day>29</fr:day></fr:date><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors><fr:parent>ct-0008</fr:parent></fr:frontmatter><fr:mainmatter>
  <fr:link
href="todo.xml"
type="local"
addr="todo">TODO</fr:link>
</fr:mainmatter></fr:tree>
  
</fr:mainmatter></fr:tree><fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="false"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"><fr:frontmatter><fr:anchor>466</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>ct-0006</fr:addr><fr:route>ct-0006.xml</fr:route><fr:title>Subobject</fr:title><fr:date><fr:year>2024</fr:year><fr:month>5</fr:month><fr:day>29</fr:day></fr:date><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Let <fr:tex>B</fr:tex> be an object in a category <fr:tex>    \mathcal { C }  </fr:tex>. A <fr:em><fr:strong>subobject</fr:strong></fr:em> of <fr:tex>B</fr:tex> is a monomorphism <fr:tex>m \colon  A  \rightarrowtail  B</fr:tex>. The <fr:em><fr:strong>category of subobjects of <fr:tex>B</fr:tex></fr:strong></fr:em>, denoted as <fr:tex>\mathsf {Sub}( B )</fr:tex>, is the full subcategory of <fr:tex>    \mathcal { C }   _{/ B }</fr:tex> spanned by monomorphisms.</fr:p></fr:mainmatter></fr:tree><fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="false"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"><fr:frontmatter><fr:anchor>468</fr:anchor><fr:taxon>Corollary</fr:taxon><fr:addr>topo-0008</fr:addr><fr:route>topo-0008.xml</fr:route><fr:title><fr:link
href="topo-0001.xml"
type="local"
addr="topo-0001">Topoi</fr:link> are balanced</fr:title><fr:date><fr:year>2024</fr:year><fr:month>5</fr:month><fr:day>28</fr:day></fr:date><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Every <fr:link
href="topo-0001.xml"
type="local"
addr="topo-0001">topos</fr:link> is balanced.</fr:p>
  
    
    <fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="false"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"><fr:frontmatter><fr:anchor>313</fr:anchor><fr:taxon>Proof</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>5</fr:month><fr:day>28</fr:day></fr:date><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors><fr:parent>topo-0008</fr:parent></fr:frontmatter><fr:mainmatter>
  By <fr:ref
addr="topo-0007"
href="topo-0007.xml"
taxon="Lemma"></fr:ref>, every monomorphism is regular. Thus, any epic monomorphism is automatically an isomorphism.
</fr:mainmatter></fr:tree>
  
</fr:mainmatter></fr:tree><fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="false"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"><fr:frontmatter><fr:anchor>470</fr:anchor><fr:taxon>Lemma</fr:taxon><fr:addr>topo-000G</fr:addr><fr:route>topo-000G.xml</fr:route><fr:title><fr:link
href="topo-000E.xml"
type="local"
addr="topo-000E">Separated</fr:link> objects correspond to <fr:link
href="topo-000B.xml"
type="local"
addr="topo-000B">closed</fr:link> diagonal relations</fr:title><fr:date><fr:year>2024</fr:year><fr:month>5</fr:month><fr:day>28</fr:day></fr:date><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>An object <fr:tex>A</fr:tex> of a <fr:link
href="topo-0001.xml"
type="local"
addr="topo-0001">topos</fr:link> <fr:tex>    \mathcal { E }  </fr:tex> is <fr:link
href="topo-000E.xml"
type="local"
addr="topo-000E">separated</fr:link> iff the diagonal subobject <fr:tex>\Delta \colon  A  \rightarrowtail  A  \times  A</fr:tex> is <fr:link
href="topo-000B.xml"
type="local"
addr="topo-000B">closed</fr:link>.</fr:p>
  
    
    <fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="false"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"><fr:frontmatter><fr:anchor>325</fr:anchor><fr:taxon>Proof</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>5</fr:month><fr:day>28</fr:day></fr:date><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors><fr:parent>topo-000G</fr:parent></fr:frontmatter><fr:mainmatter>
  <fr:link
href="todo.xml"
type="local"
addr="todo">TODO</fr:link>
</fr:mainmatter></fr:tree>
  
</fr:mainmatter></fr:tree><fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="false"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"><fr:frontmatter><fr:anchor>472</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>topo-000A</fr:addr><fr:route>topo-000A.xml</fr:route><fr:title>Lawvere-Tierney topology</fr:title><fr:date><fr:year>2024</fr:year><fr:month>5</fr:month><fr:day>28</fr:day></fr:date><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>A <fr:em><fr:strong>(Lawvere-Tierney) topology</fr:strong></fr:em> on a <fr:link
href="topo-0001.xml"
type="local"
addr="topo-0001">topos</fr:link> <fr:tex>    \mathcal { E }  </fr:tex> is a morphism <fr:tex>j \colon   \Omega   \to   \Omega</fr:tex> satisfying the following equations.</fr:p><fr:ol><fr:li><fr:tex>j \top  =  \top</fr:tex></fr:li>
  <fr:li><fr:tex>jj = j</fr:tex></fr:li>
  <fr:li><fr:tex>j \wedge  =  \wedge (j  \times  j)</fr:tex></fr:li></fr:ol></fr:mainmatter></fr:tree><fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="false"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"><fr:frontmatter><fr:anchor>474</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>topo-000B</fr:addr><fr:route>topo-000B.xml</fr:route><fr:title>Closed subobject</fr:title><fr:date><fr:year>2024</fr:year><fr:month>5</fr:month><fr:day>28</fr:day></fr:date><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Let <fr:tex>j</fr:tex> be a <fr:link
href="topo-000A.xml"
type="local"
addr="topo-000A">topology</fr:link> on a <fr:link
href="topo-0001.xml"
type="local"
addr="topo-0001">topos</fr:link>. A subobject <fr:tex>m \colon  A  \rightarrowtail  B</fr:tex> is said to be <fr:em><fr:strong><fr:tex>j</fr:tex>-closed</fr:strong></fr:em> if its <fr:link
href="topo-000C.xml"
type="local"
addr="topo-000C">closure</fr:link> is isomorphic to itself.</fr:p></fr:mainmatter></fr:tree><fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="false"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"><fr:frontmatter><fr:anchor>476</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>topo-000C</fr:addr><fr:route>topo-000C.xml</fr:route><fr:title>Closure</fr:title><fr:date><fr:year>2024</fr:year><fr:month>5</fr:month><fr:day>28</fr:day></fr:date><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Let <fr:tex>j</fr:tex> be a <fr:link
href="topo-000A.xml"
type="local"
addr="topo-000A">topology</fr:link> on a <fr:link
href="topo-0001.xml"
type="local"
addr="topo-0001">topos</fr:link>. Let <fr:tex>m \colon  A  \rightarrowtail  B</fr:tex> be a subobject. The <fr:em><fr:strong><fr:tex>j</fr:tex>-closure</fr:strong></fr:em> of <fr:tex>m</fr:tex> is the subobject classified by <fr:tex>j \chi _{m} \colon  B  \to   \Omega</fr:tex>.</fr:p></fr:mainmatter></fr:tree><fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="false"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"><fr:frontmatter><fr:anchor>478</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>topo-000D</fr:addr><fr:route>topo-000D.xml</fr:route><fr:title>Dense subobject</fr:title><fr:date><fr:year>2024</fr:year><fr:month>5</fr:month><fr:day>28</fr:day></fr:date><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Let <fr:tex>j</fr:tex> be a <fr:link
href="topo-000A.xml"
type="local"
addr="topo-000A">topology</fr:link> on a <fr:link
href="topo-0001.xml"
type="local"
addr="topo-0001">topos</fr:link>. A subobject <fr:tex>m \colon  A  \rightarrowtail  B</fr:tex> is said to be <fr:em><fr:strong><fr:tex>j</fr:tex>-dense</fr:strong></fr:em> if its <fr:link
href="topo-000C.xml"
type="local"
addr="topo-000C">closure</fr:link> is an isomorphism.</fr:p></fr:mainmatter></fr:tree><fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="false"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"><fr:frontmatter><fr:anchor>480</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>ct-0005</fr:addr><fr:route>ct-0005.xml</fr:route><fr:title>Effective <fr:link
href="ct-0004.xml"
type="local"
addr="ct-0004">equivalence relation</fr:link></fr:title><fr:date><fr:year>2024</fr:year><fr:month>5</fr:month><fr:day>28</fr:day></fr:date><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>An <fr:link
href="ct-0004.xml"
type="local"
addr="ct-0004">equivalence relation</fr:link> is said to be <fr:em><fr:strong>effective</fr:strong></fr:em> if it is the kernel pair of some morphism.</fr:p></fr:mainmatter></fr:tree><fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="false"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"><fr:frontmatter><fr:anchor>482</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>ct-0004</fr:addr><fr:route>ct-0004.xml</fr:route><fr:title>Equivalence relation</fr:title><fr:date><fr:year>2024</fr:year><fr:month>5</fr:month><fr:day>28</fr:day></fr:date><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Let <fr:tex>(a,b) \colon  R  \rightarrowtail  A  \times  A</fr:tex> be a relation in a category with finite limits. <fr:tex>(a,b)</fr:tex> is said to be an <fr:em><fr:strong>equivalence relation</fr:strong></fr:em> if it is <fr:link
href="ct-0001.xml"
type="local"
addr="ct-0001">reflexive</fr:link>, <fr:link
href="ct-0002.xml"
type="local"
addr="ct-0002">symmetric</fr:link>, and <fr:link
href="ct-0003.xml"
type="local"
addr="ct-0003">transitive</fr:link>.</fr:p></fr:mainmatter></fr:tree><fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="false"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"><fr:frontmatter><fr:anchor>484</fr:anchor><fr:taxon>Lemma</fr:taxon><fr:addr>topo-0009</fr:addr><fr:route>topo-0009.xml</fr:route><fr:title>Every <fr:link
href="ct-0004.xml"
type="local"
addr="ct-0004">equivalence relation</fr:link> in a topos is <fr:link
href="ct-0005.xml"
type="local"
addr="ct-0005">effective</fr:link></fr:title><fr:date><fr:year>2024</fr:year><fr:month>5</fr:month><fr:day>28</fr:day></fr:date><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter>
  
    
    <fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="false"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"><fr:frontmatter><fr:anchor>273</fr:anchor><fr:taxon>Proof</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>5</fr:month><fr:day>28</fr:day></fr:date><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors><fr:parent>topo-0009</fr:parent></fr:frontmatter><fr:mainmatter>
  <fr:link
href="todo.xml"
type="local"
addr="todo">TODO</fr:link>
</fr:mainmatter></fr:tree>
  
</fr:mainmatter></fr:tree><fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="false"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"><fr:frontmatter><fr:anchor>486</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>ct-0001</fr:addr><fr:route>ct-0001.xml</fr:route><fr:title>Reflexive relation</fr:title><fr:date><fr:year>2024</fr:year><fr:month>5</fr:month><fr:day>28</fr:day></fr:date><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Let <fr:tex>(a,b) \colon  R  \rightarrowtail  A  \times  A</fr:tex> be a relation in a category with finite limits. <fr:tex>(a,b)</fr:tex> is said to be <fr:em><fr:strong>reflexive</fr:strong></fr:em> if the diagonal relation <fr:tex>\Delta \colon  A  \rightarrowtail  A  \times  A</fr:tex> factors through <fr:tex>(a,b)</fr:tex>, i.e., there is a map <fr:tex>\rho \colon  A  \to  R</fr:tex> such that <fr:tex>a \rho  = b \rho  =  \mathsf {id}_{ A }</fr:tex>.</fr:p></fr:mainmatter></fr:tree><fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="false"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"><fr:frontmatter><fr:anchor>488</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>topo-000E</fr:addr><fr:route>topo-000E.xml</fr:route><fr:title>Separated object</fr:title><fr:date><fr:year>2024</fr:year><fr:month>5</fr:month><fr:day>28</fr:day></fr:date><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Let <fr:tex>j</fr:tex> be a <fr:link
href="topo-000A.xml"
type="local"
addr="topo-000A">topology</fr:link> on a <fr:link
href="topo-0001.xml"
type="local"
addr="topo-0001">topos</fr:link> <fr:tex>    \mathcal { E }  </fr:tex>. An object <fr:tex>S  \in       \mathcal { E }  </fr:tex> is said to be <fr:em><fr:strong><fr:tex>j</fr:tex>-separated</fr:strong></fr:em> if for any <fr:link
href="topo-000D.xml"
type="local"
addr="topo-000D">dense</fr:link> subobject <fr:tex>m \colon  A  \rightarrowtail  B</fr:tex> and any morphism <fr:tex>f \colon  A  \to  S</fr:tex>, there is <fr:em>at most</fr:em> one morphism <fr:tex>g \colon  B  \to  S</fr:tex> such that <fr:tex>f = gm</fr:tex>.</fr:p></fr:mainmatter></fr:tree><fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="false"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"><fr:frontmatter><fr:anchor>490</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>topo-000F</fr:addr><fr:route>topo-000F.xml</fr:route><fr:title>Sheaf</fr:title><fr:date><fr:year>2024</fr:year><fr:month>5</fr:month><fr:day>28</fr:day></fr:date><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Let <fr:tex>j</fr:tex> be a <fr:link
href="topo-000A.xml"
type="local"
addr="topo-000A">topology</fr:link> on a <fr:link
href="topo-0001.xml"
type="local"
addr="topo-0001">topos</fr:link> <fr:tex>    \mathcal { E }  </fr:tex>. An object <fr:tex>S  \in       \mathcal { E }  </fr:tex> is said to be a <fr:em><fr:strong><fr:tex>j</fr:tex>-sheaf</fr:strong></fr:em> if for any <fr:link
href="topo-000D.xml"
type="local"
addr="topo-000D">dense</fr:link> subobject <fr:tex>m \colon  A  \rightarrowtail  B</fr:tex> and any morphism <fr:tex>f \colon  A  \to  S</fr:tex>, there is <fr:em>exactly</fr:em> one morphism <fr:tex>g \colon  B  \to  S</fr:tex> such that <fr:tex>f = gm</fr:tex>.</fr:p>
  
    
    <fr:embedded-tex
hash="e30033dbcc2fa3c8f0023c490e509d44"><fr:embedded-tex-preamble>
       
   \RequirePackage {tikz}
   \RequirePackage {amsmath}
   \usetikzlibrary {backgrounds, intersections, calc, spath3, fit}

   \definecolor {catccolor}{RGB}{255,244,138}
   \tikzstyle {dot}=[circle, draw=black, fill=black, minimum size=1mm, inner sep=0mm]
   \tikzstyle {catc}=[catccolor!60]
   \tikzstyle {catd}=[orange!40]
   \tikzstyle {cate}=[red!40]
   \tikzstyle {catf}=[blue!10]
   \tikzstyle {catg}=[green!25]


   \tikzstyle {blue halo}=[fill=blue!10, opacity=0.7, rounded corners]
   \tikzstyle {white halo}=[fill=white, opacity=0.7, rounded corners]

   \NewDocumentCommand \CreateRect {D&lt;&gt;{} m m}{
     \path 
      coordinate (#1nw)
      ++(#2,-#3) coordinate (#1se)
      coordinate (#1sw) at (#1se -| #1nw)
      coordinate (#1ne) at (#1nw -| #1se)
    ;

     \path [spath/save = #1north] (#1nw) to (#1ne);
     \path [spath/save = #1west] (#1nw) to (#1sw);
     \path [spath/save = #1east] (#1ne) to (#1se);
     \path [spath/save = #1south] (#1sw) to (#1se);
  }
 
       
    \usepackage{tikz, tikz-cd, mathtools, amssymb, stmaryrd, quiver}
  \usetikzlibrary{matrix,arrows}
  \usetikzlibrary{backgrounds,fit,positioning,calc,shapes}
  \usetikzlibrary{decorations.pathreplacing}
  \usetikzlibrary{decorations.pathmorphing}
  \usetikzlibrary{decorations.markings}

  % basic settings
  \tikzset{
    diagram/.style = {
      on grid,
      node distance=2cm,
      commutative diagrams/every diagram,
      line width = .5pt,
      every node/.append style = {
        commutative diagrams/every cell,
      },
    },
    morphism/.style = {
      auto=left,
      font=\scriptsize,
    },
    desc/.style = {anchor=center,fill=white,inner sep=3pt},
    % /tikz/pos=&lt;fraction&gt; is a key already
    offset/.style args = {#1} {commutative diagrams/shift right={#1}},
  }

  % pullback and pushout
  \tikzset{
    pullback/.style = {
      append after command = {
        \pgfextra{
          \draw ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
        }
      }
    },
    pushout/.style = {
      append after command={
        \pgfextra{
          \draw ($(\tikzlastnode) + (-.2cm,.5cm)$) -- ++(-0.3cm,0) -- ++(0,-0.3cm);
        }
      }
    },
  }

  % arrow styles
  \tikzset{
    fibration/.style = {
      -{Triangle[open]}
    },
    etale/.style = {
      -{Triangle[open]}
    },
    etale cover/.style= {
      &gt;={Triangle[open]},-&gt;.&gt;
    },
    opfibration/.style = {
      -{Triangle}
    },
    lies over/.style = {
      |-{Triangle[open]}
    },
    op lies over/.style = {
      |-{Triangle}
    },
    embedding/.style = {
      {right hook}-&gt;
    },
    open immersion/.style = {
      {right hook}-{Triangle[open]}
    },
    closed immersion/.style = {
      {right hook}-{Triangle}
    },
    closed immersion*/.style = {
      {left hook}-{Triangle}
    },
    embedding*/.style = {
      {left hook}-&gt;
    },
    open immersion*/.style = {
      {left hook}-{Triangle[open]}
    },
    exists/.style = {
      densely dashed
    },
    equal/.style = {
      double
    },
  }

  \newlength{\dontworryaboutit}

  \tikzset{
    inline diagram/.style = {
      commutative diagrams/every diagram,
      commutative diagrams/cramped,
      line width = .5pt,
      every node/.append style = {
        commutative diagrams/every cell,
        anchor = base,
        inner sep = 0pt
      },
      every path/.append style = {
        outer xsep = 2pt
      }
    }
  }
  
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  % Primitives for drawing commutative squares
  \tikzset{
    square/nw/.style = {},
    square/ne/.style = {},
    square/se/.style = {},
    square/sw/.style = {},
    square/north/.style = {-&gt;},
    square/south/.style = {-&gt;},
    square/west/.style = {-&gt;},
    square/east/.style = {-&gt;},
    square/north/node/.style = {above},
    square/south/node/.style = {below},
    square/west/node/.style = {left},
    square/east/node/.style = {right},
  }

  \ExplSyntaxOn

  \bool_new:N \l_jon_glue_west

  \keys_define:nn { jon-tikz/diagram } {
    nw .tl_set:N = \l_jon_tikz_diagram_nw,
    sw .tl_set:N = \l_jon_tikz_diagram_sw,
    ne .tl_set:N = \l_jon_tikz_diagram_ne,
    se .tl_set:N = \l_jon_tikz_diagram_se,

    width .tl_set:N = \l_jon_tikz_diagram_width,
    height .tl_set:N = \l_jon_tikz_diagram_height,

    north .tl_set:N = \l_jon_tikz_diagram_north,
    south .tl_set:N = \l_jon_tikz_diagram_south,
    west .tl_set:N = \l_jon_tikz_diagram_west,
    east .tl_set:N = \l_jon_tikz_diagram_east,

    nw/style .code:n = {\tikzset{square/nw/.style = {#1}}},
    sw/style .code:n = {\tikzset{square/sw/.style = {#1}}},
    ne/style .code:n = {\tikzset{square/ne/.style = {#1}}},
    se/style .code:n = {\tikzset{square/se/.style = {#1}}},

    glue .choice:,
    glue / west .code:n = {\bool_set:Nn \l_jon_glue_west \c_true_bool},

    glue~target .tl_set:N = \l_jon_tikz_glue_target,

    north/style .code:n = {\tikzset{square/north/.style = {#1}}},
    north/node/style .code:n = {\tikzset{square/north/node/.style = {#1}}},
    south/style .code:n = {\tikzset{square/south/.style = {#1}}},
    south/node/style .code:n = {\tikzset{square/south/node/.style = {#1}}},
    west/style .code:n = {\tikzset{square/west/.style = {#1}}},
    west/node/style .code:n = {\tikzset{square/west/node/.style = {#1}}},
    east/style .code:n = {\tikzset{square/east/.style = {#1}}},
    east/node/style .code:n = {\tikzset{square/east/node/.style = {#1}}},

    draft .meta:n = {
      nw = {\__jon_tikz_diagram_fmt_placeholder:n {nw}},
      sw = {\__jon_tikz_diagram_fmt_placeholder:n {sw}},
      se = {\__jon_tikz_diagram_fmt_placeholder:n {se}},
      ne = {\__jon_tikz_diagram_fmt_placeholder:n {ne}},
      north = {\__jon_tikz_diagram_fmt_placeholder:n {north}},
      south = {\__jon_tikz_diagram_fmt_placeholder:n {south}},
      west = {\__jon_tikz_diagram_fmt_placeholder:n {west}},
      east = {\__jon_tikz_diagram_fmt_placeholder:n {east}},
    }
  }

  \tl_set:Nn \l_jon_tikz_diagram_width { 2cm }
  \tl_set:Nn \l_jon_tikz_diagram_height { 2cm }


  \cs_new:Npn \__jon_tikz_diagram_fmt_placeholder:n #1 {
    \texttt{\textcolor{red}{#1}}
  }

  \keys_set:nn { jon-tikz/diagram } {
    glue~target = {},
  }


  \cs_new:Nn \__jon_tikz_render_square:nn {
    \group_begin:
    \keys_set:nn {jon-tikz/diagram} {#2}
    \bool_if:nTF \l_jon_glue_west {
      \node (#1ne) [right = \l_jon_tikz_diagram_width~of~\l_jon_tikz_glue_target ne,square/ne] {$\l_jon_tikz_diagram_ne$};
      \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
      \draw[morphism,square/north] (\l_jon_tikz_glue_target ne) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
      \draw[morphism,square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
      \draw[morphism,square/south] (\l_jon_tikz_glue_target se) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
    } {
      \node (#1nw) [square/nw] {$\l_jon_tikz_diagram_nw$};
      \node (#1sw) [below = \l_jon_tikz_diagram_height~of~#1nw,square/sw] {$\l_jon_tikz_diagram_sw$};
      \draw[morphism,square/west] (#1nw) to node [square/west/node] {$\l_jon_tikz_diagram_west$} (#1sw);

      \node (#1ne) [right = \l_jon_tikz_diagram_width~of~#1nw,square/ne] {$\l_jon_tikz_diagram_ne$};
      \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
      \draw[morphism,square/north] (#1nw) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
      \draw[morphism,square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
      \draw[morphism,square/south] (#1sw) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
    }
    \group_end:
  }

  \NewDocumentCommand\SpliceDiagramSquare{D&lt;&gt;{}m}{
    \__jon_tikz_render_square:nn {#1} {#2}
  }


  \NewDocumentCommand\DiagramSquare{D&lt;&gt;{}O{}m}{
    \begin{tikzpicture}[diagram,#2,baseline=(#1sw.base)]
      \__jon_tikz_render_square:nn {#1} {#3}
    \end{tikzpicture}
  }

  \ExplSyntaxOff
  %
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  % Primitives for drawing adjunction diagrams
  \tikzset{
    adj/w/.style = {},
    adj/e/.style = {},
    adj/left/.style = {-&gt;},
    adj/right/.style = {-&gt;},
    adj/left/node/.style = {above},
    adj/right/node/.style = {below},
  }

  \ExplSyntaxOn

  \bool_new:N \l_fnd_glue_west

  \keys_define:nn { fnd-tikz/adj-diagram } {
    w .tl_set:N = \l_fnd_tikz_adj_diagram_w,
    e .tl_set:N = \l_fnd_tikz_adj_diagram_e,

    width .tl_set:N = \l_fnd_tikz_adj_diagram_width,

    left .tl_set:N = \l_fnd_tikz_adj_diagram_left,
    right .tl_set:N = \l_fnd_tikz_adj_diagram_right,

    glue .choice:,
    glue / west .code:n = {\bool_set:Nn \l_fnd_glue_west \c_true_bool},
    glue~target .tl_set:N = \l_fnd_tikz_glue_target,

    w/style .code:n = {\tikzset{adj/w/.style = {#1}}},
    e/style .code:n = {\tikzset{adj/e/.style = {#1}}},

    left/style .code:n = {\tikzset{adj/left/.style = {#1}}},
    left/node/style .code:n = {\tikzset{adj/left/node/.style = {#1}}},
    right/style .code:n = {\tikzset{adj/right/.style = {#1}}},
    right/node/style .code:n = {\tikzset{adj/right/node/.style = {#1}}},

    draft .meta:n = {
      e = {\__fnd_tikz_adj_diagram_fmt_placeholder:n {e}},
      w = {\__fnd_tikz_adj_diagram_fmt_placeholder:n {w}},
      left = {\__fnd_tikz_adj_diagram_fmt_placeholder:n {left}},
      right = {\__fnd_tikz_adj_diagram_fmt_placeholder:n {right}},
    }
  }

  \tl_set:Nn \l_fnd_tikz_adj_diagram_width { 2cm }

  \cs_new:Npn \__fnd_tikz_adj_diagram_fmt_placeholder:n #1 {
    \texttt{\textcolor{red}{#1}}
  }

  \keys_set:nn { fnd-tikz/adj-diagram } {
    glue~target = {},
  }

  \cs_new:Nn \__fnd_tikz_render_adj_diagram:n {
    \group_begin:
    \keys_set:nn {fnd-tikz/adj-diagram} {#1} {
      % gluing will be implemented when I need it
      \node (w) [adj/w] {$\l_fnd_tikz_adj_diagram_w$};
      \node (e) [right=\l_fnd_tikz_adj_diagram_width~of~w,adj/e] {$\l_fnd_tikz_adj_diagram_e$};
        \draw [morphism,adj/left,offset=.15cm] (e) to node[adj/left/node] (n) {$\l_fnd_tikz_adj_diagram_left$} (w);
        \draw [morphism,adj/right,offset=.15cm] (w) to node[adj/right/node] (s) {$\l_fnd_tikz_adj_diagram_right$} (e);
        \path [morphism] (s) to node[rotate=-90] {$\dashv$} (n);
    }
    \group_end:
  }

  \NewDocumentCommand\AdjDiagram{m}{
    \begin{tikzpicture}[diagram]
      \__fnd_tikz_render_adj_diagram:n {#1}
    \end{tikzpicture}
  }
  
  \ExplSyntaxOff
  %
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 
    </fr:embedded-tex-preamble><fr:embedded-tex-body>
   \begin {tikzpicture}[diagram]
     \node  (n) {$A$};
     \node  [below= of n] (s) {$B$};
     \node  [right= of n] (e) {$S$};
     \draw  [morphism,&gt;-&gt;] (n) to node [left] {$m$} (s);
     \draw  [morphism,-&gt;] (n) to node [above] {$f$} (e);
     \draw  [morphism,-&gt;,exists] (s) to node [yshift=-2pt,right] {$g$} (e);
   \end {tikzpicture}
</fr:embedded-tex-body></fr:embedded-tex>
  
</fr:mainmatter></fr:tree><fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="false"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"><fr:frontmatter><fr:anchor>492</fr:anchor><fr:taxon>Lemma</fr:taxon><fr:addr>topo-000H</fr:addr><fr:route>topo-000H.xml</fr:route><fr:title>Subobjects of separated objects are separated</fr:title><fr:date><fr:year>2024</fr:year><fr:month>5</fr:month><fr:day>28</fr:day></fr:date><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Let <fr:tex>A</fr:tex> be a <fr:link
href="topo-000E.xml"
type="local"
addr="topo-000E">separated</fr:link> object in a <fr:link
href="topo-0001.xml"
type="local"
addr="topo-0001">topos</fr:link> <fr:tex>    \mathcal { E }  </fr:tex>. Any subobject <fr:tex>m \colon  A'  \rightarrowtail  A</fr:tex> is <fr:link
href="topo-000E.xml"
type="local"
addr="topo-000E">separated</fr:link>.</fr:p>
  
    
    <fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="false"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"><fr:frontmatter><fr:anchor>367</fr:anchor><fr:taxon>Proof</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>5</fr:month><fr:day>28</fr:day></fr:date><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors><fr:parent>topo-000H</fr:parent></fr:frontmatter><fr:mainmatter>
  Let <fr:tex>m' \colon  B'  \rightarrowtail  B</fr:tex> be a <fr:link
href="topo-000D.xml"
type="local"
addr="topo-000D">dense</fr:link> subobject and <fr:tex>f \colon  B'  \to  A'</fr:tex> be any morphism. If <fr:tex>f = gm' = hm'</fr:tex> then <fr:tex>mf = mgm' = mhm'</fr:tex>. First, <fr:tex>mg = mh</fr:tex> because <fr:tex>A</fr:tex> is <fr:link
href="topo-000E.xml"
type="local"
addr="topo-000E">separated</fr:link>. Then it follows that <fr:tex>g = h</fr:tex> because <fr:tex>m</fr:tex> is a monomorphism.
  
  
    
    <fr:embedded-tex
hash="51b3d8f8ea7bd0409292afab1a9a4417"><fr:embedded-tex-preamble>
       
   \RequirePackage {tikz}
   \RequirePackage {amsmath}
   \usetikzlibrary {backgrounds, intersections, calc, spath3, fit}

   \definecolor {catccolor}{RGB}{255,244,138}
   \tikzstyle {dot}=[circle, draw=black, fill=black, minimum size=1mm, inner sep=0mm]
   \tikzstyle {catc}=[catccolor!60]
   \tikzstyle {catd}=[orange!40]
   \tikzstyle {cate}=[red!40]
   \tikzstyle {catf}=[blue!10]
   \tikzstyle {catg}=[green!25]


   \tikzstyle {blue halo}=[fill=blue!10, opacity=0.7, rounded corners]
   \tikzstyle {white halo}=[fill=white, opacity=0.7, rounded corners]

   \NewDocumentCommand \CreateRect {D&lt;&gt;{} m m}{
     \path 
      coordinate (#1nw)
      ++(#2,-#3) coordinate (#1se)
      coordinate (#1sw) at (#1se -| #1nw)
      coordinate (#1ne) at (#1nw -| #1se)
    ;

     \path [spath/save = #1north] (#1nw) to (#1ne);
     \path [spath/save = #1west] (#1nw) to (#1sw);
     \path [spath/save = #1east] (#1ne) to (#1se);
     \path [spath/save = #1south] (#1sw) to (#1se);
  }
 
       
    \usepackage{tikz, tikz-cd, mathtools, amssymb, stmaryrd, quiver}
  \usetikzlibrary{matrix,arrows}
  \usetikzlibrary{backgrounds,fit,positioning,calc,shapes}
  \usetikzlibrary{decorations.pathreplacing}
  \usetikzlibrary{decorations.pathmorphing}
  \usetikzlibrary{decorations.markings}

  % basic settings
  \tikzset{
    diagram/.style = {
      on grid,
      node distance=2cm,
      commutative diagrams/every diagram,
      line width = .5pt,
      every node/.append style = {
        commutative diagrams/every cell,
      },
    },
    morphism/.style = {
      auto=left,
      font=\scriptsize,
    },
    desc/.style = {anchor=center,fill=white,inner sep=3pt},
    % /tikz/pos=&lt;fraction&gt; is a key already
    offset/.style args = {#1} {commutative diagrams/shift right={#1}},
  }

  % pullback and pushout
  \tikzset{
    pullback/.style = {
      append after command = {
        \pgfextra{
          \draw ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
        }
      }
    },
    pushout/.style = {
      append after command={
        \pgfextra{
          \draw ($(\tikzlastnode) + (-.2cm,.5cm)$) -- ++(-0.3cm,0) -- ++(0,-0.3cm);
        }
      }
    },
  }

  % arrow styles
  \tikzset{
    fibration/.style = {
      -{Triangle[open]}
    },
    etale/.style = {
      -{Triangle[open]}
    },
    etale cover/.style= {
      &gt;={Triangle[open]},-&gt;.&gt;
    },
    opfibration/.style = {
      -{Triangle}
    },
    lies over/.style = {
      |-{Triangle[open]}
    },
    op lies over/.style = {
      |-{Triangle}
    },
    embedding/.style = {
      {right hook}-&gt;
    },
    open immersion/.style = {
      {right hook}-{Triangle[open]}
    },
    closed immersion/.style = {
      {right hook}-{Triangle}
    },
    closed immersion*/.style = {
      {left hook}-{Triangle}
    },
    embedding*/.style = {
      {left hook}-&gt;
    },
    open immersion*/.style = {
      {left hook}-{Triangle[open]}
    },
    exists/.style = {
      densely dashed
    },
    equal/.style = {
      double
    },
  }

  \newlength{\dontworryaboutit}

  \tikzset{
    inline diagram/.style = {
      commutative diagrams/every diagram,
      commutative diagrams/cramped,
      line width = .5pt,
      every node/.append style = {
        commutative diagrams/every cell,
        anchor = base,
        inner sep = 0pt
      },
      every path/.append style = {
        outer xsep = 2pt
      }
    }
  }
  
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  % Primitives for drawing commutative squares
  \tikzset{
    square/nw/.style = {},
    square/ne/.style = {},
    square/se/.style = {},
    square/sw/.style = {},
    square/north/.style = {-&gt;},
    square/south/.style = {-&gt;},
    square/west/.style = {-&gt;},
    square/east/.style = {-&gt;},
    square/north/node/.style = {above},
    square/south/node/.style = {below},
    square/west/node/.style = {left},
    square/east/node/.style = {right},
  }

  \ExplSyntaxOn

  \bool_new:N \l_jon_glue_west

  \keys_define:nn { jon-tikz/diagram } {
    nw .tl_set:N = \l_jon_tikz_diagram_nw,
    sw .tl_set:N = \l_jon_tikz_diagram_sw,
    ne .tl_set:N = \l_jon_tikz_diagram_ne,
    se .tl_set:N = \l_jon_tikz_diagram_se,

    width .tl_set:N = \l_jon_tikz_diagram_width,
    height .tl_set:N = \l_jon_tikz_diagram_height,

    north .tl_set:N = \l_jon_tikz_diagram_north,
    south .tl_set:N = \l_jon_tikz_diagram_south,
    west .tl_set:N = \l_jon_tikz_diagram_west,
    east .tl_set:N = \l_jon_tikz_diagram_east,

    nw/style .code:n = {\tikzset{square/nw/.style = {#1}}},
    sw/style .code:n = {\tikzset{square/sw/.style = {#1}}},
    ne/style .code:n = {\tikzset{square/ne/.style = {#1}}},
    se/style .code:n = {\tikzset{square/se/.style = {#1}}},

    glue .choice:,
    glue / west .code:n = {\bool_set:Nn \l_jon_glue_west \c_true_bool},

    glue~target .tl_set:N = \l_jon_tikz_glue_target,

    north/style .code:n = {\tikzset{square/north/.style = {#1}}},
    north/node/style .code:n = {\tikzset{square/north/node/.style = {#1}}},
    south/style .code:n = {\tikzset{square/south/.style = {#1}}},
    south/node/style .code:n = {\tikzset{square/south/node/.style = {#1}}},
    west/style .code:n = {\tikzset{square/west/.style = {#1}}},
    west/node/style .code:n = {\tikzset{square/west/node/.style = {#1}}},
    east/style .code:n = {\tikzset{square/east/.style = {#1}}},
    east/node/style .code:n = {\tikzset{square/east/node/.style = {#1}}},

    draft .meta:n = {
      nw = {\__jon_tikz_diagram_fmt_placeholder:n {nw}},
      sw = {\__jon_tikz_diagram_fmt_placeholder:n {sw}},
      se = {\__jon_tikz_diagram_fmt_placeholder:n {se}},
      ne = {\__jon_tikz_diagram_fmt_placeholder:n {ne}},
      north = {\__jon_tikz_diagram_fmt_placeholder:n {north}},
      south = {\__jon_tikz_diagram_fmt_placeholder:n {south}},
      west = {\__jon_tikz_diagram_fmt_placeholder:n {west}},
      east = {\__jon_tikz_diagram_fmt_placeholder:n {east}},
    }
  }

  \tl_set:Nn \l_jon_tikz_diagram_width { 2cm }
  \tl_set:Nn \l_jon_tikz_diagram_height { 2cm }


  \cs_new:Npn \__jon_tikz_diagram_fmt_placeholder:n #1 {
    \texttt{\textcolor{red}{#1}}
  }

  \keys_set:nn { jon-tikz/diagram } {
    glue~target = {},
  }


  \cs_new:Nn \__jon_tikz_render_square:nn {
    \group_begin:
    \keys_set:nn {jon-tikz/diagram} {#2}
    \bool_if:nTF \l_jon_glue_west {
      \node (#1ne) [right = \l_jon_tikz_diagram_width~of~\l_jon_tikz_glue_target ne,square/ne] {$\l_jon_tikz_diagram_ne$};
      \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
      \draw[morphism,square/north] (\l_jon_tikz_glue_target ne) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
      \draw[morphism,square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
      \draw[morphism,square/south] (\l_jon_tikz_glue_target se) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
    } {
      \node (#1nw) [square/nw] {$\l_jon_tikz_diagram_nw$};
      \node (#1sw) [below = \l_jon_tikz_diagram_height~of~#1nw,square/sw] {$\l_jon_tikz_diagram_sw$};
      \draw[morphism,square/west] (#1nw) to node [square/west/node] {$\l_jon_tikz_diagram_west$} (#1sw);

      \node (#1ne) [right = \l_jon_tikz_diagram_width~of~#1nw,square/ne] {$\l_jon_tikz_diagram_ne$};
      \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
      \draw[morphism,square/north] (#1nw) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
      \draw[morphism,square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
      \draw[morphism,square/south] (#1sw) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
    }
    \group_end:
  }

  \NewDocumentCommand\SpliceDiagramSquare{D&lt;&gt;{}m}{
    \__jon_tikz_render_square:nn {#1} {#2}
  }


  \NewDocumentCommand\DiagramSquare{D&lt;&gt;{}O{}m}{
    \begin{tikzpicture}[diagram,#2,baseline=(#1sw.base)]
      \__jon_tikz_render_square:nn {#1} {#3}
    \end{tikzpicture}
  }

  \ExplSyntaxOff
  %
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  % Primitives for drawing adjunction diagrams
  \tikzset{
    adj/w/.style = {},
    adj/e/.style = {},
    adj/left/.style = {-&gt;},
    adj/right/.style = {-&gt;},
    adj/left/node/.style = {above},
    adj/right/node/.style = {below},
  }

  \ExplSyntaxOn

  \bool_new:N \l_fnd_glue_west

  \keys_define:nn { fnd-tikz/adj-diagram } {
    w .tl_set:N = \l_fnd_tikz_adj_diagram_w,
    e .tl_set:N = \l_fnd_tikz_adj_diagram_e,

    width .tl_set:N = \l_fnd_tikz_adj_diagram_width,

    left .tl_set:N = \l_fnd_tikz_adj_diagram_left,
    right .tl_set:N = \l_fnd_tikz_adj_diagram_right,

    glue .choice:,
    glue / west .code:n = {\bool_set:Nn \l_fnd_glue_west \c_true_bool},
    glue~target .tl_set:N = \l_fnd_tikz_glue_target,

    w/style .code:n = {\tikzset{adj/w/.style = {#1}}},
    e/style .code:n = {\tikzset{adj/e/.style = {#1}}},

    left/style .code:n = {\tikzset{adj/left/.style = {#1}}},
    left/node/style .code:n = {\tikzset{adj/left/node/.style = {#1}}},
    right/style .code:n = {\tikzset{adj/right/.style = {#1}}},
    right/node/style .code:n = {\tikzset{adj/right/node/.style = {#1}}},

    draft .meta:n = {
      e = {\__fnd_tikz_adj_diagram_fmt_placeholder:n {e}},
      w = {\__fnd_tikz_adj_diagram_fmt_placeholder:n {w}},
      left = {\__fnd_tikz_adj_diagram_fmt_placeholder:n {left}},
      right = {\__fnd_tikz_adj_diagram_fmt_placeholder:n {right}},
    }
  }

  \tl_set:Nn \l_fnd_tikz_adj_diagram_width { 2cm }

  \cs_new:Npn \__fnd_tikz_adj_diagram_fmt_placeholder:n #1 {
    \texttt{\textcolor{red}{#1}}
  }

  \keys_set:nn { fnd-tikz/adj-diagram } {
    glue~target = {},
  }

  \cs_new:Nn \__fnd_tikz_render_adj_diagram:n {
    \group_begin:
    \keys_set:nn {fnd-tikz/adj-diagram} {#1} {
      % gluing will be implemented when I need it
      \node (w) [adj/w] {$\l_fnd_tikz_adj_diagram_w$};
      \node (e) [right=\l_fnd_tikz_adj_diagram_width~of~w,adj/e] {$\l_fnd_tikz_adj_diagram_e$};
        \draw [morphism,adj/left,offset=.15cm] (e) to node[adj/left/node] (n) {$\l_fnd_tikz_adj_diagram_left$} (w);
        \draw [morphism,adj/right,offset=.15cm] (w) to node[adj/right/node] (s) {$\l_fnd_tikz_adj_diagram_right$} (e);
        \path [morphism] (s) to node[rotate=-90] {$\dashv$} (n);
    }
    \group_end:
  }

  \NewDocumentCommand\AdjDiagram{m}{
    \begin{tikzpicture}[diagram]
      \__fnd_tikz_render_adj_diagram:n {#1}
    \end{tikzpicture}
  }
  
  \ExplSyntaxOff
  %
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 
    </fr:embedded-tex-preamble><fr:embedded-tex-body>
         \begin {tikzcd}
      {B'} &amp;&amp; {A'} &amp;&amp; {A}  \\ 
       \\ 
      {B}
       \arrow ["f", from=1-1, to=1-3]
       \arrow ["{m'}"', tail, from=1-1, to=3-1]
       \arrow ["m", tail, from=1-3, to=1-5]
       \arrow ["g", shift left, from=3-1, to=1-3]
       \arrow ["h"', shift right, from=3-1, to=1-3]
       \arrow ["mg"{pos=0.7}, curve={height=6pt}, from=3-1, to=1-5]
       \arrow ["mh"'{pos=0.8}, shift right=2, curve={height=6pt}, from=3-1, to=1-5]
     \end {tikzcd}
  </fr:embedded-tex-body></fr:embedded-tex>
  

</fr:mainmatter></fr:tree>
  
</fr:mainmatter></fr:tree><fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="false"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"><fr:frontmatter><fr:anchor>494</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>ct-0002</fr:addr><fr:route>ct-0002.xml</fr:route><fr:title>Symmetric relation</fr:title><fr:date><fr:year>2024</fr:year><fr:month>5</fr:month><fr:day>28</fr:day></fr:date><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Let <fr:tex>(a,b) \colon  R  \rightarrowtail  A  \times  A</fr:tex> be a relation in a category with finite limits. <fr:tex>(a,b)</fr:tex> is said to be <fr:em><fr:strong>symmetric</fr:strong></fr:em> if the <fr:em>twisted</fr:em> relation <fr:tex>(b,a)</fr:tex> factors through <fr:tex>(a,b)</fr:tex>, i.e., there is a map <fr:tex>\sigma \colon  R  \to  R</fr:tex> such that <fr:tex>a \sigma  = b</fr:tex> and <fr:tex>b \sigma  = a</fr:tex>.</fr:p></fr:mainmatter></fr:tree><fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="false"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"><fr:frontmatter><fr:anchor>496</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>ct-0003</fr:addr><fr:route>ct-0003.xml</fr:route><fr:title>Transitive relation</fr:title><fr:date><fr:year>2024</fr:year><fr:month>5</fr:month><fr:day>28</fr:day></fr:date><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Let <fr:tex>(a,b) \colon  R  \rightarrowtail  A  \times  A</fr:tex> be a relation in a category with finite limits. <fr:tex>(a,b)</fr:tex> is said to be <fr:em><fr:strong>transitive</fr:strong></fr:em> if the relation <fr:tex>(ap,bq) \colon  R  \times _{A} R  \rightarrowtail  A  \times  A</fr:tex> factors through <fr:tex>(a,b)</fr:tex>, i.e., there is a map <fr:tex>\tau \colon  R  \times _{A} R  \to  R</fr:tex> such that <fr:tex>a \tau  = ap</fr:tex> and <fr:tex>b \tau  = bq</fr:tex>, where <fr:tex>p</fr:tex> and <fr:tex>q</fr:tex> are the projection maps of the following pullback.</fr:p>
  
    
    <fr:embedded-tex
hash="1fd9a3b4ddb4ef10a565f418094f8f2c"><fr:embedded-tex-preamble>
       
   \RequirePackage {tikz}
   \RequirePackage {amsmath}
   \usetikzlibrary {backgrounds, intersections, calc, spath3, fit}

   \definecolor {catccolor}{RGB}{255,244,138}
   \tikzstyle {dot}=[circle, draw=black, fill=black, minimum size=1mm, inner sep=0mm]
   \tikzstyle {catc}=[catccolor!60]
   \tikzstyle {catd}=[orange!40]
   \tikzstyle {cate}=[red!40]
   \tikzstyle {catf}=[blue!10]
   \tikzstyle {catg}=[green!25]


   \tikzstyle {blue halo}=[fill=blue!10, opacity=0.7, rounded corners]
   \tikzstyle {white halo}=[fill=white, opacity=0.7, rounded corners]

   \NewDocumentCommand \CreateRect {D&lt;&gt;{} m m}{
     \path 
      coordinate (#1nw)
      ++(#2,-#3) coordinate (#1se)
      coordinate (#1sw) at (#1se -| #1nw)
      coordinate (#1ne) at (#1nw -| #1se)
    ;

     \path [spath/save = #1north] (#1nw) to (#1ne);
     \path [spath/save = #1west] (#1nw) to (#1sw);
     \path [spath/save = #1east] (#1ne) to (#1se);
     \path [spath/save = #1south] (#1sw) to (#1se);
  }
 
       
    \usepackage{tikz, tikz-cd, mathtools, amssymb, stmaryrd, quiver}
  \usetikzlibrary{matrix,arrows}
  \usetikzlibrary{backgrounds,fit,positioning,calc,shapes}
  \usetikzlibrary{decorations.pathreplacing}
  \usetikzlibrary{decorations.pathmorphing}
  \usetikzlibrary{decorations.markings}

  % basic settings
  \tikzset{
    diagram/.style = {
      on grid,
      node distance=2cm,
      commutative diagrams/every diagram,
      line width = .5pt,
      every node/.append style = {
        commutative diagrams/every cell,
      },
    },
    morphism/.style = {
      auto=left,
      font=\scriptsize,
    },
    desc/.style = {anchor=center,fill=white,inner sep=3pt},
    % /tikz/pos=&lt;fraction&gt; is a key already
    offset/.style args = {#1} {commutative diagrams/shift right={#1}},
  }

  % pullback and pushout
  \tikzset{
    pullback/.style = {
      append after command = {
        \pgfextra{
          \draw ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
        }
      }
    },
    pushout/.style = {
      append after command={
        \pgfextra{
          \draw ($(\tikzlastnode) + (-.2cm,.5cm)$) -- ++(-0.3cm,0) -- ++(0,-0.3cm);
        }
      }
    },
  }

  % arrow styles
  \tikzset{
    fibration/.style = {
      -{Triangle[open]}
    },
    etale/.style = {
      -{Triangle[open]}
    },
    etale cover/.style= {
      &gt;={Triangle[open]},-&gt;.&gt;
    },
    opfibration/.style = {
      -{Triangle}
    },
    lies over/.style = {
      |-{Triangle[open]}
    },
    op lies over/.style = {
      |-{Triangle}
    },
    embedding/.style = {
      {right hook}-&gt;
    },
    open immersion/.style = {
      {right hook}-{Triangle[open]}
    },
    closed immersion/.style = {
      {right hook}-{Triangle}
    },
    closed immersion*/.style = {
      {left hook}-{Triangle}
    },
    embedding*/.style = {
      {left hook}-&gt;
    },
    open immersion*/.style = {
      {left hook}-{Triangle[open]}
    },
    exists/.style = {
      densely dashed
    },
    equal/.style = {
      double
    },
  }

  \newlength{\dontworryaboutit}

  \tikzset{
    inline diagram/.style = {
      commutative diagrams/every diagram,
      commutative diagrams/cramped,
      line width = .5pt,
      every node/.append style = {
        commutative diagrams/every cell,
        anchor = base,
        inner sep = 0pt
      },
      every path/.append style = {
        outer xsep = 2pt
      }
    }
  }
  
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  % Primitives for drawing commutative squares
  \tikzset{
    square/nw/.style = {},
    square/ne/.style = {},
    square/se/.style = {},
    square/sw/.style = {},
    square/north/.style = {-&gt;},
    square/south/.style = {-&gt;},
    square/west/.style = {-&gt;},
    square/east/.style = {-&gt;},
    square/north/node/.style = {above},
    square/south/node/.style = {below},
    square/west/node/.style = {left},
    square/east/node/.style = {right},
  }

  \ExplSyntaxOn

  \bool_new:N \l_jon_glue_west

  \keys_define:nn { jon-tikz/diagram } {
    nw .tl_set:N = \l_jon_tikz_diagram_nw,
    sw .tl_set:N = \l_jon_tikz_diagram_sw,
    ne .tl_set:N = \l_jon_tikz_diagram_ne,
    se .tl_set:N = \l_jon_tikz_diagram_se,

    width .tl_set:N = \l_jon_tikz_diagram_width,
    height .tl_set:N = \l_jon_tikz_diagram_height,

    north .tl_set:N = \l_jon_tikz_diagram_north,
    south .tl_set:N = \l_jon_tikz_diagram_south,
    west .tl_set:N = \l_jon_tikz_diagram_west,
    east .tl_set:N = \l_jon_tikz_diagram_east,

    nw/style .code:n = {\tikzset{square/nw/.style = {#1}}},
    sw/style .code:n = {\tikzset{square/sw/.style = {#1}}},
    ne/style .code:n = {\tikzset{square/ne/.style = {#1}}},
    se/style .code:n = {\tikzset{square/se/.style = {#1}}},

    glue .choice:,
    glue / west .code:n = {\bool_set:Nn \l_jon_glue_west \c_true_bool},

    glue~target .tl_set:N = \l_jon_tikz_glue_target,

    north/style .code:n = {\tikzset{square/north/.style = {#1}}},
    north/node/style .code:n = {\tikzset{square/north/node/.style = {#1}}},
    south/style .code:n = {\tikzset{square/south/.style = {#1}}},
    south/node/style .code:n = {\tikzset{square/south/node/.style = {#1}}},
    west/style .code:n = {\tikzset{square/west/.style = {#1}}},
    west/node/style .code:n = {\tikzset{square/west/node/.style = {#1}}},
    east/style .code:n = {\tikzset{square/east/.style = {#1}}},
    east/node/style .code:n = {\tikzset{square/east/node/.style = {#1}}},

    draft .meta:n = {
      nw = {\__jon_tikz_diagram_fmt_placeholder:n {nw}},
      sw = {\__jon_tikz_diagram_fmt_placeholder:n {sw}},
      se = {\__jon_tikz_diagram_fmt_placeholder:n {se}},
      ne = {\__jon_tikz_diagram_fmt_placeholder:n {ne}},
      north = {\__jon_tikz_diagram_fmt_placeholder:n {north}},
      south = {\__jon_tikz_diagram_fmt_placeholder:n {south}},
      west = {\__jon_tikz_diagram_fmt_placeholder:n {west}},
      east = {\__jon_tikz_diagram_fmt_placeholder:n {east}},
    }
  }

  \tl_set:Nn \l_jon_tikz_diagram_width { 2cm }
  \tl_set:Nn \l_jon_tikz_diagram_height { 2cm }


  \cs_new:Npn \__jon_tikz_diagram_fmt_placeholder:n #1 {
    \texttt{\textcolor{red}{#1}}
  }

  \keys_set:nn { jon-tikz/diagram } {
    glue~target = {},
  }


  \cs_new:Nn \__jon_tikz_render_square:nn {
    \group_begin:
    \keys_set:nn {jon-tikz/diagram} {#2}
    \bool_if:nTF \l_jon_glue_west {
      \node (#1ne) [right = \l_jon_tikz_diagram_width~of~\l_jon_tikz_glue_target ne,square/ne] {$\l_jon_tikz_diagram_ne$};
      \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
      \draw[morphism,square/north] (\l_jon_tikz_glue_target ne) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
      \draw[morphism,square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
      \draw[morphism,square/south] (\l_jon_tikz_glue_target se) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
    } {
      \node (#1nw) [square/nw] {$\l_jon_tikz_diagram_nw$};
      \node (#1sw) [below = \l_jon_tikz_diagram_height~of~#1nw,square/sw] {$\l_jon_tikz_diagram_sw$};
      \draw[morphism,square/west] (#1nw) to node [square/west/node] {$\l_jon_tikz_diagram_west$} (#1sw);

      \node (#1ne) [right = \l_jon_tikz_diagram_width~of~#1nw,square/ne] {$\l_jon_tikz_diagram_ne$};
      \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
      \draw[morphism,square/north] (#1nw) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
      \draw[morphism,square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
      \draw[morphism,square/south] (#1sw) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
    }
    \group_end:
  }

  \NewDocumentCommand\SpliceDiagramSquare{D&lt;&gt;{}m}{
    \__jon_tikz_render_square:nn {#1} {#2}
  }


  \NewDocumentCommand\DiagramSquare{D&lt;&gt;{}O{}m}{
    \begin{tikzpicture}[diagram,#2,baseline=(#1sw.base)]
      \__jon_tikz_render_square:nn {#1} {#3}
    \end{tikzpicture}
  }

  \ExplSyntaxOff
  %
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  % Primitives for drawing adjunction diagrams
  \tikzset{
    adj/w/.style = {},
    adj/e/.style = {},
    adj/left/.style = {-&gt;},
    adj/right/.style = {-&gt;},
    adj/left/node/.style = {above},
    adj/right/node/.style = {below},
  }

  \ExplSyntaxOn

  \bool_new:N \l_fnd_glue_west

  \keys_define:nn { fnd-tikz/adj-diagram } {
    w .tl_set:N = \l_fnd_tikz_adj_diagram_w,
    e .tl_set:N = \l_fnd_tikz_adj_diagram_e,

    width .tl_set:N = \l_fnd_tikz_adj_diagram_width,

    left .tl_set:N = \l_fnd_tikz_adj_diagram_left,
    right .tl_set:N = \l_fnd_tikz_adj_diagram_right,

    glue .choice:,
    glue / west .code:n = {\bool_set:Nn \l_fnd_glue_west \c_true_bool},
    glue~target .tl_set:N = \l_fnd_tikz_glue_target,

    w/style .code:n = {\tikzset{adj/w/.style = {#1}}},
    e/style .code:n = {\tikzset{adj/e/.style = {#1}}},

    left/style .code:n = {\tikzset{adj/left/.style = {#1}}},
    left/node/style .code:n = {\tikzset{adj/left/node/.style = {#1}}},
    right/style .code:n = {\tikzset{adj/right/.style = {#1}}},
    right/node/style .code:n = {\tikzset{adj/right/node/.style = {#1}}},

    draft .meta:n = {
      e = {\__fnd_tikz_adj_diagram_fmt_placeholder:n {e}},
      w = {\__fnd_tikz_adj_diagram_fmt_placeholder:n {w}},
      left = {\__fnd_tikz_adj_diagram_fmt_placeholder:n {left}},
      right = {\__fnd_tikz_adj_diagram_fmt_placeholder:n {right}},
    }
  }

  \tl_set:Nn \l_fnd_tikz_adj_diagram_width { 2cm }

  \cs_new:Npn \__fnd_tikz_adj_diagram_fmt_placeholder:n #1 {
    \texttt{\textcolor{red}{#1}}
  }

  \keys_set:nn { fnd-tikz/adj-diagram } {
    glue~target = {},
  }

  \cs_new:Nn \__fnd_tikz_render_adj_diagram:n {
    \group_begin:
    \keys_set:nn {fnd-tikz/adj-diagram} {#1} {
      % gluing will be implemented when I need it
      \node (w) [adj/w] {$\l_fnd_tikz_adj_diagram_w$};
      \node (e) [right=\l_fnd_tikz_adj_diagram_width~of~w,adj/e] {$\l_fnd_tikz_adj_diagram_e$};
        \draw [morphism,adj/left,offset=.15cm] (e) to node[adj/left/node] (n) {$\l_fnd_tikz_adj_diagram_left$} (w);
        \draw [morphism,adj/right,offset=.15cm] (w) to node[adj/right/node] (s) {$\l_fnd_tikz_adj_diagram_right$} (e);
        \path [morphism] (s) to node[rotate=-90] {$\dashv$} (n);
    }
    \group_end:
  }

  \NewDocumentCommand\AdjDiagram{m}{
    \begin{tikzpicture}[diagram]
      \__fnd_tikz_render_adj_diagram:n {#1}
    \end{tikzpicture}
  }
  
  \ExplSyntaxOff
  %
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 
    </fr:embedded-tex-preamble><fr:embedded-tex-body>
   \DiagramSquare {
    nw = R  \times _{A} R,
    ne = R,
    sw = R,
    se = A,
    nw/style = pullback,
    north = q,
    west = p,
    south = b,
    east = a,
  }
</fr:embedded-tex-body></fr:embedded-tex>
  
</fr:mainmatter></fr:tree><fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="false"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"><fr:frontmatter><fr:anchor>498</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>topo-0001</fr:addr><fr:route>topo-0001.xml</fr:route><fr:title>Elementary topos</fr:title><fr:date><fr:year>2024</fr:year><fr:month>5</fr:month><fr:day>27</fr:day></fr:date><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>An <fr:em><fr:strong>(elementary) topos</fr:strong></fr:em> is a finitely complete and cartesian closed category equipped with a <fr:link
href="ct-0009.xml"
type="local"
addr="ct-0009">subobject classifier</fr:link>.</fr:p></fr:mainmatter></fr:tree><fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="false"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"><fr:frontmatter><fr:anchor>500</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>topo-0006</fr:addr><fr:route>topo-0006.xml</fr:route><fr:title>Essential <fr:link
href="topo-0003.xml"
type="local"
addr="topo-0003">geometric morphism</fr:link></fr:title><fr:date><fr:year>2024</fr:year><fr:month>5</fr:month><fr:day>27</fr:day></fr:date><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>A <fr:link
href="topo-0003.xml"
type="local"
addr="topo-0003">geometric morphism</fr:link> <fr:tex>{ f } \colon {     \mathcal { E }   } \to {     \mathcal { F }   }</fr:tex> is said to be <fr:em><fr:strong>essential</fr:strong></fr:em> if its inverse image <fr:tex>f ^{{*}}</fr:tex> admits a left adjoint.</fr:p></fr:mainmatter></fr:tree><fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="false"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"><fr:frontmatter><fr:anchor>502</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>topo-0003</fr:addr><fr:route>topo-0003.xml</fr:route><fr:title>Geometric morphism</fr:title><fr:date><fr:year>2024</fr:year><fr:month>5</fr:month><fr:day>27</fr:day></fr:date><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Let <fr:tex>    \mathcal { E }  </fr:tex> and <fr:tex>    \mathcal { F }  </fr:tex> be <fr:link
href="topo-0001.xml"
type="local"
addr="topo-0001">topoi</fr:link>. A <fr:em><fr:strong>geometric morphism</fr:strong></fr:em> <fr:tex>{ f } \colon {     \mathcal { E }   } \to {     \mathcal { F }   }</fr:tex> is an adjoint pair of functors</fr:p>
  
    
    <fr:embedded-tex
hash="a68f36d038b488010faa4427ccc5623b"><fr:embedded-tex-preamble>
       
   \RequirePackage {tikz}
   \RequirePackage {amsmath}
   \usetikzlibrary {backgrounds, intersections, calc, spath3, fit}

   \definecolor {catccolor}{RGB}{255,244,138}
   \tikzstyle {dot}=[circle, draw=black, fill=black, minimum size=1mm, inner sep=0mm]
   \tikzstyle {catc}=[catccolor!60]
   \tikzstyle {catd}=[orange!40]
   \tikzstyle {cate}=[red!40]
   \tikzstyle {catf}=[blue!10]
   \tikzstyle {catg}=[green!25]


   \tikzstyle {blue halo}=[fill=blue!10, opacity=0.7, rounded corners]
   \tikzstyle {white halo}=[fill=white, opacity=0.7, rounded corners]

   \NewDocumentCommand \CreateRect {D&lt;&gt;{} m m}{
     \path 
      coordinate (#1nw)
      ++(#2,-#3) coordinate (#1se)
      coordinate (#1sw) at (#1se -| #1nw)
      coordinate (#1ne) at (#1nw -| #1se)
    ;

     \path [spath/save = #1north] (#1nw) to (#1ne);
     \path [spath/save = #1west] (#1nw) to (#1sw);
     \path [spath/save = #1east] (#1ne) to (#1se);
     \path [spath/save = #1south] (#1sw) to (#1se);
  }
 
       
    \usepackage{tikz, tikz-cd, mathtools, amssymb, stmaryrd, quiver}
  \usetikzlibrary{matrix,arrows}
  \usetikzlibrary{backgrounds,fit,positioning,calc,shapes}
  \usetikzlibrary{decorations.pathreplacing}
  \usetikzlibrary{decorations.pathmorphing}
  \usetikzlibrary{decorations.markings}

  % basic settings
  \tikzset{
    diagram/.style = {
      on grid,
      node distance=2cm,
      commutative diagrams/every diagram,
      line width = .5pt,
      every node/.append style = {
        commutative diagrams/every cell,
      },
    },
    morphism/.style = {
      auto=left,
      font=\scriptsize,
    },
    desc/.style = {anchor=center,fill=white,inner sep=3pt},
    % /tikz/pos=&lt;fraction&gt; is a key already
    offset/.style args = {#1} {commutative diagrams/shift right={#1}},
  }

  % pullback and pushout
  \tikzset{
    pullback/.style = {
      append after command = {
        \pgfextra{
          \draw ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
        }
      }
    },
    pushout/.style = {
      append after command={
        \pgfextra{
          \draw ($(\tikzlastnode) + (-.2cm,.5cm)$) -- ++(-0.3cm,0) -- ++(0,-0.3cm);
        }
      }
    },
  }

  % arrow styles
  \tikzset{
    fibration/.style = {
      -{Triangle[open]}
    },
    etale/.style = {
      -{Triangle[open]}
    },
    etale cover/.style= {
      &gt;={Triangle[open]},-&gt;.&gt;
    },
    opfibration/.style = {
      -{Triangle}
    },
    lies over/.style = {
      |-{Triangle[open]}
    },
    op lies over/.style = {
      |-{Triangle}
    },
    embedding/.style = {
      {right hook}-&gt;
    },
    open immersion/.style = {
      {right hook}-{Triangle[open]}
    },
    closed immersion/.style = {
      {right hook}-{Triangle}
    },
    closed immersion*/.style = {
      {left hook}-{Triangle}
    },
    embedding*/.style = {
      {left hook}-&gt;
    },
    open immersion*/.style = {
      {left hook}-{Triangle[open]}
    },
    exists/.style = {
      densely dashed
    },
    equal/.style = {
      double
    },
  }

  \newlength{\dontworryaboutit}

  \tikzset{
    inline diagram/.style = {
      commutative diagrams/every diagram,
      commutative diagrams/cramped,
      line width = .5pt,
      every node/.append style = {
        commutative diagrams/every cell,
        anchor = base,
        inner sep = 0pt
      },
      every path/.append style = {
        outer xsep = 2pt
      }
    }
  }
  
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  % Primitives for drawing commutative squares
  \tikzset{
    square/nw/.style = {},
    square/ne/.style = {},
    square/se/.style = {},
    square/sw/.style = {},
    square/north/.style = {-&gt;},
    square/south/.style = {-&gt;},
    square/west/.style = {-&gt;},
    square/east/.style = {-&gt;},
    square/north/node/.style = {above},
    square/south/node/.style = {below},
    square/west/node/.style = {left},
    square/east/node/.style = {right},
  }

  \ExplSyntaxOn

  \bool_new:N \l_jon_glue_west

  \keys_define:nn { jon-tikz/diagram } {
    nw .tl_set:N = \l_jon_tikz_diagram_nw,
    sw .tl_set:N = \l_jon_tikz_diagram_sw,
    ne .tl_set:N = \l_jon_tikz_diagram_ne,
    se .tl_set:N = \l_jon_tikz_diagram_se,

    width .tl_set:N = \l_jon_tikz_diagram_width,
    height .tl_set:N = \l_jon_tikz_diagram_height,

    north .tl_set:N = \l_jon_tikz_diagram_north,
    south .tl_set:N = \l_jon_tikz_diagram_south,
    west .tl_set:N = \l_jon_tikz_diagram_west,
    east .tl_set:N = \l_jon_tikz_diagram_east,

    nw/style .code:n = {\tikzset{square/nw/.style = {#1}}},
    sw/style .code:n = {\tikzset{square/sw/.style = {#1}}},
    ne/style .code:n = {\tikzset{square/ne/.style = {#1}}},
    se/style .code:n = {\tikzset{square/se/.style = {#1}}},

    glue .choice:,
    glue / west .code:n = {\bool_set:Nn \l_jon_glue_west \c_true_bool},

    glue~target .tl_set:N = \l_jon_tikz_glue_target,

    north/style .code:n = {\tikzset{square/north/.style = {#1}}},
    north/node/style .code:n = {\tikzset{square/north/node/.style = {#1}}},
    south/style .code:n = {\tikzset{square/south/.style = {#1}}},
    south/node/style .code:n = {\tikzset{square/south/node/.style = {#1}}},
    west/style .code:n = {\tikzset{square/west/.style = {#1}}},
    west/node/style .code:n = {\tikzset{square/west/node/.style = {#1}}},
    east/style .code:n = {\tikzset{square/east/.style = {#1}}},
    east/node/style .code:n = {\tikzset{square/east/node/.style = {#1}}},

    draft .meta:n = {
      nw = {\__jon_tikz_diagram_fmt_placeholder:n {nw}},
      sw = {\__jon_tikz_diagram_fmt_placeholder:n {sw}},
      se = {\__jon_tikz_diagram_fmt_placeholder:n {se}},
      ne = {\__jon_tikz_diagram_fmt_placeholder:n {ne}},
      north = {\__jon_tikz_diagram_fmt_placeholder:n {north}},
      south = {\__jon_tikz_diagram_fmt_placeholder:n {south}},
      west = {\__jon_tikz_diagram_fmt_placeholder:n {west}},
      east = {\__jon_tikz_diagram_fmt_placeholder:n {east}},
    }
  }

  \tl_set:Nn \l_jon_tikz_diagram_width { 2cm }
  \tl_set:Nn \l_jon_tikz_diagram_height { 2cm }


  \cs_new:Npn \__jon_tikz_diagram_fmt_placeholder:n #1 {
    \texttt{\textcolor{red}{#1}}
  }

  \keys_set:nn { jon-tikz/diagram } {
    glue~target = {},
  }


  \cs_new:Nn \__jon_tikz_render_square:nn {
    \group_begin:
    \keys_set:nn {jon-tikz/diagram} {#2}
    \bool_if:nTF \l_jon_glue_west {
      \node (#1ne) [right = \l_jon_tikz_diagram_width~of~\l_jon_tikz_glue_target ne,square/ne] {$\l_jon_tikz_diagram_ne$};
      \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
      \draw[morphism,square/north] (\l_jon_tikz_glue_target ne) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
      \draw[morphism,square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
      \draw[morphism,square/south] (\l_jon_tikz_glue_target se) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
    } {
      \node (#1nw) [square/nw] {$\l_jon_tikz_diagram_nw$};
      \node (#1sw) [below = \l_jon_tikz_diagram_height~of~#1nw,square/sw] {$\l_jon_tikz_diagram_sw$};
      \draw[morphism,square/west] (#1nw) to node [square/west/node] {$\l_jon_tikz_diagram_west$} (#1sw);

      \node (#1ne) [right = \l_jon_tikz_diagram_width~of~#1nw,square/ne] {$\l_jon_tikz_diagram_ne$};
      \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
      \draw[morphism,square/north] (#1nw) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
      \draw[morphism,square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
      \draw[morphism,square/south] (#1sw) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
    }
    \group_end:
  }

  \NewDocumentCommand\SpliceDiagramSquare{D&lt;&gt;{}m}{
    \__jon_tikz_render_square:nn {#1} {#2}
  }


  \NewDocumentCommand\DiagramSquare{D&lt;&gt;{}O{}m}{
    \begin{tikzpicture}[diagram,#2,baseline=(#1sw.base)]
      \__jon_tikz_render_square:nn {#1} {#3}
    \end{tikzpicture}
  }

  \ExplSyntaxOff
  %
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  % Primitives for drawing adjunction diagrams
  \tikzset{
    adj/w/.style = {},
    adj/e/.style = {},
    adj/left/.style = {-&gt;},
    adj/right/.style = {-&gt;},
    adj/left/node/.style = {above},
    adj/right/node/.style = {below},
  }

  \ExplSyntaxOn

  \bool_new:N \l_fnd_glue_west

  \keys_define:nn { fnd-tikz/adj-diagram } {
    w .tl_set:N = \l_fnd_tikz_adj_diagram_w,
    e .tl_set:N = \l_fnd_tikz_adj_diagram_e,

    width .tl_set:N = \l_fnd_tikz_adj_diagram_width,

    left .tl_set:N = \l_fnd_tikz_adj_diagram_left,
    right .tl_set:N = \l_fnd_tikz_adj_diagram_right,

    glue .choice:,
    glue / west .code:n = {\bool_set:Nn \l_fnd_glue_west \c_true_bool},
    glue~target .tl_set:N = \l_fnd_tikz_glue_target,

    w/style .code:n = {\tikzset{adj/w/.style = {#1}}},
    e/style .code:n = {\tikzset{adj/e/.style = {#1}}},

    left/style .code:n = {\tikzset{adj/left/.style = {#1}}},
    left/node/style .code:n = {\tikzset{adj/left/node/.style = {#1}}},
    right/style .code:n = {\tikzset{adj/right/.style = {#1}}},
    right/node/style .code:n = {\tikzset{adj/right/node/.style = {#1}}},

    draft .meta:n = {
      e = {\__fnd_tikz_adj_diagram_fmt_placeholder:n {e}},
      w = {\__fnd_tikz_adj_diagram_fmt_placeholder:n {w}},
      left = {\__fnd_tikz_adj_diagram_fmt_placeholder:n {left}},
      right = {\__fnd_tikz_adj_diagram_fmt_placeholder:n {right}},
    }
  }

  \tl_set:Nn \l_fnd_tikz_adj_diagram_width { 2cm }

  \cs_new:Npn \__fnd_tikz_adj_diagram_fmt_placeholder:n #1 {
    \texttt{\textcolor{red}{#1}}
  }

  \keys_set:nn { fnd-tikz/adj-diagram } {
    glue~target = {},
  }

  \cs_new:Nn \__fnd_tikz_render_adj_diagram:n {
    \group_begin:
    \keys_set:nn {fnd-tikz/adj-diagram} {#1} {
      % gluing will be implemented when I need it
      \node (w) [adj/w] {$\l_fnd_tikz_adj_diagram_w$};
      \node (e) [right=\l_fnd_tikz_adj_diagram_width~of~w,adj/e] {$\l_fnd_tikz_adj_diagram_e$};
        \draw [morphism,adj/left,offset=.15cm] (e) to node[adj/left/node] (n) {$\l_fnd_tikz_adj_diagram_left$} (w);
        \draw [morphism,adj/right,offset=.15cm] (w) to node[adj/right/node] (s) {$\l_fnd_tikz_adj_diagram_right$} (e);
        \path [morphism] (s) to node[rotate=-90] {$\dashv$} (n);
    }
    \group_end:
  }

  \NewDocumentCommand\AdjDiagram{m}{
    \begin{tikzpicture}[diagram]
      \__fnd_tikz_render_adj_diagram:n {#1}
    \end{tikzpicture}
  }
  
  \ExplSyntaxOff
  %
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 
    </fr:embedded-tex-preamble><fr:embedded-tex-body>
   \AdjDiagram {
    w =  
   \mathcal { E } 
 ,
    e =  
   \mathcal { F } 
 ,
    left =  f ^{{*}} ,
    right =  f _{{*}} ,
  }
</fr:embedded-tex-body></fr:embedded-tex>
  
<fr:p>such that <fr:tex>f ^{{*}}</fr:tex> is left exact. The functors <fr:tex>f _{{*}}</fr:tex> and <fr:tex>f ^{{*}}</fr:tex> are called the <fr:em><fr:strong>direct image</fr:strong></fr:em> and the <fr:em><fr:strong>inverse image</fr:strong></fr:em> respectively.</fr:p></fr:mainmatter></fr:tree><fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="false"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"><fr:frontmatter><fr:anchor>504</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>topo-0004</fr:addr><fr:route>topo-0004.xml</fr:route><fr:title>Geometric transformation</fr:title><fr:date><fr:year>2024</fr:year><fr:month>5</fr:month><fr:day>27</fr:day></fr:date><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Let <fr:tex>{ f,g } \colon {     \mathcal { E }   } \to {     \mathcal { F }   }</fr:tex> be a pair of <fr:link
href="topo-0003.xml"
type="local"
addr="topo-0003">geometric morphisms</fr:link>. A <fr:em><fr:strong>geometric transformation</fr:strong></fr:em> <fr:tex>{ \alpha } \colon { f } \to { g }</fr:tex> is a natural transformation <fr:tex>{ \alpha } \colon { f _{{*}} } \to { g _{{*}} }</fr:tex>.</fr:p></fr:mainmatter></fr:tree><fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="false"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"><fr:frontmatter><fr:anchor>506</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>topo-0002</fr:addr><fr:route>topo-0002.xml</fr:route><fr:title>Logical functor</fr:title><fr:date><fr:year>2024</fr:year><fr:month>5</fr:month><fr:day>27</fr:day></fr:date><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Let <fr:tex>    \mathcal { E }  </fr:tex> and <fr:tex>    \mathcal { F }  </fr:tex> be <fr:link
href="topo-0001.xml"
type="local"
addr="topo-0001">topoi</fr:link>. A <fr:em><fr:strong>logical functor</fr:strong></fr:em> <fr:tex>{ F } \colon {     \mathcal { E }   } \to {     \mathcal { F }   }</fr:tex> is a functor preserving finite limits, exponentials, and the subobject classifier.</fr:p></fr:mainmatter></fr:tree><fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="false"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"><fr:frontmatter><fr:anchor>512</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>mnc-0001</fr:addr><fr:route>mnc-0001.xml</fr:route><fr:title>Monoidal category</fr:title><fr:date><fr:year>2024</fr:year><fr:month>5</fr:month><fr:day>27</fr:day></fr:date><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>A <fr:em><fr:strong>monoidal category</fr:strong></fr:em> consists of the following data.</fr:p><fr:ul><fr:li>An underlying category 
  <fr:tex>\mathcal { C }</fr:tex>
.</fr:li>
  <fr:li>A functor <fr:tex>{ \otimes } \colon {     \mathcal { C }     \times       \mathcal { C }   } \to {     \mathcal { C }   }</fr:tex> called the <fr:em><fr:strong>monoidal product</fr:strong></fr:em>.</fr:li>
  <fr:li>An object <fr:tex>1   \in       \mathcal { C }  </fr:tex> called the <fr:em><fr:strong>monoidal unit</fr:strong></fr:em>.</fr:li>
  <fr:li>A natural isomorphism <fr:tex>{     \alpha _{{ X },{ Y },{ Z }}   } \colon { (X  \otimes  Y)  \otimes  Z } \to { X  \otimes  (Y  \otimes  Z) }</fr:tex> called the <fr:em><fr:strong>associator</fr:strong></fr:em>.</fr:li>
  <fr:li>A natural isomorphism <fr:tex>{ \lambda _{ X } } \colon { 1   \otimes  X } \to { X }</fr:tex> called the <fr:em><fr:strong>left unitor</fr:strong></fr:em>.</fr:li>
  <fr:li>A natural isomorphism <fr:tex>{ \rho _{ X } } \colon { X  \otimes   1 } \to { X }</fr:tex> called the <fr:em><fr:strong>right unitor</fr:strong></fr:em>.</fr:li></fr:ul><fr:p>These data are subject to the following axioms.</fr:p><fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="true"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"><fr:frontmatter><fr:anchor>508</fr:anchor><fr:taxon>Axiom</fr:taxon><fr:addr>mnc-0002</fr:addr><fr:route>mnc-0002.xml</fr:route><fr:title>Unity axiom</fr:title><fr:date><fr:year>2024</fr:year><fr:month>5</fr:month><fr:day>27</fr:day></fr:date><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>The following diagram commutes.</fr:p>
  
    
    <fr:embedded-tex
hash="df147f6f6ca084d491264e3b4e0b6b79"><fr:embedded-tex-preamble>
       
   \RequirePackage {tikz}
   \RequirePackage {amsmath}
   \usetikzlibrary {backgrounds, intersections, calc, spath3, fit}

   \definecolor {catccolor}{RGB}{255,244,138}
   \tikzstyle {dot}=[circle, draw=black, fill=black, minimum size=1mm, inner sep=0mm]
   \tikzstyle {catc}=[catccolor!60]
   \tikzstyle {catd}=[orange!40]
   \tikzstyle {cate}=[red!40]
   \tikzstyle {catf}=[blue!10]
   \tikzstyle {catg}=[green!25]


   \tikzstyle {blue halo}=[fill=blue!10, opacity=0.7, rounded corners]
   \tikzstyle {white halo}=[fill=white, opacity=0.7, rounded corners]

   \NewDocumentCommand \CreateRect {D&lt;&gt;{} m m}{
     \path 
      coordinate (#1nw)
      ++(#2,-#3) coordinate (#1se)
      coordinate (#1sw) at (#1se -| #1nw)
      coordinate (#1ne) at (#1nw -| #1se)
    ;

     \path [spath/save = #1north] (#1nw) to (#1ne);
     \path [spath/save = #1west] (#1nw) to (#1sw);
     \path [spath/save = #1east] (#1ne) to (#1se);
     \path [spath/save = #1south] (#1sw) to (#1se);
  }
 
       
    \usepackage{tikz, tikz-cd, mathtools, amssymb, stmaryrd, quiver}
  \usetikzlibrary{matrix,arrows}
  \usetikzlibrary{backgrounds,fit,positioning,calc,shapes}
  \usetikzlibrary{decorations.pathreplacing}
  \usetikzlibrary{decorations.pathmorphing}
  \usetikzlibrary{decorations.markings}

  % basic settings
  \tikzset{
    diagram/.style = {
      on grid,
      node distance=2cm,
      commutative diagrams/every diagram,
      line width = .5pt,
      every node/.append style = {
        commutative diagrams/every cell,
      },
    },
    morphism/.style = {
      auto=left,
      font=\scriptsize,
    },
    desc/.style = {anchor=center,fill=white,inner sep=3pt},
    % /tikz/pos=&lt;fraction&gt; is a key already
    offset/.style args = {#1} {commutative diagrams/shift right={#1}},
  }

  % pullback and pushout
  \tikzset{
    pullback/.style = {
      append after command = {
        \pgfextra{
          \draw ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
        }
      }
    },
    pushout/.style = {
      append after command={
        \pgfextra{
          \draw ($(\tikzlastnode) + (-.2cm,.5cm)$) -- ++(-0.3cm,0) -- ++(0,-0.3cm);
        }
      }
    },
  }

  % arrow styles
  \tikzset{
    fibration/.style = {
      -{Triangle[open]}
    },
    etale/.style = {
      -{Triangle[open]}
    },
    etale cover/.style= {
      &gt;={Triangle[open]},-&gt;.&gt;
    },
    opfibration/.style = {
      -{Triangle}
    },
    lies over/.style = {
      |-{Triangle[open]}
    },
    op lies over/.style = {
      |-{Triangle}
    },
    embedding/.style = {
      {right hook}-&gt;
    },
    open immersion/.style = {
      {right hook}-{Triangle[open]}
    },
    closed immersion/.style = {
      {right hook}-{Triangle}
    },
    closed immersion*/.style = {
      {left hook}-{Triangle}
    },
    embedding*/.style = {
      {left hook}-&gt;
    },
    open immersion*/.style = {
      {left hook}-{Triangle[open]}
    },
    exists/.style = {
      densely dashed
    },
    equal/.style = {
      double
    },
  }

  \newlength{\dontworryaboutit}

  \tikzset{
    inline diagram/.style = {
      commutative diagrams/every diagram,
      commutative diagrams/cramped,
      line width = .5pt,
      every node/.append style = {
        commutative diagrams/every cell,
        anchor = base,
        inner sep = 0pt
      },
      every path/.append style = {
        outer xsep = 2pt
      }
    }
  }
  
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  % Primitives for drawing commutative squares
  \tikzset{
    square/nw/.style = {},
    square/ne/.style = {},
    square/se/.style = {},
    square/sw/.style = {},
    square/north/.style = {-&gt;},
    square/south/.style = {-&gt;},
    square/west/.style = {-&gt;},
    square/east/.style = {-&gt;},
    square/north/node/.style = {above},
    square/south/node/.style = {below},
    square/west/node/.style = {left},
    square/east/node/.style = {right},
  }

  \ExplSyntaxOn

  \bool_new:N \l_jon_glue_west

  \keys_define:nn { jon-tikz/diagram } {
    nw .tl_set:N = \l_jon_tikz_diagram_nw,
    sw .tl_set:N = \l_jon_tikz_diagram_sw,
    ne .tl_set:N = \l_jon_tikz_diagram_ne,
    se .tl_set:N = \l_jon_tikz_diagram_se,

    width .tl_set:N = \l_jon_tikz_diagram_width,
    height .tl_set:N = \l_jon_tikz_diagram_height,

    north .tl_set:N = \l_jon_tikz_diagram_north,
    south .tl_set:N = \l_jon_tikz_diagram_south,
    west .tl_set:N = \l_jon_tikz_diagram_west,
    east .tl_set:N = \l_jon_tikz_diagram_east,

    nw/style .code:n = {\tikzset{square/nw/.style = {#1}}},
    sw/style .code:n = {\tikzset{square/sw/.style = {#1}}},
    ne/style .code:n = {\tikzset{square/ne/.style = {#1}}},
    se/style .code:n = {\tikzset{square/se/.style = {#1}}},

    glue .choice:,
    glue / west .code:n = {\bool_set:Nn \l_jon_glue_west \c_true_bool},

    glue~target .tl_set:N = \l_jon_tikz_glue_target,

    north/style .code:n = {\tikzset{square/north/.style = {#1}}},
    north/node/style .code:n = {\tikzset{square/north/node/.style = {#1}}},
    south/style .code:n = {\tikzset{square/south/.style = {#1}}},
    south/node/style .code:n = {\tikzset{square/south/node/.style = {#1}}},
    west/style .code:n = {\tikzset{square/west/.style = {#1}}},
    west/node/style .code:n = {\tikzset{square/west/node/.style = {#1}}},
    east/style .code:n = {\tikzset{square/east/.style = {#1}}},
    east/node/style .code:n = {\tikzset{square/east/node/.style = {#1}}},

    draft .meta:n = {
      nw = {\__jon_tikz_diagram_fmt_placeholder:n {nw}},
      sw = {\__jon_tikz_diagram_fmt_placeholder:n {sw}},
      se = {\__jon_tikz_diagram_fmt_placeholder:n {se}},
      ne = {\__jon_tikz_diagram_fmt_placeholder:n {ne}},
      north = {\__jon_tikz_diagram_fmt_placeholder:n {north}},
      south = {\__jon_tikz_diagram_fmt_placeholder:n {south}},
      west = {\__jon_tikz_diagram_fmt_placeholder:n {west}},
      east = {\__jon_tikz_diagram_fmt_placeholder:n {east}},
    }
  }

  \tl_set:Nn \l_jon_tikz_diagram_width { 2cm }
  \tl_set:Nn \l_jon_tikz_diagram_height { 2cm }


  \cs_new:Npn \__jon_tikz_diagram_fmt_placeholder:n #1 {
    \texttt{\textcolor{red}{#1}}
  }

  \keys_set:nn { jon-tikz/diagram } {
    glue~target = {},
  }


  \cs_new:Nn \__jon_tikz_render_square:nn {
    \group_begin:
    \keys_set:nn {jon-tikz/diagram} {#2}
    \bool_if:nTF \l_jon_glue_west {
      \node (#1ne) [right = \l_jon_tikz_diagram_width~of~\l_jon_tikz_glue_target ne,square/ne] {$\l_jon_tikz_diagram_ne$};
      \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
      \draw[morphism,square/north] (\l_jon_tikz_glue_target ne) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
      \draw[morphism,square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
      \draw[morphism,square/south] (\l_jon_tikz_glue_target se) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
    } {
      \node (#1nw) [square/nw] {$\l_jon_tikz_diagram_nw$};
      \node (#1sw) [below = \l_jon_tikz_diagram_height~of~#1nw,square/sw] {$\l_jon_tikz_diagram_sw$};
      \draw[morphism,square/west] (#1nw) to node [square/west/node] {$\l_jon_tikz_diagram_west$} (#1sw);

      \node (#1ne) [right = \l_jon_tikz_diagram_width~of~#1nw,square/ne] {$\l_jon_tikz_diagram_ne$};
      \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
      \draw[morphism,square/north] (#1nw) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
      \draw[morphism,square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
      \draw[morphism,square/south] (#1sw) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
    }
    \group_end:
  }

  \NewDocumentCommand\SpliceDiagramSquare{D&lt;&gt;{}m}{
    \__jon_tikz_render_square:nn {#1} {#2}
  }


  \NewDocumentCommand\DiagramSquare{D&lt;&gt;{}O{}m}{
    \begin{tikzpicture}[diagram,#2,baseline=(#1sw.base)]
      \__jon_tikz_render_square:nn {#1} {#3}
    \end{tikzpicture}
  }

  \ExplSyntaxOff
  %
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  % Primitives for drawing adjunction diagrams
  \tikzset{
    adj/w/.style = {},
    adj/e/.style = {},
    adj/left/.style = {-&gt;},
    adj/right/.style = {-&gt;},
    adj/left/node/.style = {above},
    adj/right/node/.style = {below},
  }

  \ExplSyntaxOn

  \bool_new:N \l_fnd_glue_west

  \keys_define:nn { fnd-tikz/adj-diagram } {
    w .tl_set:N = \l_fnd_tikz_adj_diagram_w,
    e .tl_set:N = \l_fnd_tikz_adj_diagram_e,

    width .tl_set:N = \l_fnd_tikz_adj_diagram_width,

    left .tl_set:N = \l_fnd_tikz_adj_diagram_left,
    right .tl_set:N = \l_fnd_tikz_adj_diagram_right,

    glue .choice:,
    glue / west .code:n = {\bool_set:Nn \l_fnd_glue_west \c_true_bool},
    glue~target .tl_set:N = \l_fnd_tikz_glue_target,

    w/style .code:n = {\tikzset{adj/w/.style = {#1}}},
    e/style .code:n = {\tikzset{adj/e/.style = {#1}}},

    left/style .code:n = {\tikzset{adj/left/.style = {#1}}},
    left/node/style .code:n = {\tikzset{adj/left/node/.style = {#1}}},
    right/style .code:n = {\tikzset{adj/right/.style = {#1}}},
    right/node/style .code:n = {\tikzset{adj/right/node/.style = {#1}}},

    draft .meta:n = {
      e = {\__fnd_tikz_adj_diagram_fmt_placeholder:n {e}},
      w = {\__fnd_tikz_adj_diagram_fmt_placeholder:n {w}},
      left = {\__fnd_tikz_adj_diagram_fmt_placeholder:n {left}},
      right = {\__fnd_tikz_adj_diagram_fmt_placeholder:n {right}},
    }
  }

  \tl_set:Nn \l_fnd_tikz_adj_diagram_width { 2cm }

  \cs_new:Npn \__fnd_tikz_adj_diagram_fmt_placeholder:n #1 {
    \texttt{\textcolor{red}{#1}}
  }

  \keys_set:nn { fnd-tikz/adj-diagram } {
    glue~target = {},
  }

  \cs_new:Nn \__fnd_tikz_render_adj_diagram:n {
    \group_begin:
    \keys_set:nn {fnd-tikz/adj-diagram} {#1} {
      % gluing will be implemented when I need it
      \node (w) [adj/w] {$\l_fnd_tikz_adj_diagram_w$};
      \node (e) [right=\l_fnd_tikz_adj_diagram_width~of~w,adj/e] {$\l_fnd_tikz_adj_diagram_e$};
        \draw [morphism,adj/left,offset=.15cm] (e) to node[adj/left/node] (n) {$\l_fnd_tikz_adj_diagram_left$} (w);
        \draw [morphism,adj/right,offset=.15cm] (w) to node[adj/right/node] (s) {$\l_fnd_tikz_adj_diagram_right$} (e);
        \path [morphism] (s) to node[rotate=-90] {$\dashv$} (n);
    }
    \group_end:
  }

  \NewDocumentCommand\AdjDiagram{m}{
    \begin{tikzpicture}[diagram]
      \__fnd_tikz_render_adj_diagram:n {#1}
    \end{tikzpicture}
  }
  
  \ExplSyntaxOff
  %
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 
    </fr:embedded-tex-preamble><fr:embedded-tex-body>
   \DiagramSquare {
    nw = (X  \otimes   1 )  \otimes  Y,
    sw = X  \otimes  Y,
    se = X  \otimes  Y,
    ne = X  \otimes  ( 1   \otimes  Y),
    east = X  \otimes   \lambda _{ Y } ,
    west =  \rho _{ X }   \otimes  Y,
    north =  
   \alpha _{{ X },{ 1 },{ Y }} 
 ,
    south/style = {equal},
    height = 1.5cm,
    width = 3.5cm,
  }
</fr:embedded-tex-body></fr:embedded-tex>
  
<fr:p>Moreover the equality <fr:tex>{ \lambda _{ 1 }  =  \rho _{ 1 } } \colon { 1   \otimes   1 } \to { 1 }</fr:tex> holds.</fr:p></fr:mainmatter></fr:tree><fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="true"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"><fr:frontmatter><fr:anchor>510</fr:anchor><fr:taxon>Axiom</fr:taxon><fr:addr>mnc-0003</fr:addr><fr:route>mnc-0003.xml</fr:route><fr:title>Pentagon axiom</fr:title><fr:date><fr:year>2024</fr:year><fr:month>5</fr:month><fr:day>27</fr:day></fr:date><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>The following diagram commutes.</fr:p>
  
    
    <fr:embedded-tex
hash="0f247d766152ad9bad451f49752fcbd9"><fr:embedded-tex-preamble>
       
   \RequirePackage {tikz}
   \RequirePackage {amsmath}
   \usetikzlibrary {backgrounds, intersections, calc, spath3, fit}

   \definecolor {catccolor}{RGB}{255,244,138}
   \tikzstyle {dot}=[circle, draw=black, fill=black, minimum size=1mm, inner sep=0mm]
   \tikzstyle {catc}=[catccolor!60]
   \tikzstyle {catd}=[orange!40]
   \tikzstyle {cate}=[red!40]
   \tikzstyle {catf}=[blue!10]
   \tikzstyle {catg}=[green!25]


   \tikzstyle {blue halo}=[fill=blue!10, opacity=0.7, rounded corners]
   \tikzstyle {white halo}=[fill=white, opacity=0.7, rounded corners]

   \NewDocumentCommand \CreateRect {D&lt;&gt;{} m m}{
     \path 
      coordinate (#1nw)
      ++(#2,-#3) coordinate (#1se)
      coordinate (#1sw) at (#1se -| #1nw)
      coordinate (#1ne) at (#1nw -| #1se)
    ;

     \path [spath/save = #1north] (#1nw) to (#1ne);
     \path [spath/save = #1west] (#1nw) to (#1sw);
     \path [spath/save = #1east] (#1ne) to (#1se);
     \path [spath/save = #1south] (#1sw) to (#1se);
  }
 
       
    \usepackage{tikz, tikz-cd, mathtools, amssymb, stmaryrd, quiver}
  \usetikzlibrary{matrix,arrows}
  \usetikzlibrary{backgrounds,fit,positioning,calc,shapes}
  \usetikzlibrary{decorations.pathreplacing}
  \usetikzlibrary{decorations.pathmorphing}
  \usetikzlibrary{decorations.markings}

  % basic settings
  \tikzset{
    diagram/.style = {
      on grid,
      node distance=2cm,
      commutative diagrams/every diagram,
      line width = .5pt,
      every node/.append style = {
        commutative diagrams/every cell,
      },
    },
    morphism/.style = {
      auto=left,
      font=\scriptsize,
    },
    desc/.style = {anchor=center,fill=white,inner sep=3pt},
    % /tikz/pos=&lt;fraction&gt; is a key already
    offset/.style args = {#1} {commutative diagrams/shift right={#1}},
  }

  % pullback and pushout
  \tikzset{
    pullback/.style = {
      append after command = {
        \pgfextra{
          \draw ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
        }
      }
    },
    pushout/.style = {
      append after command={
        \pgfextra{
          \draw ($(\tikzlastnode) + (-.2cm,.5cm)$) -- ++(-0.3cm,0) -- ++(0,-0.3cm);
        }
      }
    },
  }

  % arrow styles
  \tikzset{
    fibration/.style = {
      -{Triangle[open]}
    },
    etale/.style = {
      -{Triangle[open]}
    },
    etale cover/.style= {
      &gt;={Triangle[open]},-&gt;.&gt;
    },
    opfibration/.style = {
      -{Triangle}
    },
    lies over/.style = {
      |-{Triangle[open]}
    },
    op lies over/.style = {
      |-{Triangle}
    },
    embedding/.style = {
      {right hook}-&gt;
    },
    open immersion/.style = {
      {right hook}-{Triangle[open]}
    },
    closed immersion/.style = {
      {right hook}-{Triangle}
    },
    closed immersion*/.style = {
      {left hook}-{Triangle}
    },
    embedding*/.style = {
      {left hook}-&gt;
    },
    open immersion*/.style = {
      {left hook}-{Triangle[open]}
    },
    exists/.style = {
      densely dashed
    },
    equal/.style = {
      double
    },
  }

  \newlength{\dontworryaboutit}

  \tikzset{
    inline diagram/.style = {
      commutative diagrams/every diagram,
      commutative diagrams/cramped,
      line width = .5pt,
      every node/.append style = {
        commutative diagrams/every cell,
        anchor = base,
        inner sep = 0pt
      },
      every path/.append style = {
        outer xsep = 2pt
      }
    }
  }
  
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  % Primitives for drawing commutative squares
  \tikzset{
    square/nw/.style = {},
    square/ne/.style = {},
    square/se/.style = {},
    square/sw/.style = {},
    square/north/.style = {-&gt;},
    square/south/.style = {-&gt;},
    square/west/.style = {-&gt;},
    square/east/.style = {-&gt;},
    square/north/node/.style = {above},
    square/south/node/.style = {below},
    square/west/node/.style = {left},
    square/east/node/.style = {right},
  }

  \ExplSyntaxOn

  \bool_new:N \l_jon_glue_west

  \keys_define:nn { jon-tikz/diagram } {
    nw .tl_set:N = \l_jon_tikz_diagram_nw,
    sw .tl_set:N = \l_jon_tikz_diagram_sw,
    ne .tl_set:N = \l_jon_tikz_diagram_ne,
    se .tl_set:N = \l_jon_tikz_diagram_se,

    width .tl_set:N = \l_jon_tikz_diagram_width,
    height .tl_set:N = \l_jon_tikz_diagram_height,

    north .tl_set:N = \l_jon_tikz_diagram_north,
    south .tl_set:N = \l_jon_tikz_diagram_south,
    west .tl_set:N = \l_jon_tikz_diagram_west,
    east .tl_set:N = \l_jon_tikz_diagram_east,

    nw/style .code:n = {\tikzset{square/nw/.style = {#1}}},
    sw/style .code:n = {\tikzset{square/sw/.style = {#1}}},
    ne/style .code:n = {\tikzset{square/ne/.style = {#1}}},
    se/style .code:n = {\tikzset{square/se/.style = {#1}}},

    glue .choice:,
    glue / west .code:n = {\bool_set:Nn \l_jon_glue_west \c_true_bool},

    glue~target .tl_set:N = \l_jon_tikz_glue_target,

    north/style .code:n = {\tikzset{square/north/.style = {#1}}},
    north/node/style .code:n = {\tikzset{square/north/node/.style = {#1}}},
    south/style .code:n = {\tikzset{square/south/.style = {#1}}},
    south/node/style .code:n = {\tikzset{square/south/node/.style = {#1}}},
    west/style .code:n = {\tikzset{square/west/.style = {#1}}},
    west/node/style .code:n = {\tikzset{square/west/node/.style = {#1}}},
    east/style .code:n = {\tikzset{square/east/.style = {#1}}},
    east/node/style .code:n = {\tikzset{square/east/node/.style = {#1}}},

    draft .meta:n = {
      nw = {\__jon_tikz_diagram_fmt_placeholder:n {nw}},
      sw = {\__jon_tikz_diagram_fmt_placeholder:n {sw}},
      se = {\__jon_tikz_diagram_fmt_placeholder:n {se}},
      ne = {\__jon_tikz_diagram_fmt_placeholder:n {ne}},
      north = {\__jon_tikz_diagram_fmt_placeholder:n {north}},
      south = {\__jon_tikz_diagram_fmt_placeholder:n {south}},
      west = {\__jon_tikz_diagram_fmt_placeholder:n {west}},
      east = {\__jon_tikz_diagram_fmt_placeholder:n {east}},
    }
  }

  \tl_set:Nn \l_jon_tikz_diagram_width { 2cm }
  \tl_set:Nn \l_jon_tikz_diagram_height { 2cm }


  \cs_new:Npn \__jon_tikz_diagram_fmt_placeholder:n #1 {
    \texttt{\textcolor{red}{#1}}
  }

  \keys_set:nn { jon-tikz/diagram } {
    glue~target = {},
  }


  \cs_new:Nn \__jon_tikz_render_square:nn {
    \group_begin:
    \keys_set:nn {jon-tikz/diagram} {#2}
    \bool_if:nTF \l_jon_glue_west {
      \node (#1ne) [right = \l_jon_tikz_diagram_width~of~\l_jon_tikz_glue_target ne,square/ne] {$\l_jon_tikz_diagram_ne$};
      \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
      \draw[morphism,square/north] (\l_jon_tikz_glue_target ne) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
      \draw[morphism,square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
      \draw[morphism,square/south] (\l_jon_tikz_glue_target se) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
    } {
      \node (#1nw) [square/nw] {$\l_jon_tikz_diagram_nw$};
      \node (#1sw) [below = \l_jon_tikz_diagram_height~of~#1nw,square/sw] {$\l_jon_tikz_diagram_sw$};
      \draw[morphism,square/west] (#1nw) to node [square/west/node] {$\l_jon_tikz_diagram_west$} (#1sw);

      \node (#1ne) [right = \l_jon_tikz_diagram_width~of~#1nw,square/ne] {$\l_jon_tikz_diagram_ne$};
      \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
      \draw[morphism,square/north] (#1nw) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
      \draw[morphism,square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
      \draw[morphism,square/south] (#1sw) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
    }
    \group_end:
  }

  \NewDocumentCommand\SpliceDiagramSquare{D&lt;&gt;{}m}{
    \__jon_tikz_render_square:nn {#1} {#2}
  }


  \NewDocumentCommand\DiagramSquare{D&lt;&gt;{}O{}m}{
    \begin{tikzpicture}[diagram,#2,baseline=(#1sw.base)]
      \__jon_tikz_render_square:nn {#1} {#3}
    \end{tikzpicture}
  }

  \ExplSyntaxOff
  %
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  % Primitives for drawing adjunction diagrams
  \tikzset{
    adj/w/.style = {},
    adj/e/.style = {},
    adj/left/.style = {-&gt;},
    adj/right/.style = {-&gt;},
    adj/left/node/.style = {above},
    adj/right/node/.style = {below},
  }

  \ExplSyntaxOn

  \bool_new:N \l_fnd_glue_west

  \keys_define:nn { fnd-tikz/adj-diagram } {
    w .tl_set:N = \l_fnd_tikz_adj_diagram_w,
    e .tl_set:N = \l_fnd_tikz_adj_diagram_e,

    width .tl_set:N = \l_fnd_tikz_adj_diagram_width,

    left .tl_set:N = \l_fnd_tikz_adj_diagram_left,
    right .tl_set:N = \l_fnd_tikz_adj_diagram_right,

    glue .choice:,
    glue / west .code:n = {\bool_set:Nn \l_fnd_glue_west \c_true_bool},
    glue~target .tl_set:N = \l_fnd_tikz_glue_target,

    w/style .code:n = {\tikzset{adj/w/.style = {#1}}},
    e/style .code:n = {\tikzset{adj/e/.style = {#1}}},

    left/style .code:n = {\tikzset{adj/left/.style = {#1}}},
    left/node/style .code:n = {\tikzset{adj/left/node/.style = {#1}}},
    right/style .code:n = {\tikzset{adj/right/.style = {#1}}},
    right/node/style .code:n = {\tikzset{adj/right/node/.style = {#1}}},

    draft .meta:n = {
      e = {\__fnd_tikz_adj_diagram_fmt_placeholder:n {e}},
      w = {\__fnd_tikz_adj_diagram_fmt_placeholder:n {w}},
      left = {\__fnd_tikz_adj_diagram_fmt_placeholder:n {left}},
      right = {\__fnd_tikz_adj_diagram_fmt_placeholder:n {right}},
    }
  }

  \tl_set:Nn \l_fnd_tikz_adj_diagram_width { 2cm }

  \cs_new:Npn \__fnd_tikz_adj_diagram_fmt_placeholder:n #1 {
    \texttt{\textcolor{red}{#1}}
  }

  \keys_set:nn { fnd-tikz/adj-diagram } {
    glue~target = {},
  }

  \cs_new:Nn \__fnd_tikz_render_adj_diagram:n {
    \group_begin:
    \keys_set:nn {fnd-tikz/adj-diagram} {#1} {
      % gluing will be implemented when I need it
      \node (w) [adj/w] {$\l_fnd_tikz_adj_diagram_w$};
      \node (e) [right=\l_fnd_tikz_adj_diagram_width~of~w,adj/e] {$\l_fnd_tikz_adj_diagram_e$};
        \draw [morphism,adj/left,offset=.15cm] (e) to node[adj/left/node] (n) {$\l_fnd_tikz_adj_diagram_left$} (w);
        \draw [morphism,adj/right,offset=.15cm] (w) to node[adj/right/node] (s) {$\l_fnd_tikz_adj_diagram_right$} (e);
        \path [morphism] (s) to node[rotate=-90] {$\dashv$} (n);
    }
    \group_end:
  }

  \NewDocumentCommand\AdjDiagram{m}{
    \begin{tikzpicture}[diagram]
      \__fnd_tikz_render_adj_diagram:n {#1}
    \end{tikzpicture}
  }
  
  \ExplSyntaxOff
  %
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 
    </fr:embedded-tex-preamble><fr:embedded-tex-body>
   \begin {tikzpicture}[diagram]
     \node  (1) at (90:3cm) {$(W  \otimes  X)  \otimes  (Y  \otimes  Z)$};
     \node  (2) at (90+72:4cm) {$((W  \otimes  X)  \otimes  Y)  \otimes  Z$};
     \node  (3) at (90+2*72-30:1.5cm) { \makebox [3ex][r]{$(W  \otimes  (X  \otimes  Y))  \otimes  Z$}};
     \node  (4) at (90+3*72+30:1.5cm) { \makebox [3ex][l]{$W  \otimes  ((X  \otimes  Y)  \otimes  Z)$}};
     \node  (5) at (90+4*72:4cm) {$W  \otimes  (X  \otimes  (Y  \otimes  Z))$};
     \draw  [-&gt;,morphism] (2) to node {$ 
   \alpha _{{ W  \otimes  X },{ Y },{ Z }} 
 $} (1);
     \draw  [-&gt;,morphism] (1) to node {$ 
   \alpha _{{ W },{ X },{ Y  \otimes  Z }} 
 $} (5);
     \draw  [-&gt;,morphism] (2) to node[swap] {$ 
   \alpha _{{ W },{ X },{ Y }} 
   \otimes  Z$} (3);
     \draw  [-&gt;,morphism] (3) to node[swap] {$ 
   \alpha _{{ W },{ X  \otimes  Y },{ Z }} 
 $} (4);
     \draw  [-&gt;,morphism] (4) to node[swap] {$W  \otimes   
   \alpha _{{ X },{ Y },{ Z }} 
 $} (5);
   \end {tikzpicture}
</fr:embedded-tex-body></fr:embedded-tex>
  
</fr:mainmatter></fr:tree></fr:mainmatter></fr:tree><fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="false"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"><fr:frontmatter><fr:anchor>520</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>mnc-0005</fr:addr><fr:route>mnc-0005.xml</fr:route><fr:title>Monoidal functor</fr:title><fr:date><fr:year>2024</fr:year><fr:month>5</fr:month><fr:day>27</fr:day></fr:date><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Let 
  <fr:tex>\mathcal { C }</fr:tex>
 and 
  <fr:tex>\mathcal { D }</fr:tex>
 be <fr:link
href="mnc-0001.xml"
type="local"
addr="mnc-0001">monoidal categories</fr:link>. A <fr:em><fr:strong>monoidal functor</fr:strong></fr:em> <fr:tex>{ F } \colon {     \mathcal { C }   } \to {     \mathcal { D }   }</fr:tex> consists of the following data.</fr:p><fr:ul><fr:li>
    An underlying functor <fr:tex>{ F } \colon {     \mathcal { C }   } \to {     \mathcal { D }   }</fr:tex>.
  </fr:li>
  <fr:li>
    A natural transformation <fr:tex>{ \phi ^{2} _{ X , Y } } \colon { FX  \otimes  FY } \to { F(X  \otimes  Y) }</fr:tex>.
  </fr:li>
  <fr:li>
    A morphism <fr:tex>{ \phi ^{1} } \colon { 1 _{     \mathcal { D }   } } \to { F 1 _{     \mathcal { C }   } }</fr:tex>.
  </fr:li></fr:ul><fr:p>These data are subject to the following axioms.</fr:p><fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="true"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"><fr:frontmatter><fr:anchor>514</fr:anchor><fr:taxon>Axiom</fr:taxon><fr:addr>mnc-0006</fr:addr><fr:route>mnc-0006.xml</fr:route><fr:title>Associativity</fr:title><fr:date><fr:year>2024</fr:year><fr:month>5</fr:month><fr:day>27</fr:day></fr:date><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>The following diagram commutes.</fr:p>
  
    
    <fr:embedded-tex
hash="d446d432f75297eb1851e2772fef57b7"><fr:embedded-tex-preamble>
       
   \RequirePackage {tikz}
   \RequirePackage {amsmath}
   \usetikzlibrary {backgrounds, intersections, calc, spath3, fit}

   \definecolor {catccolor}{RGB}{255,244,138}
   \tikzstyle {dot}=[circle, draw=black, fill=black, minimum size=1mm, inner sep=0mm]
   \tikzstyle {catc}=[catccolor!60]
   \tikzstyle {catd}=[orange!40]
   \tikzstyle {cate}=[red!40]
   \tikzstyle {catf}=[blue!10]
   \tikzstyle {catg}=[green!25]


   \tikzstyle {blue halo}=[fill=blue!10, opacity=0.7, rounded corners]
   \tikzstyle {white halo}=[fill=white, opacity=0.7, rounded corners]

   \NewDocumentCommand \CreateRect {D&lt;&gt;{} m m}{
     \path 
      coordinate (#1nw)
      ++(#2,-#3) coordinate (#1se)
      coordinate (#1sw) at (#1se -| #1nw)
      coordinate (#1ne) at (#1nw -| #1se)
    ;

     \path [spath/save = #1north] (#1nw) to (#1ne);
     \path [spath/save = #1west] (#1nw) to (#1sw);
     \path [spath/save = #1east] (#1ne) to (#1se);
     \path [spath/save = #1south] (#1sw) to (#1se);
  }
 
       
    \usepackage{tikz, tikz-cd, mathtools, amssymb, stmaryrd, quiver}
  \usetikzlibrary{matrix,arrows}
  \usetikzlibrary{backgrounds,fit,positioning,calc,shapes}
  \usetikzlibrary{decorations.pathreplacing}
  \usetikzlibrary{decorations.pathmorphing}
  \usetikzlibrary{decorations.markings}

  % basic settings
  \tikzset{
    diagram/.style = {
      on grid,
      node distance=2cm,
      commutative diagrams/every diagram,
      line width = .5pt,
      every node/.append style = {
        commutative diagrams/every cell,
      },
    },
    morphism/.style = {
      auto=left,
      font=\scriptsize,
    },
    desc/.style = {anchor=center,fill=white,inner sep=3pt},
    % /tikz/pos=&lt;fraction&gt; is a key already
    offset/.style args = {#1} {commutative diagrams/shift right={#1}},
  }

  % pullback and pushout
  \tikzset{
    pullback/.style = {
      append after command = {
        \pgfextra{
          \draw ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
        }
      }
    },
    pushout/.style = {
      append after command={
        \pgfextra{
          \draw ($(\tikzlastnode) + (-.2cm,.5cm)$) -- ++(-0.3cm,0) -- ++(0,-0.3cm);
        }
      }
    },
  }

  % arrow styles
  \tikzset{
    fibration/.style = {
      -{Triangle[open]}
    },
    etale/.style = {
      -{Triangle[open]}
    },
    etale cover/.style= {
      &gt;={Triangle[open]},-&gt;.&gt;
    },
    opfibration/.style = {
      -{Triangle}
    },
    lies over/.style = {
      |-{Triangle[open]}
    },
    op lies over/.style = {
      |-{Triangle}
    },
    embedding/.style = {
      {right hook}-&gt;
    },
    open immersion/.style = {
      {right hook}-{Triangle[open]}
    },
    closed immersion/.style = {
      {right hook}-{Triangle}
    },
    closed immersion*/.style = {
      {left hook}-{Triangle}
    },
    embedding*/.style = {
      {left hook}-&gt;
    },
    open immersion*/.style = {
      {left hook}-{Triangle[open]}
    },
    exists/.style = {
      densely dashed
    },
    equal/.style = {
      double
    },
  }

  \newlength{\dontworryaboutit}

  \tikzset{
    inline diagram/.style = {
      commutative diagrams/every diagram,
      commutative diagrams/cramped,
      line width = .5pt,
      every node/.append style = {
        commutative diagrams/every cell,
        anchor = base,
        inner sep = 0pt
      },
      every path/.append style = {
        outer xsep = 2pt
      }
    }
  }
  
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  % Primitives for drawing commutative squares
  \tikzset{
    square/nw/.style = {},
    square/ne/.style = {},
    square/se/.style = {},
    square/sw/.style = {},
    square/north/.style = {-&gt;},
    square/south/.style = {-&gt;},
    square/west/.style = {-&gt;},
    square/east/.style = {-&gt;},
    square/north/node/.style = {above},
    square/south/node/.style = {below},
    square/west/node/.style = {left},
    square/east/node/.style = {right},
  }

  \ExplSyntaxOn

  \bool_new:N \l_jon_glue_west

  \keys_define:nn { jon-tikz/diagram } {
    nw .tl_set:N = \l_jon_tikz_diagram_nw,
    sw .tl_set:N = \l_jon_tikz_diagram_sw,
    ne .tl_set:N = \l_jon_tikz_diagram_ne,
    se .tl_set:N = \l_jon_tikz_diagram_se,

    width .tl_set:N = \l_jon_tikz_diagram_width,
    height .tl_set:N = \l_jon_tikz_diagram_height,

    north .tl_set:N = \l_jon_tikz_diagram_north,
    south .tl_set:N = \l_jon_tikz_diagram_south,
    west .tl_set:N = \l_jon_tikz_diagram_west,
    east .tl_set:N = \l_jon_tikz_diagram_east,

    nw/style .code:n = {\tikzset{square/nw/.style = {#1}}},
    sw/style .code:n = {\tikzset{square/sw/.style = {#1}}},
    ne/style .code:n = {\tikzset{square/ne/.style = {#1}}},
    se/style .code:n = {\tikzset{square/se/.style = {#1}}},

    glue .choice:,
    glue / west .code:n = {\bool_set:Nn \l_jon_glue_west \c_true_bool},

    glue~target .tl_set:N = \l_jon_tikz_glue_target,

    north/style .code:n = {\tikzset{square/north/.style = {#1}}},
    north/node/style .code:n = {\tikzset{square/north/node/.style = {#1}}},
    south/style .code:n = {\tikzset{square/south/.style = {#1}}},
    south/node/style .code:n = {\tikzset{square/south/node/.style = {#1}}},
    west/style .code:n = {\tikzset{square/west/.style = {#1}}},
    west/node/style .code:n = {\tikzset{square/west/node/.style = {#1}}},
    east/style .code:n = {\tikzset{square/east/.style = {#1}}},
    east/node/style .code:n = {\tikzset{square/east/node/.style = {#1}}},

    draft .meta:n = {
      nw = {\__jon_tikz_diagram_fmt_placeholder:n {nw}},
      sw = {\__jon_tikz_diagram_fmt_placeholder:n {sw}},
      se = {\__jon_tikz_diagram_fmt_placeholder:n {se}},
      ne = {\__jon_tikz_diagram_fmt_placeholder:n {ne}},
      north = {\__jon_tikz_diagram_fmt_placeholder:n {north}},
      south = {\__jon_tikz_diagram_fmt_placeholder:n {south}},
      west = {\__jon_tikz_diagram_fmt_placeholder:n {west}},
      east = {\__jon_tikz_diagram_fmt_placeholder:n {east}},
    }
  }

  \tl_set:Nn \l_jon_tikz_diagram_width { 2cm }
  \tl_set:Nn \l_jon_tikz_diagram_height { 2cm }


  \cs_new:Npn \__jon_tikz_diagram_fmt_placeholder:n #1 {
    \texttt{\textcolor{red}{#1}}
  }

  \keys_set:nn { jon-tikz/diagram } {
    glue~target = {},
  }


  \cs_new:Nn \__jon_tikz_render_square:nn {
    \group_begin:
    \keys_set:nn {jon-tikz/diagram} {#2}
    \bool_if:nTF \l_jon_glue_west {
      \node (#1ne) [right = \l_jon_tikz_diagram_width~of~\l_jon_tikz_glue_target ne,square/ne] {$\l_jon_tikz_diagram_ne$};
      \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
      \draw[morphism,square/north] (\l_jon_tikz_glue_target ne) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
      \draw[morphism,square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
      \draw[morphism,square/south] (\l_jon_tikz_glue_target se) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
    } {
      \node (#1nw) [square/nw] {$\l_jon_tikz_diagram_nw$};
      \node (#1sw) [below = \l_jon_tikz_diagram_height~of~#1nw,square/sw] {$\l_jon_tikz_diagram_sw$};
      \draw[morphism,square/west] (#1nw) to node [square/west/node] {$\l_jon_tikz_diagram_west$} (#1sw);

      \node (#1ne) [right = \l_jon_tikz_diagram_width~of~#1nw,square/ne] {$\l_jon_tikz_diagram_ne$};
      \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
      \draw[morphism,square/north] (#1nw) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
      \draw[morphism,square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
      \draw[morphism,square/south] (#1sw) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
    }
    \group_end:
  }

  \NewDocumentCommand\SpliceDiagramSquare{D&lt;&gt;{}m}{
    \__jon_tikz_render_square:nn {#1} {#2}
  }


  \NewDocumentCommand\DiagramSquare{D&lt;&gt;{}O{}m}{
    \begin{tikzpicture}[diagram,#2,baseline=(#1sw.base)]
      \__jon_tikz_render_square:nn {#1} {#3}
    \end{tikzpicture}
  }

  \ExplSyntaxOff
  %
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  % Primitives for drawing adjunction diagrams
  \tikzset{
    adj/w/.style = {},
    adj/e/.style = {},
    adj/left/.style = {-&gt;},
    adj/right/.style = {-&gt;},
    adj/left/node/.style = {above},
    adj/right/node/.style = {below},
  }

  \ExplSyntaxOn

  \bool_new:N \l_fnd_glue_west

  \keys_define:nn { fnd-tikz/adj-diagram } {
    w .tl_set:N = \l_fnd_tikz_adj_diagram_w,
    e .tl_set:N = \l_fnd_tikz_adj_diagram_e,

    width .tl_set:N = \l_fnd_tikz_adj_diagram_width,

    left .tl_set:N = \l_fnd_tikz_adj_diagram_left,
    right .tl_set:N = \l_fnd_tikz_adj_diagram_right,

    glue .choice:,
    glue / west .code:n = {\bool_set:Nn \l_fnd_glue_west \c_true_bool},
    glue~target .tl_set:N = \l_fnd_tikz_glue_target,

    w/style .code:n = {\tikzset{adj/w/.style = {#1}}},
    e/style .code:n = {\tikzset{adj/e/.style = {#1}}},

    left/style .code:n = {\tikzset{adj/left/.style = {#1}}},
    left/node/style .code:n = {\tikzset{adj/left/node/.style = {#1}}},
    right/style .code:n = {\tikzset{adj/right/.style = {#1}}},
    right/node/style .code:n = {\tikzset{adj/right/node/.style = {#1}}},

    draft .meta:n = {
      e = {\__fnd_tikz_adj_diagram_fmt_placeholder:n {e}},
      w = {\__fnd_tikz_adj_diagram_fmt_placeholder:n {w}},
      left = {\__fnd_tikz_adj_diagram_fmt_placeholder:n {left}},
      right = {\__fnd_tikz_adj_diagram_fmt_placeholder:n {right}},
    }
  }

  \tl_set:Nn \l_fnd_tikz_adj_diagram_width { 2cm }

  \cs_new:Npn \__fnd_tikz_adj_diagram_fmt_placeholder:n #1 {
    \texttt{\textcolor{red}{#1}}
  }

  \keys_set:nn { fnd-tikz/adj-diagram } {
    glue~target = {},
  }

  \cs_new:Nn \__fnd_tikz_render_adj_diagram:n {
    \group_begin:
    \keys_set:nn {fnd-tikz/adj-diagram} {#1} {
      % gluing will be implemented when I need it
      \node (w) [adj/w] {$\l_fnd_tikz_adj_diagram_w$};
      \node (e) [right=\l_fnd_tikz_adj_diagram_width~of~w,adj/e] {$\l_fnd_tikz_adj_diagram_e$};
        \draw [morphism,adj/left,offset=.15cm] (e) to node[adj/left/node] (n) {$\l_fnd_tikz_adj_diagram_left$} (w);
        \draw [morphism,adj/right,offset=.15cm] (w) to node[adj/right/node] (s) {$\l_fnd_tikz_adj_diagram_right$} (e);
        \path [morphism] (s) to node[rotate=-90] {$\dashv$} (n);
    }
    \group_end:
  }

  \NewDocumentCommand\AdjDiagram{m}{
    \begin{tikzpicture}[diagram]
      \__fnd_tikz_render_adj_diagram:n {#1}
    \end{tikzpicture}
  }
  
  \ExplSyntaxOff
  %
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 
    </fr:embedded-tex-preamble><fr:embedded-tex-body>
   \begin {tikzpicture}[diagram, node distance=2cm and 5cm]
     \node  (l1) {$(FX  \otimes  FY)  \otimes  FZ$};
     \node  [below= of l1] (l2) {$F(X  \otimes  Y)  \otimes  FZ$};
     \node  [below= of l2] (l3) {$F((X  \otimes  Y)  \otimes  Z)$};
     \node  [right= of l1] (r1) {$FX  \otimes  (FY  \otimes  FZ)$};
     \node  [below= of r1] (r2) {$FX  \otimes  F(Y  \otimes  Z)$};
     \node  [below= of r2] (r3) {$F(X  \otimes  (Y  \otimes  Z))$};
     \draw  [-&gt;,morphism] (l1) to node [left] {$ \phi ^{2} _{ X , Y }   \otimes  FZ$} (l2);
     \draw  [-&gt;,morphism] (l2) to node [left] {$ \phi ^{2} _{ X  \otimes  Y , Z } $} (l3);
     \draw  [-&gt;,morphism] (l1) to node [above] {$ \alpha _{ 
   \mathcal { D } 
 }$} (r1);
     \draw  [-&gt;,morphism] (r1) to node [right] {$FX  \otimes   \phi ^{2} _{ Y , Z } $} (r2);
     \draw  [-&gt;,morphism] (r2) to node [right] {$ \phi ^{2} _{ X , Y  \otimes  Z } $} (r3);
     \draw  [-&gt;,morphism] (l3) to node [below] {$F \alpha _{ 
   \mathcal { C } 
 }$} (r3);
   \end {tikzpicture}
</fr:embedded-tex-body></fr:embedded-tex>
  
</fr:mainmatter></fr:tree><fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="true"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"><fr:frontmatter><fr:anchor>516</fr:anchor><fr:taxon>Axiom</fr:taxon><fr:addr>mnc-0007</fr:addr><fr:route>mnc-0007.xml</fr:route><fr:title>Left unity axiom</fr:title><fr:date><fr:year>2024</fr:year><fr:month>5</fr:month><fr:day>27</fr:day></fr:date><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>The following diagram commutes.</fr:p>
  
    
    <fr:embedded-tex
hash="c30c4749563bc736bd885e60a7adf363"><fr:embedded-tex-preamble>
       
   \RequirePackage {tikz}
   \RequirePackage {amsmath}
   \usetikzlibrary {backgrounds, intersections, calc, spath3, fit}

   \definecolor {catccolor}{RGB}{255,244,138}
   \tikzstyle {dot}=[circle, draw=black, fill=black, minimum size=1mm, inner sep=0mm]
   \tikzstyle {catc}=[catccolor!60]
   \tikzstyle {catd}=[orange!40]
   \tikzstyle {cate}=[red!40]
   \tikzstyle {catf}=[blue!10]
   \tikzstyle {catg}=[green!25]


   \tikzstyle {blue halo}=[fill=blue!10, opacity=0.7, rounded corners]
   \tikzstyle {white halo}=[fill=white, opacity=0.7, rounded corners]

   \NewDocumentCommand \CreateRect {D&lt;&gt;{} m m}{
     \path 
      coordinate (#1nw)
      ++(#2,-#3) coordinate (#1se)
      coordinate (#1sw) at (#1se -| #1nw)
      coordinate (#1ne) at (#1nw -| #1se)
    ;

     \path [spath/save = #1north] (#1nw) to (#1ne);
     \path [spath/save = #1west] (#1nw) to (#1sw);
     \path [spath/save = #1east] (#1ne) to (#1se);
     \path [spath/save = #1south] (#1sw) to (#1se);
  }
 
       
    \usepackage{tikz, tikz-cd, mathtools, amssymb, stmaryrd, quiver}
  \usetikzlibrary{matrix,arrows}
  \usetikzlibrary{backgrounds,fit,positioning,calc,shapes}
  \usetikzlibrary{decorations.pathreplacing}
  \usetikzlibrary{decorations.pathmorphing}
  \usetikzlibrary{decorations.markings}

  % basic settings
  \tikzset{
    diagram/.style = {
      on grid,
      node distance=2cm,
      commutative diagrams/every diagram,
      line width = .5pt,
      every node/.append style = {
        commutative diagrams/every cell,
      },
    },
    morphism/.style = {
      auto=left,
      font=\scriptsize,
    },
    desc/.style = {anchor=center,fill=white,inner sep=3pt},
    % /tikz/pos=&lt;fraction&gt; is a key already
    offset/.style args = {#1} {commutative diagrams/shift right={#1}},
  }

  % pullback and pushout
  \tikzset{
    pullback/.style = {
      append after command = {
        \pgfextra{
          \draw ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
        }
      }
    },
    pushout/.style = {
      append after command={
        \pgfextra{
          \draw ($(\tikzlastnode) + (-.2cm,.5cm)$) -- ++(-0.3cm,0) -- ++(0,-0.3cm);
        }
      }
    },
  }

  % arrow styles
  \tikzset{
    fibration/.style = {
      -{Triangle[open]}
    },
    etale/.style = {
      -{Triangle[open]}
    },
    etale cover/.style= {
      &gt;={Triangle[open]},-&gt;.&gt;
    },
    opfibration/.style = {
      -{Triangle}
    },
    lies over/.style = {
      |-{Triangle[open]}
    },
    op lies over/.style = {
      |-{Triangle}
    },
    embedding/.style = {
      {right hook}-&gt;
    },
    open immersion/.style = {
      {right hook}-{Triangle[open]}
    },
    closed immersion/.style = {
      {right hook}-{Triangle}
    },
    closed immersion*/.style = {
      {left hook}-{Triangle}
    },
    embedding*/.style = {
      {left hook}-&gt;
    },
    open immersion*/.style = {
      {left hook}-{Triangle[open]}
    },
    exists/.style = {
      densely dashed
    },
    equal/.style = {
      double
    },
  }

  \newlength{\dontworryaboutit}

  \tikzset{
    inline diagram/.style = {
      commutative diagrams/every diagram,
      commutative diagrams/cramped,
      line width = .5pt,
      every node/.append style = {
        commutative diagrams/every cell,
        anchor = base,
        inner sep = 0pt
      },
      every path/.append style = {
        outer xsep = 2pt
      }
    }
  }
  
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  % Primitives for drawing commutative squares
  \tikzset{
    square/nw/.style = {},
    square/ne/.style = {},
    square/se/.style = {},
    square/sw/.style = {},
    square/north/.style = {-&gt;},
    square/south/.style = {-&gt;},
    square/west/.style = {-&gt;},
    square/east/.style = {-&gt;},
    square/north/node/.style = {above},
    square/south/node/.style = {below},
    square/west/node/.style = {left},
    square/east/node/.style = {right},
  }

  \ExplSyntaxOn

  \bool_new:N \l_jon_glue_west

  \keys_define:nn { jon-tikz/diagram } {
    nw .tl_set:N = \l_jon_tikz_diagram_nw,
    sw .tl_set:N = \l_jon_tikz_diagram_sw,
    ne .tl_set:N = \l_jon_tikz_diagram_ne,
    se .tl_set:N = \l_jon_tikz_diagram_se,

    width .tl_set:N = \l_jon_tikz_diagram_width,
    height .tl_set:N = \l_jon_tikz_diagram_height,

    north .tl_set:N = \l_jon_tikz_diagram_north,
    south .tl_set:N = \l_jon_tikz_diagram_south,
    west .tl_set:N = \l_jon_tikz_diagram_west,
    east .tl_set:N = \l_jon_tikz_diagram_east,

    nw/style .code:n = {\tikzset{square/nw/.style = {#1}}},
    sw/style .code:n = {\tikzset{square/sw/.style = {#1}}},
    ne/style .code:n = {\tikzset{square/ne/.style = {#1}}},
    se/style .code:n = {\tikzset{square/se/.style = {#1}}},

    glue .choice:,
    glue / west .code:n = {\bool_set:Nn \l_jon_glue_west \c_true_bool},

    glue~target .tl_set:N = \l_jon_tikz_glue_target,

    north/style .code:n = {\tikzset{square/north/.style = {#1}}},
    north/node/style .code:n = {\tikzset{square/north/node/.style = {#1}}},
    south/style .code:n = {\tikzset{square/south/.style = {#1}}},
    south/node/style .code:n = {\tikzset{square/south/node/.style = {#1}}},
    west/style .code:n = {\tikzset{square/west/.style = {#1}}},
    west/node/style .code:n = {\tikzset{square/west/node/.style = {#1}}},
    east/style .code:n = {\tikzset{square/east/.style = {#1}}},
    east/node/style .code:n = {\tikzset{square/east/node/.style = {#1}}},

    draft .meta:n = {
      nw = {\__jon_tikz_diagram_fmt_placeholder:n {nw}},
      sw = {\__jon_tikz_diagram_fmt_placeholder:n {sw}},
      se = {\__jon_tikz_diagram_fmt_placeholder:n {se}},
      ne = {\__jon_tikz_diagram_fmt_placeholder:n {ne}},
      north = {\__jon_tikz_diagram_fmt_placeholder:n {north}},
      south = {\__jon_tikz_diagram_fmt_placeholder:n {south}},
      west = {\__jon_tikz_diagram_fmt_placeholder:n {west}},
      east = {\__jon_tikz_diagram_fmt_placeholder:n {east}},
    }
  }

  \tl_set:Nn \l_jon_tikz_diagram_width { 2cm }
  \tl_set:Nn \l_jon_tikz_diagram_height { 2cm }


  \cs_new:Npn \__jon_tikz_diagram_fmt_placeholder:n #1 {
    \texttt{\textcolor{red}{#1}}
  }

  \keys_set:nn { jon-tikz/diagram } {
    glue~target = {},
  }


  \cs_new:Nn \__jon_tikz_render_square:nn {
    \group_begin:
    \keys_set:nn {jon-tikz/diagram} {#2}
    \bool_if:nTF \l_jon_glue_west {
      \node (#1ne) [right = \l_jon_tikz_diagram_width~of~\l_jon_tikz_glue_target ne,square/ne] {$\l_jon_tikz_diagram_ne$};
      \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
      \draw[morphism,square/north] (\l_jon_tikz_glue_target ne) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
      \draw[morphism,square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
      \draw[morphism,square/south] (\l_jon_tikz_glue_target se) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
    } {
      \node (#1nw) [square/nw] {$\l_jon_tikz_diagram_nw$};
      \node (#1sw) [below = \l_jon_tikz_diagram_height~of~#1nw,square/sw] {$\l_jon_tikz_diagram_sw$};
      \draw[morphism,square/west] (#1nw) to node [square/west/node] {$\l_jon_tikz_diagram_west$} (#1sw);

      \node (#1ne) [right = \l_jon_tikz_diagram_width~of~#1nw,square/ne] {$\l_jon_tikz_diagram_ne$};
      \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
      \draw[morphism,square/north] (#1nw) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
      \draw[morphism,square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
      \draw[morphism,square/south] (#1sw) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
    }
    \group_end:
  }

  \NewDocumentCommand\SpliceDiagramSquare{D&lt;&gt;{}m}{
    \__jon_tikz_render_square:nn {#1} {#2}
  }


  \NewDocumentCommand\DiagramSquare{D&lt;&gt;{}O{}m}{
    \begin{tikzpicture}[diagram,#2,baseline=(#1sw.base)]
      \__jon_tikz_render_square:nn {#1} {#3}
    \end{tikzpicture}
  }

  \ExplSyntaxOff
  %
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  % Primitives for drawing adjunction diagrams
  \tikzset{
    adj/w/.style = {},
    adj/e/.style = {},
    adj/left/.style = {-&gt;},
    adj/right/.style = {-&gt;},
    adj/left/node/.style = {above},
    adj/right/node/.style = {below},
  }

  \ExplSyntaxOn

  \bool_new:N \l_fnd_glue_west

  \keys_define:nn { fnd-tikz/adj-diagram } {
    w .tl_set:N = \l_fnd_tikz_adj_diagram_w,
    e .tl_set:N = \l_fnd_tikz_adj_diagram_e,

    width .tl_set:N = \l_fnd_tikz_adj_diagram_width,

    left .tl_set:N = \l_fnd_tikz_adj_diagram_left,
    right .tl_set:N = \l_fnd_tikz_adj_diagram_right,

    glue .choice:,
    glue / west .code:n = {\bool_set:Nn \l_fnd_glue_west \c_true_bool},
    glue~target .tl_set:N = \l_fnd_tikz_glue_target,

    w/style .code:n = {\tikzset{adj/w/.style = {#1}}},
    e/style .code:n = {\tikzset{adj/e/.style = {#1}}},

    left/style .code:n = {\tikzset{adj/left/.style = {#1}}},
    left/node/style .code:n = {\tikzset{adj/left/node/.style = {#1}}},
    right/style .code:n = {\tikzset{adj/right/.style = {#1}}},
    right/node/style .code:n = {\tikzset{adj/right/node/.style = {#1}}},

    draft .meta:n = {
      e = {\__fnd_tikz_adj_diagram_fmt_placeholder:n {e}},
      w = {\__fnd_tikz_adj_diagram_fmt_placeholder:n {w}},
      left = {\__fnd_tikz_adj_diagram_fmt_placeholder:n {left}},
      right = {\__fnd_tikz_adj_diagram_fmt_placeholder:n {right}},
    }
  }

  \tl_set:Nn \l_fnd_tikz_adj_diagram_width { 2cm }

  \cs_new:Npn \__fnd_tikz_adj_diagram_fmt_placeholder:n #1 {
    \texttt{\textcolor{red}{#1}}
  }

  \keys_set:nn { fnd-tikz/adj-diagram } {
    glue~target = {},
  }

  \cs_new:Nn \__fnd_tikz_render_adj_diagram:n {
    \group_begin:
    \keys_set:nn {fnd-tikz/adj-diagram} {#1} {
      % gluing will be implemented when I need it
      \node (w) [adj/w] {$\l_fnd_tikz_adj_diagram_w$};
      \node (e) [right=\l_fnd_tikz_adj_diagram_width~of~w,adj/e] {$\l_fnd_tikz_adj_diagram_e$};
        \draw [morphism,adj/left,offset=.15cm] (e) to node[adj/left/node] (n) {$\l_fnd_tikz_adj_diagram_left$} (w);
        \draw [morphism,adj/right,offset=.15cm] (w) to node[adj/right/node] (s) {$\l_fnd_tikz_adj_diagram_right$} (e);
        \path [morphism] (s) to node[rotate=-90] {$\dashv$} (n);
    }
    \group_end:
  }

  \NewDocumentCommand\AdjDiagram{m}{
    \begin{tikzpicture}[diagram]
      \__fnd_tikz_render_adj_diagram:n {#1}
    \end{tikzpicture}
  }
  
  \ExplSyntaxOff
  %
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 
    </fr:embedded-tex-preamble><fr:embedded-tex-body>
   \DiagramSquare {
    nw =  1 _{ 
   \mathcal { D } 
 }  \otimes  FX,
    sw = F 1 _{ 
   \mathcal { C } 
 }  \otimes  FX,
    se = F( 1 _{ 
   \mathcal { C } 
 }  \otimes  X),
    ne = FX,
    east = F \lambda _{ 
   \mathcal { C } 
 },
    west =  \phi ^{1}   \otimes  FX,
    north =  \lambda _{ 
   \mathcal { D } 
 },
    south =  \phi ^{2} _{ 1 _{ 
   \mathcal { C } 
 } , X } ,
    height = 2cm,
    width = 3cm,
  }
</fr:embedded-tex-body></fr:embedded-tex>
  
</fr:mainmatter></fr:tree><fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="true"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"><fr:frontmatter><fr:anchor>518</fr:anchor><fr:taxon>Axiom</fr:taxon><fr:addr>mnc-0008</fr:addr><fr:route>mnc-0008.xml</fr:route><fr:title>Right unity axiom</fr:title><fr:date><fr:year>2024</fr:year><fr:month>5</fr:month><fr:day>27</fr:day></fr:date><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>The following diagram commutes.</fr:p>
  
    
    <fr:embedded-tex
hash="f8201c773fbd25c8fd8341aee7eb78a5"><fr:embedded-tex-preamble>
       
   \RequirePackage {tikz}
   \RequirePackage {amsmath}
   \usetikzlibrary {backgrounds, intersections, calc, spath3, fit}

   \definecolor {catccolor}{RGB}{255,244,138}
   \tikzstyle {dot}=[circle, draw=black, fill=black, minimum size=1mm, inner sep=0mm]
   \tikzstyle {catc}=[catccolor!60]
   \tikzstyle {catd}=[orange!40]
   \tikzstyle {cate}=[red!40]
   \tikzstyle {catf}=[blue!10]
   \tikzstyle {catg}=[green!25]


   \tikzstyle {blue halo}=[fill=blue!10, opacity=0.7, rounded corners]
   \tikzstyle {white halo}=[fill=white, opacity=0.7, rounded corners]

   \NewDocumentCommand \CreateRect {D&lt;&gt;{} m m}{
     \path 
      coordinate (#1nw)
      ++(#2,-#3) coordinate (#1se)
      coordinate (#1sw) at (#1se -| #1nw)
      coordinate (#1ne) at (#1nw -| #1se)
    ;

     \path [spath/save = #1north] (#1nw) to (#1ne);
     \path [spath/save = #1west] (#1nw) to (#1sw);
     \path [spath/save = #1east] (#1ne) to (#1se);
     \path [spath/save = #1south] (#1sw) to (#1se);
  }
 
       
    \usepackage{tikz, tikz-cd, mathtools, amssymb, stmaryrd, quiver}
  \usetikzlibrary{matrix,arrows}
  \usetikzlibrary{backgrounds,fit,positioning,calc,shapes}
  \usetikzlibrary{decorations.pathreplacing}
  \usetikzlibrary{decorations.pathmorphing}
  \usetikzlibrary{decorations.markings}

  % basic settings
  \tikzset{
    diagram/.style = {
      on grid,
      node distance=2cm,
      commutative diagrams/every diagram,
      line width = .5pt,
      every node/.append style = {
        commutative diagrams/every cell,
      },
    },
    morphism/.style = {
      auto=left,
      font=\scriptsize,
    },
    desc/.style = {anchor=center,fill=white,inner sep=3pt},
    % /tikz/pos=&lt;fraction&gt; is a key already
    offset/.style args = {#1} {commutative diagrams/shift right={#1}},
  }

  % pullback and pushout
  \tikzset{
    pullback/.style = {
      append after command = {
        \pgfextra{
          \draw ($(\tikzlastnode) + (.2cm,-.5cm)$) -- ++(0.3cm,0) -- ++(0,0.3cm);
        }
      }
    },
    pushout/.style = {
      append after command={
        \pgfextra{
          \draw ($(\tikzlastnode) + (-.2cm,.5cm)$) -- ++(-0.3cm,0) -- ++(0,-0.3cm);
        }
      }
    },
  }

  % arrow styles
  \tikzset{
    fibration/.style = {
      -{Triangle[open]}
    },
    etale/.style = {
      -{Triangle[open]}
    },
    etale cover/.style= {
      &gt;={Triangle[open]},-&gt;.&gt;
    },
    opfibration/.style = {
      -{Triangle}
    },
    lies over/.style = {
      |-{Triangle[open]}
    },
    op lies over/.style = {
      |-{Triangle}
    },
    embedding/.style = {
      {right hook}-&gt;
    },
    open immersion/.style = {
      {right hook}-{Triangle[open]}
    },
    closed immersion/.style = {
      {right hook}-{Triangle}
    },
    closed immersion*/.style = {
      {left hook}-{Triangle}
    },
    embedding*/.style = {
      {left hook}-&gt;
    },
    open immersion*/.style = {
      {left hook}-{Triangle[open]}
    },
    exists/.style = {
      densely dashed
    },
    equal/.style = {
      double
    },
  }

  \newlength{\dontworryaboutit}

  \tikzset{
    inline diagram/.style = {
      commutative diagrams/every diagram,
      commutative diagrams/cramped,
      line width = .5pt,
      every node/.append style = {
        commutative diagrams/every cell,
        anchor = base,
        inner sep = 0pt
      },
      every path/.append style = {
        outer xsep = 2pt
      }
    }
  }
  
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  % Primitives for drawing commutative squares
  \tikzset{
    square/nw/.style = {},
    square/ne/.style = {},
    square/se/.style = {},
    square/sw/.style = {},
    square/north/.style = {-&gt;},
    square/south/.style = {-&gt;},
    square/west/.style = {-&gt;},
    square/east/.style = {-&gt;},
    square/north/node/.style = {above},
    square/south/node/.style = {below},
    square/west/node/.style = {left},
    square/east/node/.style = {right},
  }

  \ExplSyntaxOn

  \bool_new:N \l_jon_glue_west

  \keys_define:nn { jon-tikz/diagram } {
    nw .tl_set:N = \l_jon_tikz_diagram_nw,
    sw .tl_set:N = \l_jon_tikz_diagram_sw,
    ne .tl_set:N = \l_jon_tikz_diagram_ne,
    se .tl_set:N = \l_jon_tikz_diagram_se,

    width .tl_set:N = \l_jon_tikz_diagram_width,
    height .tl_set:N = \l_jon_tikz_diagram_height,

    north .tl_set:N = \l_jon_tikz_diagram_north,
    south .tl_set:N = \l_jon_tikz_diagram_south,
    west .tl_set:N = \l_jon_tikz_diagram_west,
    east .tl_set:N = \l_jon_tikz_diagram_east,

    nw/style .code:n = {\tikzset{square/nw/.style = {#1}}},
    sw/style .code:n = {\tikzset{square/sw/.style = {#1}}},
    ne/style .code:n = {\tikzset{square/ne/.style = {#1}}},
    se/style .code:n = {\tikzset{square/se/.style = {#1}}},

    glue .choice:,
    glue / west .code:n = {\bool_set:Nn \l_jon_glue_west \c_true_bool},

    glue~target .tl_set:N = \l_jon_tikz_glue_target,

    north/style .code:n = {\tikzset{square/north/.style = {#1}}},
    north/node/style .code:n = {\tikzset{square/north/node/.style = {#1}}},
    south/style .code:n = {\tikzset{square/south/.style = {#1}}},
    south/node/style .code:n = {\tikzset{square/south/node/.style = {#1}}},
    west/style .code:n = {\tikzset{square/west/.style = {#1}}},
    west/node/style .code:n = {\tikzset{square/west/node/.style = {#1}}},
    east/style .code:n = {\tikzset{square/east/.style = {#1}}},
    east/node/style .code:n = {\tikzset{square/east/node/.style = {#1}}},

    draft .meta:n = {
      nw = {\__jon_tikz_diagram_fmt_placeholder:n {nw}},
      sw = {\__jon_tikz_diagram_fmt_placeholder:n {sw}},
      se = {\__jon_tikz_diagram_fmt_placeholder:n {se}},
      ne = {\__jon_tikz_diagram_fmt_placeholder:n {ne}},
      north = {\__jon_tikz_diagram_fmt_placeholder:n {north}},
      south = {\__jon_tikz_diagram_fmt_placeholder:n {south}},
      west = {\__jon_tikz_diagram_fmt_placeholder:n {west}},
      east = {\__jon_tikz_diagram_fmt_placeholder:n {east}},
    }
  }

  \tl_set:Nn \l_jon_tikz_diagram_width { 2cm }
  \tl_set:Nn \l_jon_tikz_diagram_height { 2cm }


  \cs_new:Npn \__jon_tikz_diagram_fmt_placeholder:n #1 {
    \texttt{\textcolor{red}{#1}}
  }

  \keys_set:nn { jon-tikz/diagram } {
    glue~target = {},
  }


  \cs_new:Nn \__jon_tikz_render_square:nn {
    \group_begin:
    \keys_set:nn {jon-tikz/diagram} {#2}
    \bool_if:nTF \l_jon_glue_west {
      \node (#1ne) [right = \l_jon_tikz_diagram_width~of~\l_jon_tikz_glue_target ne,square/ne] {$\l_jon_tikz_diagram_ne$};
      \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
      \draw[morphism,square/north] (\l_jon_tikz_glue_target ne) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
      \draw[morphism,square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
      \draw[morphism,square/south] (\l_jon_tikz_glue_target se) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
    } {
      \node (#1nw) [square/nw] {$\l_jon_tikz_diagram_nw$};
      \node (#1sw) [below = \l_jon_tikz_diagram_height~of~#1nw,square/sw] {$\l_jon_tikz_diagram_sw$};
      \draw[morphism,square/west] (#1nw) to node [square/west/node] {$\l_jon_tikz_diagram_west$} (#1sw);

      \node (#1ne) [right = \l_jon_tikz_diagram_width~of~#1nw,square/ne] {$\l_jon_tikz_diagram_ne$};
      \node (#1se) [below = \l_jon_tikz_diagram_height~of~#1ne,square/se] {$\l_jon_tikz_diagram_se$};
      \draw[morphism,square/north] (#1nw) to node [square/north/node] {$\l_jon_tikz_diagram_north$} (#1ne);
      \draw[morphism,square/east] (#1ne) to node [square/east/node] {$\l_jon_tikz_diagram_east$} (#1se);
      \draw[morphism,square/south] (#1sw) to node [square/south/node] {$\l_jon_tikz_diagram_south$} (#1se);
    }
    \group_end:
  }

  \NewDocumentCommand\SpliceDiagramSquare{D&lt;&gt;{}m}{
    \__jon_tikz_render_square:nn {#1} {#2}
  }


  \NewDocumentCommand\DiagramSquare{D&lt;&gt;{}O{}m}{
    \begin{tikzpicture}[diagram,#2,baseline=(#1sw.base)]
      \__jon_tikz_render_square:nn {#1} {#3}
    \end{tikzpicture}
  }

  \ExplSyntaxOff
  %
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  % Primitives for drawing adjunction diagrams
  \tikzset{
    adj/w/.style = {},
    adj/e/.style = {},
    adj/left/.style = {-&gt;},
    adj/right/.style = {-&gt;},
    adj/left/node/.style = {above},
    adj/right/node/.style = {below},
  }

  \ExplSyntaxOn

  \bool_new:N \l_fnd_glue_west

  \keys_define:nn { fnd-tikz/adj-diagram } {
    w .tl_set:N = \l_fnd_tikz_adj_diagram_w,
    e .tl_set:N = \l_fnd_tikz_adj_diagram_e,

    width .tl_set:N = \l_fnd_tikz_adj_diagram_width,

    left .tl_set:N = \l_fnd_tikz_adj_diagram_left,
    right .tl_set:N = \l_fnd_tikz_adj_diagram_right,

    glue .choice:,
    glue / west .code:n = {\bool_set:Nn \l_fnd_glue_west \c_true_bool},
    glue~target .tl_set:N = \l_fnd_tikz_glue_target,

    w/style .code:n = {\tikzset{adj/w/.style = {#1}}},
    e/style .code:n = {\tikzset{adj/e/.style = {#1}}},

    left/style .code:n = {\tikzset{adj/left/.style = {#1}}},
    left/node/style .code:n = {\tikzset{adj/left/node/.style = {#1}}},
    right/style .code:n = {\tikzset{adj/right/.style = {#1}}},
    right/node/style .code:n = {\tikzset{adj/right/node/.style = {#1}}},

    draft .meta:n = {
      e = {\__fnd_tikz_adj_diagram_fmt_placeholder:n {e}},
      w = {\__fnd_tikz_adj_diagram_fmt_placeholder:n {w}},
      left = {\__fnd_tikz_adj_diagram_fmt_placeholder:n {left}},
      right = {\__fnd_tikz_adj_diagram_fmt_placeholder:n {right}},
    }
  }

  \tl_set:Nn \l_fnd_tikz_adj_diagram_width { 2cm }

  \cs_new:Npn \__fnd_tikz_adj_diagram_fmt_placeholder:n #1 {
    \texttt{\textcolor{red}{#1}}
  }

  \keys_set:nn { fnd-tikz/adj-diagram } {
    glue~target = {},
  }

  \cs_new:Nn \__fnd_tikz_render_adj_diagram:n {
    \group_begin:
    \keys_set:nn {fnd-tikz/adj-diagram} {#1} {
      % gluing will be implemented when I need it
      \node (w) [adj/w] {$\l_fnd_tikz_adj_diagram_w$};
      \node (e) [right=\l_fnd_tikz_adj_diagram_width~of~w,adj/e] {$\l_fnd_tikz_adj_diagram_e$};
        \draw [morphism,adj/left,offset=.15cm] (e) to node[adj/left/node] (n) {$\l_fnd_tikz_adj_diagram_left$} (w);
        \draw [morphism,adj/right,offset=.15cm] (w) to node[adj/right/node] (s) {$\l_fnd_tikz_adj_diagram_right$} (e);
        \path [morphism] (s) to node[rotate=-90] {$\dashv$} (n);
    }
    \group_end:
  }

  \NewDocumentCommand\AdjDiagram{m}{
    \begin{tikzpicture}[diagram]
      \__fnd_tikz_render_adj_diagram:n {#1}
    \end{tikzpicture}
  }
  
  \ExplSyntaxOff
  %
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 
    </fr:embedded-tex-preamble><fr:embedded-tex-body>
   \DiagramSquare {
    nw = FX  \otimes   1 _{ 
   \mathcal { D } 
 },
    sw = FX  \otimes  F 1 _{ 
   \mathcal { C } 
 },
    se = F(X  \otimes   1 _{ 
   \mathcal { C } 
 }),
    ne = FX,
    east = F \rho _{ 
   \mathcal { C } 
 },
    west = FX  \otimes   \phi ^{1} ,
    north =  \rho _{ 
   \mathcal { D } 
 },
    south =  \phi ^{2} _{ X , 1 _{ 
   \mathcal { C } 
 } } ,
    height = 2cm,
    width = 3cm,
  }
</fr:embedded-tex-body></fr:embedded-tex>
  
</fr:mainmatter></fr:tree></fr:mainmatter></fr:tree><fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="false"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"><fr:frontmatter><fr:anchor>522</fr:anchor><fr:taxon>Lemma</fr:taxon><fr:addr>topo-0007</fr:addr><fr:route>topo-0007.xml</fr:route><fr:title>Monomorphisms are equalizers in a <fr:link
href="topo-0001.xml"
type="local"
addr="topo-0001">topos</fr:link></fr:title><fr:date><fr:year>2024</fr:year><fr:month>5</fr:month><fr:day>27</fr:day></fr:date><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>In a <fr:link
href="topo-0001.xml"
type="local"
addr="topo-0001">topos</fr:link>, every monomorphism is an equalizer.</fr:p>
  
    
    <fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="false"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"><fr:frontmatter><fr:anchor>309</fr:anchor><fr:taxon>Proof</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>5</fr:month><fr:day>27</fr:day></fr:date><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors><fr:parent>topo-0007</fr:parent></fr:frontmatter><fr:mainmatter>
  Since <fr:tex>{ \top } \colon { 1 } \to { \Omega }</fr:tex> is a split monomorphism, it is the equalizer of <fr:tex>\mathsf {id}_{ \Omega }</fr:tex> and <fr:tex>\Omega   \xrightarrow {{ \mathsf {!}_{ \Omega } }}  1  \xrightarrow {{ \top }}   \Omega</fr:tex>.
  Since every monomorphism is a pullback against <fr:tex>\top</fr:tex>, it follows that every monomorphism is an equalizer.
</fr:mainmatter></fr:tree>
  
</fr:mainmatter></fr:tree><fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="false"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"><fr:frontmatter><fr:anchor>524</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>mnc-0004</fr:addr><fr:route>mnc-0004.xml</fr:route><fr:title>Strict <fr:link
href="mnc-0001.xml"
type="local"
addr="mnc-0001">monoidal category</fr:link></fr:title><fr:date><fr:year>2024</fr:year><fr:month>5</fr:month><fr:day>27</fr:day></fr:date><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>A <fr:link
href="mnc-0001.xml"
type="local"
addr="mnc-0001">monoidal category</fr:link> is said to be <fr:em><fr:strong>strict</fr:strong></fr:em> if <fr:tex>\alpha</fr:tex>, <fr:tex>\lambda</fr:tex>, and <fr:tex>\rho</fr:tex> are all identities.</fr:p></fr:mainmatter></fr:tree><fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="false"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"><fr:frontmatter><fr:anchor>526</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>mnc-000A</fr:addr><fr:route>mnc-000A.xml</fr:route><fr:title>Strict <fr:link
href="mnc-0005.xml"
type="local"
addr="mnc-0005">monoidal functor</fr:link></fr:title><fr:date><fr:year>2024</fr:year><fr:month>5</fr:month><fr:day>27</fr:day></fr:date><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>A <fr:link
href="mnc-0005.xml"
type="local"
addr="mnc-0005">monoidal functor</fr:link> is said to be <fr:em><fr:strong>strict</fr:strong></fr:em> if <fr:tex>\phi ^{2}</fr:tex> and <fr:tex>\phi ^{1}</fr:tex> are identities.</fr:p></fr:mainmatter></fr:tree><fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="false"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"><fr:frontmatter><fr:anchor>528</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>mnc-0009</fr:addr><fr:route>mnc-0009.xml</fr:route><fr:title>Strong <fr:link
href="mnc-0005.xml"
type="local"
addr="mnc-0005">monoidal functor</fr:link></fr:title><fr:date><fr:year>2024</fr:year><fr:month>5</fr:month><fr:day>27</fr:day></fr:date><fr:authors><fr:author><fr:link
href="frankndrssn.xml"
type="local"
addr="frankndrssn">Frank Tsai</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>A <fr:link
href="mnc-0005.xml"
type="local"
addr="mnc-0005">monoidal functor</fr:link> is said to be <fr:em><fr:strong>strong</fr:strong></fr:em> if <fr:tex>\phi ^{2}</fr:tex> and <fr:tex>\phi ^{1}</fr:tex> are isomorphisms.</fr:p></fr:mainmatter></fr:tree></fr:mainmatter></fr:tree></fr:mainmatter></fr:tree></fr:mainmatter></fr:tree></fr:backlinks><fr:references></fr:references></fr:backmatter></fr:tree>